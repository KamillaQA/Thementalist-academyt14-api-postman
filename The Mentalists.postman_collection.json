{
	"info": {
		"_postman_id": "04615faf-3940-493a-9df6-4fa63eab22c3",
		"name": "The Mentalists",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "43298803",
		"_collection_link": "https://orange-comet-906074.postman.co/workspace/The-Mentalists---TQA~60399a91-a61e-425e-819b-ac7b73074a64/collection/43298803-04615faf-3940-493a-9df6-4fa63eab22c3?action=share&source=collection_link&creator=43298803"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "Login Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Salva o token no ambiente \r",
									"const token = pm.response.json().token;\r",
									"if (token) {\r",
									"    pm.environment.set(\"tokenAdmin\", token);\r",
									"}\r",
									"\r",
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verificar se o token é valido\", function () {\r",
									"    const token = pm.response.json().token;\r",
									"    pm.expect(token).to.be.a(\"string\").and.not.empty;\r",
									"});\r",
									"\r",
									"pm.test(\"Login Efetuado com Sucesso\", () => {\r",
									"    pm.environment.set(\"msgAdmin\", pm.response.json().msg);\r",
									"});\r",
									"\r",
									"pm.test(\"Verificar se ID do usuário existe\", () => {\r",
									"    const id = pm.response.json().user && pm.response.json().user._id;\r",
									"    pm.expect(id).to.be.a(\"string\").and.not.empty;\r",
									"    pm.environment.set(\"IDAdmin\", id);\r",
									"});\r",
									"\r",
									"pm.test(\"Mensagem contém nome de usuário e autenticação\", () => {\r",
									"    const resposta = pm.response.json();\r",
									"    const msg = resposta.msg;\r",
									"\r",
									"    pm.expect(msg).to.be.a(\"string\").and.not.empty;\r",
									"\r",
									"    const regex = /^Olá (.+), autenticação autorizada com sucesso!$/;\r",
									"    const match = msg.match(regex);\r",
									"\r",
									"    pm.expect(match).to.not.be.null;\r",
									"\r",
									"    // Salva o nome extraído como variável de ambiente\r",
									"    const nomeUsuario = match[1];\r",
									"    pm.environment.set(\"NomeUsuarioLogado\", nomeUsuario);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"mail\": \"{{mailAdmin}}\",\r\n    \"password\": \"{{PassAdmin}}\"\r\n}\r\n\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}login/",
							"host": [
								"{{url}}login"
							],
							"path": [
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Validar Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}validateToken",
							"host": [
								"{{url}}validateToken"
							]
						}
					},
					"response": []
				},
				{
					"name": "Campo Email é Obrigatório",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const request = JSON.parse(pm.request.body.raw);\r",
									"const responseCode = pm.response.code;\r",
									"const responseBody = pm.response.json();\r",
									"const mensagem = responseBody.message || responseBody.error || responseBody.detail || \"\";\r",
									"\r",
									"// Teste 1: Campo email é obrigatório (apenas se o campo estiver ausente ou vazio)\r",
									"if (!request.mail || request.mail.trim() === \"\") {\r",
									"    pm.test(\"Status 400 - Campo email é obrigatório\", () => {\r",
									"        pm.response.to.have.status(400);\r",
									"    });\r",
									"}\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"mail\": \"\",\r\n    \"password\": \"{{PassAdmin}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}login/",
							"host": [
								"{{url}}login"
							],
							"path": [
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Campo Senha é Obrigatório",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const request = JSON.parse(pm.request.body.raw);\r",
									"const responseCode = pm.response.code;\r",
									"const responseBody = pm.response.json();\r",
									"const mensagem = responseBody.message || responseBody.error || responseBody.detail || \"\";\r",
									"\r",
									"// Teste 1: Campo Senha é obrigatório (apenas se o campo estiver ausente ou vazio)\r",
									"if (!request.password || request.password.trim() === \"\") {\r",
									"    pm.test(\"Status 400 - Campo Senha é obrigatório\", () => {\r",
									"        pm.response.to.have.status(400);\r",
									"    });\r",
									"}\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"mail\": \"{{Mail}}\",\r\n    \"password\": \"\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}login/",
							"host": [
								"{{url}}login"
							],
							"path": [
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Formato de Email Inválido",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseCode = pm.response.code;\r",
									"const responseBody = pm.response.json();\r",
									"const mensagem = responseBody.alert || responseBody.message || \"\";\r",
									"\r",
									"\r",
									"pm.test(\"Status 400 - E-mail ou senha inválidos\", () => {\r",
									"    pm.expect(responseCode).to.eql(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Mensagem de erro correta\", () => {\r",
									"    const resposta = pm.response.json();\r",
									"    pm.expect(resposta.alert).to.eql(\"E-mail ou senha informados são inválidos.\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"mail\": \"jsajhkhas@@gmail.com\",\r\n    \"password\": \"{{PassAdmin}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}login/",
							"host": [
								"{{url}}login"
							],
							"path": [
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Formato de Senha Inválida",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseCode = pm.response.code;\r",
									"const responseBody = pm.response.json();\r",
									"const mensagem = responseBody.alert || responseBody.message || \"\";\r",
									"\r",
									"\r",
									"pm.test(\"Status 400 - Formato de senha inválida\", () => {\r",
									"    pm.expect(responseCode).to.eql(400);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"E-mail ou senha informados são inválidos\", () => {\r",
									"    const resposta = pm.response.json();\r",
									"    pm.expect(resposta.alert).to.eql(\"E-mail ou senha informados são inválidos.\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"mail\": \"{{mailAdmin}}\",\r\n    \"password\": \"@@ubfebube\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}login/",
							"host": [
								"{{url}}login"
							],
							"path": [
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "User",
			"item": [
				{
					"name": "CREATE",
					"item": [
						{
							"name": "Registro de Novo usuário",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", () => {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Verificar Mensagem de cadastro correta com nome retornado\", () => {\r",
											"    const resposta = pm.response.json();\r",
											"    const nomeNaResposta = resposta.user.fullName;\r",
											"    const expectedMessage = `Olá ${nomeNaResposta}, cadastro realizado com sucesso.`;\r",
											"    pm.expect(resposta.msg).to.eql(expectedMessage);\r",
											"});\r",
											"\r",
											"pm.test(\"User ID is present\", () => {\r",
											"    const resposta = pm.response.json();\r",
											"    pm.expect(resposta.user._id).to.not.be.undefined;\r",
											"    pm.environment.set(\"IDUser\", resposta.user._id);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\": \"{{fullName}}\",\r\n  \"mail\": \"{{Mail}}\",\r\n  \"accessProfile\": \"ADMIN\",\r\n  \"cpf\": \"{{CPF}}\",\r\n  \"password\": \"1234@Test\",\r\n  \"confirmPassword\": \"1234@Test\"\r\n}/*\r\n{\r\n  \"fullName\": \"Kamilla Prado\",\r\n  \"mail\": \"kprado@qacoders.com.br\",\r\n  \"accessProfile\": \"ADMIN\",\r\n  \"cpf\": \"49495217823\",\r\n  \"password\": \"Websupply@25\",\r\n  \"confirmPassword\": \"Websupply@25\"\r\n}*/",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}user/",
									"host": [
										"{{url}}user"
									],
									"path": [
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Cadastro de Usuário Apenas Com Um Nome",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Cadastro de usuário com apenas um nome\", () => {\r",
											"    const resposta = pm.response.json();\r",
											"    pm.expect(resposta.error[0]).to.eql(\"Informe o nome e sobrenome com as iniciais em letra maiúscula e sem caracteres especiais.\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"packages": {},
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\": \"Teste\",\r\n  \"mail\": \"{{Mail}}\",\r\n  \"accessProfile\": \"ADMIN\",\r\n  \"cpf\": \"{{CPF}}\",\r\n  \"password\": \"{{passUser}}\",\r\n  \"confirmPassword\": \"{{passUser}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}user/",
									"host": [
										"{{url}}user"
									],
									"path": [
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Não permitir mais de 100 caracteres",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 400\", () => {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Verificar retorno da mensagem\", () => {\r",
											"    const resposta = pm.response.json();\r",
											"    pm.expect(resposta.error[0]).to.eql(\"Informe o nome e sobrenome com as iniciais em letra maiúscula e sem caracteres especiais.\");\r",
											"});\r",
											"\r",
											"pm.test(\"Nome com mais de 100 caracteres não deve ser aceito\", () => {\r",
											"    const nome = JSON.parse(pm.request.body.raw).fullName;\r",
											"    pm.expect(nome.length).to.be.above(100);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\": \"João da Silva Pereira dos Santos Andrade Costa e Souza Lima Oliveira Barbosa de Medeiros Rocha Xavier\",\r\n  \"mail\": \"{{Mail}}\",\r\n  \"accessProfile\": \"ADMIN\",\r\n  \"cpf\": \"{{CPF}}\",\r\n  \"password\": \"{{passUser}}\",\r\n  \"confirmPassword\": \"{{passUser}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}user/",
									"host": [
										"{{url}}user"
									],
									"path": [
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Criação de usuário com letra acentuada",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 201\", () => {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\": \"Thaís Gomes\",\r\n  \"mail\": \"{{Mail}}\",\r\n  \"accessProfile\": \"ADMIN\",\r\n  \"cpf\": \"{{CPF}}\",\r\n  \"password\": \"{{passUser}}\",\r\n  \"confirmPassword\": \"{{passUser}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}user/",
									"host": [
										"{{url}}user"
									],
									"path": [
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Nome com números",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 400\", () => {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Não permitir nome com números\", () => {\r",
											"    const resposta = pm.response.json();\r",
											"    pm.expect(resposta.error[0]).to.eql(\"O campo nome completo não deve conter números\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \"fullName\": \"Kamil1a Prad0\",\r\n  \"mail\": \"{{Mail}}\",\r\n  \"accessProfile\": \"ADMIN\",\r\n  \"cpf\": \"{{CPF}}\",\r\n  \"password\": \"{{passUser}}\",\r\n  \"confirmPassword\": \"{{passUser}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}user/",
									"host": [
										"{{url}}user"
									],
									"path": [
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Nome com Caracteres Especiais",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 400\", () => {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Nome com caracteres especiais não deve ser aceito\", () => {\r",
											"    const nome = JSON.parse(pm.request.body.raw).nomeCompleto;\r",
											"    const regex = /^[A-Za-zÀ-ÿ\\s]+$/;\r",
											"    pm.expect(regex.test(nome)).to.be.true;\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\": \"Kamilla@-  Prado\",\r\n  \"mail\": \"{{Mail}}\",\r\n  \"accessProfile\": \"ADMIN\",\r\n  \"cpf\": \"{{CPF}}\",\r\n  \"password\": \"{{passUser}}\",\r\n  \"confirmPassword\": \"{{passUser}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}user/",
									"host": [
										"{{url}}user"
									],
									"path": [
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Nome Vazio",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 400\", () => {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Não permitir campo nome vazio\", () => {\r",
											"    const resposta = pm.response.json();\r",
											"    pm.expect(resposta.error[0]).to.eql(\"O campo nome completo é obrigatório.\");\r",
											"});\r",
											"\r",
											"\r",
											"if (!request.mail || request.msg.trim() === \"\") {\r",
											"    pm.test(\"Status 400 - Campo email é obrigatório\", () => {\r",
											"        pm.response.to.have.status(400);\r",
											"    });\r",
											"}\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\": \"\",\r\n  \"mail\": \"{{Mail}}\",\r\n  \"accessProfile\": \"ADMIN\",\r\n  \"cpf\": \"{{CPF}}\",\r\n  \"password\": \"{{passUser}}\",\r\n  \"confirmPassword\": \"{{passUser}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}user/",
									"host": [
										"{{url}}user"
									],
									"path": [
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "E-mail Vazio",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 400\", () => {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Não permitir campo e-mail vazio\", () => {\r",
											"    const resposta = pm.response.json();\r",
											"    pm.expect(resposta.error[0]).to.eql(\"O campo e-mail é obrigatório.\");\r",
											"});\r",
											"\r",
											"\r",
											"if (!request.mail || request.msg.trim() === \"\") {\r",
											"    pm.test(\"Status 400 - Campo email é obrigatório\", () => {\r",
											"        pm.response.to.have.status(400);\r",
											"    });\r",
											"}\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\": \"{{fullName}}\",\r\n  \"mail\": \"\",\r\n  \"accessProfile\": \"ADMIN\",\r\n  \"cpf\": \"{{CPF}}\",\r\n  \"password\": \"{{passUser}}\",\r\n  \"confirmPassword\": \"{{passUser}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}user/",
									"host": [
										"{{url}}user"
									],
									"path": [
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Registro de E-mail existente",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const req = JSON.parse(pm.request.body.raw || \"{}\");\r",
											"const resposta = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 409\", () => {\r",
											"    pm.response.to.have.status(409);\r",
											"});\r",
											"\r",
											"pm.test(\"E-mail já cadastrado.\", () => {\r",
											"    pm.expect(resposta.alert[0]).to.eql(\"E-mail já cadastrado.\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function firstname() {\r",
											"    const names = ['Alice', 'Miguel', 'Sophia', 'Arthur', 'Helena', 'Bernardo', 'Valentina', 'Heitor', 'Laura', 'Davi', 'Isabella', 'Lorenzo', 'Manuela', 'Theo', 'Luiza', 'Pedro', 'Giovanna', 'Gabriel', 'Julia'];\r",
											"    const randomName = names[Math.floor(Math.random() * names.length)]\r",
											"    return randomName\r",
											"}\r",
											"pm.environment.set(\"FirstName\", firstname())\r",
											" \r",
											"function lastname() {\r",
											"    const lastnames = ['Silva', 'Santos', 'Oliveira', 'Souza', 'Rodrigues', 'Almeida', 'Lima', 'Ferreira', 'Pereira', 'Carvalho', 'Goncalves', 'Ribeiro', 'Costa', 'Araujo', 'Martins', 'Fernandes'];\r",
											" \r",
											"    const randomLastName = lastnames[Math.floor(Math.random() * lastnames.length)]\r",
											"    return randomLastName\r",
											"}\r",
											"pm.environment.set(\"LastName\", lastname())\r",
											" \r",
											"pm.environment.set(\"FullName\", pm.environment.get(\"FirstName\") + \" \" + pm.environment.get(\"LastName\"))"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\": \"{{fullName}}\",\r\n  \"mail\": \"thais.gomes@qacoders.com.br\",\r\n  \"accessProfile\": \"ADMIN\",\r\n  \"cpf\": \"{{CPF}}\",\r\n  \"password\": \"{{passUser}}\",\r\n  \"confirmPassword\": \"{{passUser}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}user/",
									"host": [
										"{{url}}user"
									],
									"path": [
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "E-mail em formatos inválidos",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const req = JSON.parse(pm.request.body.raw || \"{}\");\r",
											"const resposta = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 400\", () => {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"E-mail sem domínio\", () => {\r",
											"    pm.expect(resposta.error[0]).to.eql(\"O e-mail informado é inválido. Informe um e-mail no formato [nome@domínio.com].\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function firstname() {\r",
											"    const names = ['Alice', 'Miguel', 'Sophia', 'Arthur', 'Helena', 'Bernardo', 'Valentina', 'Heitor', 'Laura', 'Davi', 'Isabella', 'Lorenzo', 'Manuela', 'Theo', 'Luiza', 'Pedro', 'Giovanna', 'Gabriel', 'Julia'];\r",
											"    const randomName = names[Math.floor(Math.random() * names.length)]\r",
											"    return randomName\r",
											"}\r",
											"pm.environment.set(\"FirstName\", firstname())\r",
											" \r",
											"function lastname() {\r",
											"    const lastnames = ['Silva', 'Santos', 'Oliveira', 'Souza', 'Rodrigues', 'Almeida', 'Lima', 'Ferreira', 'Pereira', 'Carvalho', 'Goncalves', 'Ribeiro', 'Costa', 'Araujo', 'Martins', 'Fernandes'];\r",
											" \r",
											"    const randomLastName = lastnames[Math.floor(Math.random() * lastnames.length)]\r",
											"    return randomLastName\r",
											"}\r",
											"pm.environment.set(\"LastName\", lastname())\r",
											" \r",
											"pm.environment.set(\"FullName\", pm.environment.get(\"FirstName\") + \" \" + pm.environment.get(\"LastName\"))"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\": \"{{fullName}}\",\r\n  \"mail\": \"thais.gomes\",\r\n  \"accessProfile\": \"ADMIN\",\r\n  \"cpf\": \"{{CPF}}\",\r\n  \"password\": \"{{passUser}}\",\r\n  \"confirmPassword\": \"{{passUser}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}user/",
									"host": [
										"{{url}}user"
									],
									"path": [
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Email: Gravação com sucesso",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const req = JSON.parse(pm.request.body.raw || \"{}\");\r",
											"const resposta = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 201\", () => {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Verificar Mensagem de cadastro correta com nome retornado\", () => {\r",
											"    const resposta = pm.response.json();\r",
											"    const nomeNaResposta = resposta.user.fullName;\r",
											"    const expectedMessage = `Olá ${nomeNaResposta}, cadastro realizado com sucesso.`;\r",
											"    pm.expect(resposta.msg).to.eql(expectedMessage);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function firstname() {\r",
											"    const names = ['Alice', 'Miguel', 'Sophia', 'Arthur', 'Helena', 'Bernardo', 'Valentina', 'Heitor', 'Laura', 'Davi', 'Isabella', 'Lorenzo', 'Manuela', 'Theo', 'Luiza', 'Pedro', 'Giovanna', 'Gabriel', 'Julia'];\r",
											"    const randomName = names[Math.floor(Math.random() * names.length)]\r",
											"    return randomName\r",
											"}\r",
											"pm.environment.set(\"FirstName\", firstname())\r",
											" \r",
											"function lastname() {\r",
											"    const lastnames = ['Silva', 'Santos', 'Oliveira', 'Souza', 'Rodrigues', 'Almeida', 'Lima', 'Ferreira', 'Pereira', 'Carvalho', 'Goncalves', 'Ribeiro', 'Costa', 'Araujo', 'Martins', 'Fernandes'];\r",
											" \r",
											"    const randomLastName = lastnames[Math.floor(Math.random() * lastnames.length)]\r",
											"    return randomLastName\r",
											"}\r",
											"pm.environment.set(\"LastName\", lastname())\r",
											" \r",
											"pm.environment.set(\"FullName\", pm.environment.get(\"FirstName\") + \" \" + pm.environment.get(\"LastName\"))"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\": \"{{fullName}}\",\r\n  \"mail\": \"{{Mail}}\",\r\n  \"accessProfile\": \"ADMIN\",\r\n  \"cpf\": \"{{CPF}}\",\r\n  \"password\": \"{{passUser}}\",\r\n  \"confirmPassword\": \"{{passUser}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}user/",
									"host": [
										"{{url}}user"
									],
									"path": [
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Campo senha Menor que 8 caracteres",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const resposta = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 400\", () => {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Senha menor do que o permitido\", () => {\r",
											"    pm.expect(resposta.error[0]).to.eql(\"Senha precisa ter: uma letra maiúscula, uma letra minúscula, um número, um caractere especial(@#$%) e tamanho entre 8-12.\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function firstname() {\r",
											"    const names = ['Alice', 'Miguel', 'Sophia', 'Arthur', 'Helena', 'Bernardo', 'Valentina', 'Heitor', 'Laura', 'Davi', 'Isabella', 'Lorenzo', 'Manuela', 'Theo', 'Luiza', 'Pedro', 'Giovanna', 'Gabriel', 'Julia'];\r",
											"    const randomName = names[Math.floor(Math.random() * names.length)]\r",
											"    return randomName\r",
											"}\r",
											"pm.environment.set(\"FirstName\", firstname())\r",
											" \r",
											"function lastname() {\r",
											"    const lastnames = ['Silva', 'Santos', 'Oliveira', 'Souza', 'Rodrigues', 'Almeida', 'Lima', 'Ferreira', 'Pereira', 'Carvalho', 'Goncalves', 'Ribeiro', 'Costa', 'Araujo', 'Martins', 'Fernandes'];\r",
											" \r",
											"    const randomLastName = lastnames[Math.floor(Math.random() * lastnames.length)]\r",
											"    return randomLastName\r",
											"}\r",
											"pm.environment.set(\"LastName\", lastname())\r",
											" \r",
											"pm.environment.set(\"FullName\", pm.environment.get(\"FirstName\") + \" \" + pm.environment.get(\"LastName\"))"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\": \"{{fullName}}\",\r\n  \"mail\": \"{{Mail}}\",\r\n  \"accessProfile\": \"ADMIN\",\r\n  \"cpf\": \"{{CPF}}\",\r\n  \"password\": \"123\",\r\n  \"confirmPassword\": \"{{passUser}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}user/",
									"host": [
										"{{url}}user"
									],
									"path": [
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Campo senha Maior que 12 caracteres",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const resposta = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 400\", () => {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Senha maior do que o permitido\", () => {\r",
											"    pm.expect(resposta.error[0]).to.eql(\"Senha precisa ter: uma letra maiúscula, uma letra minúscula, um número, um caractere especial(@#$%) e tamanho entre 8-12.\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function firstname() {\r",
											"    const names = ['Alice', 'Miguel', 'Sophia', 'Arthur', 'Helena', 'Bernardo', 'Valentina', 'Heitor', 'Laura', 'Davi', 'Isabella', 'Lorenzo', 'Manuela', 'Theo', 'Luiza', 'Pedro', 'Giovanna', 'Gabriel', 'Julia'];\r",
											"    const randomName = names[Math.floor(Math.random() * names.length)]\r",
											"    return randomName\r",
											"}\r",
											"pm.environment.set(\"FirstName\", firstname())\r",
											" \r",
											"function lastname() {\r",
											"    const lastnames = ['Silva', 'Santos', 'Oliveira', 'Souza', 'Rodrigues', 'Almeida', 'Lima', 'Ferreira', 'Pereira', 'Carvalho', 'Goncalves', 'Ribeiro', 'Costa', 'Araujo', 'Martins', 'Fernandes'];\r",
											" \r",
											"    const randomLastName = lastnames[Math.floor(Math.random() * lastnames.length)]\r",
											"    return randomLastName\r",
											"}\r",
											"pm.environment.set(\"LastName\", lastname())\r",
											" \r",
											"pm.environment.set(\"FullName\", pm.environment.get(\"FirstName\") + \" \" + pm.environment.get(\"LastName\"))"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\": \"{{fullName}}\",\r\n  \"mail\": \"{{Mail}}\",\r\n  \"accessProfile\": \"ADMIN\",\r\n  \"cpf\": \"{{CPF}}\",\r\n  \"password\": \"012345678912\",\r\n  \"confirmPassword\": \"{{passUser}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}user/",
									"host": [
										"{{url}}user"
									],
									"path": [
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Campo senha sem letras minúsculas",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const resposta = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 400\", () => {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Senha sem letras minúsculas\", () => {\r",
											"    pm.expect(resposta.error[0]).to.eql(\"Senha precisa ter: uma letra maiúscula, uma letra minúscula, um número, um caractere especial(@#$%) e tamanho entre 8-12.\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function firstname() {\r",
											"    const names = ['Alice', 'Miguel', 'Sophia', 'Arthur', 'Helena', 'Bernardo', 'Valentina', 'Heitor', 'Laura', 'Davi', 'Isabella', 'Lorenzo', 'Manuela', 'Theo', 'Luiza', 'Pedro', 'Giovanna', 'Gabriel', 'Julia'];\r",
											"    const randomName = names[Math.floor(Math.random() * names.length)]\r",
											"    return randomName\r",
											"}\r",
											"pm.environment.set(\"FirstName\", firstname())\r",
											" \r",
											"function lastname() {\r",
											"    const lastnames = ['Silva', 'Santos', 'Oliveira', 'Souza', 'Rodrigues', 'Almeida', 'Lima', 'Ferreira', 'Pereira', 'Carvalho', 'Goncalves', 'Ribeiro', 'Costa', 'Araujo', 'Martins', 'Fernandes'];\r",
											" \r",
											"    const randomLastName = lastnames[Math.floor(Math.random() * lastnames.length)]\r",
											"    return randomLastName\r",
											"}\r",
											"pm.environment.set(\"LastName\", lastname())\r",
											" \r",
											"pm.environment.set(\"FullName\", pm.environment.get(\"FirstName\") + \" \" + pm.environment.get(\"LastName\"))"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\": \"{{fullName}}\",\r\n  \"mail\": \"{{Mail}}\",\r\n  \"accessProfile\": \"ADMIN\",\r\n  \"cpf\": \"{{CPF}}\",\r\n  \"password\": \"TESTEJKE\",\r\n  \"confirmPassword\": \"{{passUser}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}user/",
									"host": [
										"{{url}}user"
									],
									"path": [
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Campo senha sem letras maiúsculas",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const resposta = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 400\", () => {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Senha sem letras maiúsculas\", () => {\r",
											"    pm.expect(resposta.error[0]).to.eql(\"Senha precisa ter: uma letra maiúscula, uma letra minúscula, um número, um caractere especial(@#$%) e tamanho entre 8-12.\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function firstname() {\r",
											"    const names = ['Alice', 'Miguel', 'Sophia', 'Arthur', 'Helena', 'Bernardo', 'Valentina', 'Heitor', 'Laura', 'Davi', 'Isabella', 'Lorenzo', 'Manuela', 'Theo', 'Luiza', 'Pedro', 'Giovanna', 'Gabriel', 'Julia'];\r",
											"    const randomName = names[Math.floor(Math.random() * names.length)]\r",
											"    return randomName\r",
											"}\r",
											"pm.environment.set(\"FirstName\", firstname())\r",
											" \r",
											"function lastname() {\r",
											"    const lastnames = ['Silva', 'Santos', 'Oliveira', 'Souza', 'Rodrigues', 'Almeida', 'Lima', 'Ferreira', 'Pereira', 'Carvalho', 'Goncalves', 'Ribeiro', 'Costa', 'Araujo', 'Martins', 'Fernandes'];\r",
											" \r",
											"    const randomLastName = lastnames[Math.floor(Math.random() * lastnames.length)]\r",
											"    return randomLastName\r",
											"}\r",
											"pm.environment.set(\"LastName\", lastname())\r",
											" \r",
											"pm.environment.set(\"FullName\", pm.environment.get(\"FirstName\") + \" \" + pm.environment.get(\"LastName\"))"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\": \"{{fullName}}\",\r\n  \"mail\": \"{{Mail}}\",\r\n  \"accessProfile\": \"ADMIN\",\r\n  \"cpf\": \"{{CPF}}\",\r\n  \"password\": \"ahsriets\",\r\n  \"confirmPassword\": \"{{passUser}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}user/",
									"host": [
										"{{url}}user"
									],
									"path": [
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Campo senha sem número",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const resposta = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 400\", () => {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Campo senha sem número\", () => {\r",
											"    pm.expect(resposta.error[0]).to.eql(\"Senha precisa ter: uma letra maiúscula, uma letra minúscula, um número, um caractere especial(@#$%) e tamanho entre 8-12.\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function firstname() {\r",
											"    const names = ['Alice', 'Miguel', 'Sophia', 'Arthur', 'Helena', 'Bernardo', 'Valentina', 'Heitor', 'Laura', 'Davi', 'Isabella', 'Lorenzo', 'Manuela', 'Theo', 'Luiza', 'Pedro', 'Giovanna', 'Gabriel', 'Julia'];\r",
											"    const randomName = names[Math.floor(Math.random() * names.length)]\r",
											"    return randomName\r",
											"}\r",
											"pm.environment.set(\"FirstName\", firstname())\r",
											" \r",
											"function lastname() {\r",
											"    const lastnames = ['Silva', 'Santos', 'Oliveira', 'Souza', 'Rodrigues', 'Almeida', 'Lima', 'Ferreira', 'Pereira', 'Carvalho', 'Goncalves', 'Ribeiro', 'Costa', 'Araujo', 'Martins', 'Fernandes'];\r",
											" \r",
											"    const randomLastName = lastnames[Math.floor(Math.random() * lastnames.length)]\r",
											"    return randomLastName\r",
											"}\r",
											"pm.environment.set(\"LastName\", lastname())\r",
											" \r",
											"pm.environment.set(\"FullName\", pm.environment.get(\"FirstName\") + \" \" + pm.environment.get(\"LastName\"))"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\": \"{{fullName}}\",\r\n  \"mail\": \"{{Mail}}\",\r\n  \"accessProfile\": \"ADMIN\",\r\n  \"cpf\": \"{{CPF}}\",\r\n  \"password\": \"Testeabdc\",\r\n  \"confirmPassword\": \"{{passUser}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}user/",
									"host": [
										"{{url}}user"
									],
									"path": [
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Campo senha sem caractere especial",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const resposta = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 400\", () => {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Campo senha sem caractere especial\", () => {\r",
											"    pm.expect(resposta.error[0]).to.eql(\"Senha precisa ter: uma letra maiúscula, uma letra minúscula, um número, um caractere especial(@#$%) e tamanho entre 8-12.\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function firstname() {\r",
											"    const names = ['Alice', 'Miguel', 'Sophia', 'Arthur', 'Helena', 'Bernardo', 'Valentina', 'Heitor', 'Laura', 'Davi', 'Isabella', 'Lorenzo', 'Manuela', 'Theo', 'Luiza', 'Pedro', 'Giovanna', 'Gabriel', 'Julia'];\r",
											"    const randomName = names[Math.floor(Math.random() * names.length)]\r",
											"    return randomName\r",
											"}\r",
											"pm.environment.set(\"FirstName\", firstname())\r",
											" \r",
											"function lastname() {\r",
											"    const lastnames = ['Silva', 'Santos', 'Oliveira', 'Souza', 'Rodrigues', 'Almeida', 'Lima', 'Ferreira', 'Pereira', 'Carvalho', 'Goncalves', 'Ribeiro', 'Costa', 'Araujo', 'Martins', 'Fernandes'];\r",
											" \r",
											"    const randomLastName = lastnames[Math.floor(Math.random() * lastnames.length)]\r",
											"    return randomLastName\r",
											"}\r",
											"pm.environment.set(\"LastName\", lastname())\r",
											" \r",
											"pm.environment.set(\"FullName\", pm.environment.get(\"FirstName\") + \" \" + pm.environment.get(\"LastName\"))"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\": \"{{fullName}}\",\r\n  \"mail\": \"{{Mail}}\",\r\n  \"accessProfile\": \"ADMIN\",\r\n  \"cpf\": \"{{CPF}}\",\r\n  \"password\": \"Testea123\",\r\n  \"confirmPassword\": \"{{passUser}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}user/",
									"host": [
										"{{url}}user"
									],
									"path": [
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Campo senha Vazio",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const resposta = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 400\", () => {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Campo senha Vazio\", () => {\r",
											"    pm.expect(resposta.error[0]).to.eql(\"O campo senha é obrigatório\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function firstname() {\r",
											"    const names = ['Alice', 'Miguel', 'Sophia', 'Arthur', 'Helena', 'Bernardo', 'Valentina', 'Heitor', 'Laura', 'Davi', 'Isabella', 'Lorenzo', 'Manuela', 'Theo', 'Luiza', 'Pedro', 'Giovanna', 'Gabriel', 'Julia'];\r",
											"    const randomName = names[Math.floor(Math.random() * names.length)]\r",
											"    return randomName\r",
											"}\r",
											"pm.environment.set(\"FirstName\", firstname())\r",
											" \r",
											"function lastname() {\r",
											"    const lastnames = ['Silva', 'Santos', 'Oliveira', 'Souza', 'Rodrigues', 'Almeida', 'Lima', 'Ferreira', 'Pereira', 'Carvalho', 'Goncalves', 'Ribeiro', 'Costa', 'Araujo', 'Martins', 'Fernandes'];\r",
											" \r",
											"    const randomLastName = lastnames[Math.floor(Math.random() * lastnames.length)]\r",
											"    return randomLastName\r",
											"}\r",
											"pm.environment.set(\"LastName\", lastname())\r",
											" \r",
											"pm.environment.set(\"FullName\", pm.environment.get(\"FirstName\") + \" \" + pm.environment.get(\"LastName\"))"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\": \"{{fullName}}\",\r\n  \"mail\": \"{{Mail}}\",\r\n  \"accessProfile\": \"ADMIN\",\r\n  \"cpf\": \"{{CPF}}\",\r\n  \"password\": \"\",\r\n  \"confirmPassword\": \"{{passUser}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}user/",
									"host": [
										"{{url}}user"
									],
									"path": [
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Campo senha: Gravação com sucesso",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const resposta = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 201\", () => {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Verificar Mensagem de cadastro correta com nome retornado\", () => {\r",
											"    const resposta = pm.response.json();\r",
											"    const nomeNaResposta = resposta.user.fullName;\r",
											"    const expectedMessage = `Olá ${nomeNaResposta}, cadastro realizado com sucesso.`;\r",
											"    pm.expect(resposta.msg).to.eql(expectedMessage);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function firstname() {\r",
											"    const names = ['Alice', 'Miguel', 'Sophia', 'Arthur', 'Helena', 'Bernardo', 'Valentina', 'Heitor', 'Laura', 'Davi', 'Isabella', 'Lorenzo', 'Manuela', 'Theo', 'Luiza', 'Pedro', 'Giovanna', 'Gabriel', 'Julia'];\r",
											"    const randomName = names[Math.floor(Math.random() * names.length)]\r",
											"    return randomName\r",
											"}\r",
											"pm.environment.set(\"FirstName\", firstname())\r",
											" \r",
											"function lastname() {\r",
											"    const lastnames = ['Silva', 'Santos', 'Oliveira', 'Souza', 'Rodrigues', 'Almeida', 'Lima', 'Ferreira', 'Pereira', 'Carvalho', 'Goncalves', 'Ribeiro', 'Costa', 'Araujo', 'Martins', 'Fernandes'];\r",
											" \r",
											"    const randomLastName = lastnames[Math.floor(Math.random() * lastnames.length)]\r",
											"    return randomLastName\r",
											"}\r",
											"pm.environment.set(\"LastName\", lastname())\r",
											" \r",
											"pm.environment.set(\"FullName\", pm.environment.get(\"FirstName\") + \" \" + pm.environment.get(\"LastName\"))"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\": \"{{fullName}}\",\r\n  \"mail\": \"{{Mail}}\",\r\n  \"accessProfile\": \"ADMIN\",\r\n  \"cpf\": \"{{CPF}}\",\r\n  \"password\": \"{{passUser}}\",\r\n  \"confirmPassword\": \"{{passUser}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}user/",
									"host": [
										"{{url}}user"
									],
									"path": [
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Campo confirmar senha incorreto",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const resposta = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 400\", () => {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Campo confirmar senha incorreto\", () => {\r",
											"    pm.expect(resposta.error[0]).to.eql(\"As senhas não conferem.\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function firstname() {\r",
											"    const names = ['Alice', 'Miguel', 'Sophia', 'Arthur', 'Helena', 'Bernardo', 'Valentina', 'Heitor', 'Laura', 'Davi', 'Isabella', 'Lorenzo', 'Manuela', 'Theo', 'Luiza', 'Pedro', 'Giovanna', 'Gabriel', 'Julia'];\r",
											"    const randomName = names[Math.floor(Math.random() * names.length)]\r",
											"    return randomName\r",
											"}\r",
											"pm.environment.set(\"FirstName\", firstname())\r",
											" \r",
											"function lastname() {\r",
											"    const lastnames = ['Silva', 'Santos', 'Oliveira', 'Souza', 'Rodrigues', 'Almeida', 'Lima', 'Ferreira', 'Pereira', 'Carvalho', 'Goncalves', 'Ribeiro', 'Costa', 'Araujo', 'Martins', 'Fernandes'];\r",
											" \r",
											"    const randomLastName = lastnames[Math.floor(Math.random() * lastnames.length)]\r",
											"    return randomLastName\r",
											"}\r",
											"pm.environment.set(\"LastName\", lastname())\r",
											" \r",
											"pm.environment.set(\"FullName\", pm.environment.get(\"FirstName\") + \" \" + pm.environment.get(\"LastName\"))"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\": \"{{fullName}}\",\r\n  \"mail\": \"{{Mail}}\",\r\n  \"accessProfile\": \"ADMIN\",\r\n  \"cpf\": \"{{CPF}}\",\r\n  \"password\": \"{{passUser}}\",\r\n  \"confirmPassword\": \"Websupply_25\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}user/",
									"host": [
										"{{url}}user"
									],
									"path": [
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Campo confirmar senha vazio",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const resposta = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 400\", () => {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Campo confirmar senha vazio\", () => {\r",
											"    pm.expect(resposta.error[0]).to.eql(\"O campo de confirmação de senha é obrigatório.\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function firstname() {\r",
											"    const names = ['Alice', 'Miguel', 'Sophia', 'Arthur', 'Helena', 'Bernardo', 'Valentina', 'Heitor', 'Laura', 'Davi', 'Isabella', 'Lorenzo', 'Manuela', 'Theo', 'Luiza', 'Pedro', 'Giovanna', 'Gabriel', 'Julia'];\r",
											"    const randomName = names[Math.floor(Math.random() * names.length)]\r",
											"    return randomName\r",
											"}\r",
											"pm.environment.set(\"FirstName\", firstname())\r",
											" \r",
											"function lastname() {\r",
											"    const lastnames = ['Silva', 'Santos', 'Oliveira', 'Souza', 'Rodrigues', 'Almeida', 'Lima', 'Ferreira', 'Pereira', 'Carvalho', 'Goncalves', 'Ribeiro', 'Costa', 'Araujo', 'Martins', 'Fernandes'];\r",
											" \r",
											"    const randomLastName = lastnames[Math.floor(Math.random() * lastnames.length)]\r",
											"    return randomLastName\r",
											"}\r",
											"pm.environment.set(\"LastName\", lastname())\r",
											" \r",
											"pm.environment.set(\"FullName\", pm.environment.get(\"FirstName\") + \" \" + pm.environment.get(\"LastName\"))"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\": \"{{fullName}}\",\r\n  \"mail\": \"{{Mail}}\",\r\n  \"accessProfile\": \"ADMIN\",\r\n  \"cpf\": \"{{CPF}}\",\r\n  \"password\": \"{{passUser}}\",\r\n  \"confirmPassword\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}user/",
									"host": [
										"{{url}}user"
									],
									"path": [
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "CPF já cadastrado",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const resposta = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 409\", () => {\r",
											"    pm.response.to.have.status(409);\r",
											"});\r",
											"\r",
											"pm.test(\"CPF já cadastrado\", () => {\r",
											"    pm.expect(resposta.alert[0]).to.eql(\"O cpf informado já existe em nossa base de dados.\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function firstname() {\r",
											"    const names = ['Alice', 'Miguel', 'Sophia', 'Arthur', 'Helena', 'Bernardo', 'Valentina', 'Heitor', 'Laura', 'Davi', 'Isabella', 'Lorenzo', 'Manuela', 'Theo', 'Luiza', 'Pedro', 'Giovanna', 'Gabriel', 'Julia'];\r",
											"    const randomName = names[Math.floor(Math.random() * names.length)]\r",
											"    return randomName\r",
											"}\r",
											"pm.environment.set(\"FirstName\", firstname())\r",
											" \r",
											"function lastname() {\r",
											"    const lastnames = ['Silva', 'Santos', 'Oliveira', 'Souza', 'Rodrigues', 'Almeida', 'Lima', 'Ferreira', 'Pereira', 'Carvalho', 'Goncalves', 'Ribeiro', 'Costa', 'Araujo', 'Martins', 'Fernandes'];\r",
											" \r",
											"    const randomLastName = lastnames[Math.floor(Math.random() * lastnames.length)]\r",
											"    return randomLastName\r",
											"}\r",
											"pm.environment.set(\"LastName\", lastname())\r",
											" \r",
											"pm.environment.set(\"FullName\", pm.environment.get(\"FirstName\") + \" \" + pm.environment.get(\"LastName\"))"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\": \"{{fullName}}\",\r\n  \"mail\": \"{{Mail}}\",\r\n  \"accessProfile\": \"ADMIN\",\r\n  \"cpf\": \"49495217806\",\r\n  \"password\": \"{{passUser}}\",\r\n  \"confirmPassword\": \"{{passUser}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}user/",
									"host": [
										"{{url}}user"
									],
									"path": [
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Campo CPF em branco",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const resposta = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 400\", () => {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Campo CPF em branco\", () => {\r",
											"    pm.expect(resposta.error[0]).to.eql(\"O campo CPF é obrigatório!\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function firstname() {\r",
											"    const names = ['Alice', 'Miguel', 'Sophia', 'Arthur', 'Helena', 'Bernardo', 'Valentina', 'Heitor', 'Laura', 'Davi', 'Isabella', 'Lorenzo', 'Manuela', 'Theo', 'Luiza', 'Pedro', 'Giovanna', 'Gabriel', 'Julia'];\r",
											"    const randomName = names[Math.floor(Math.random() * names.length)]\r",
											"    return randomName\r",
											"}\r",
											"pm.environment.set(\"FirstName\", firstname())\r",
											" \r",
											"function lastname() {\r",
											"    const lastnames = ['Silva', 'Santos', 'Oliveira', 'Souza', 'Rodrigues', 'Almeida', 'Lima', 'Ferreira', 'Pereira', 'Carvalho', 'Goncalves', 'Ribeiro', 'Costa', 'Araujo', 'Martins', 'Fernandes'];\r",
											" \r",
											"    const randomLastName = lastnames[Math.floor(Math.random() * lastnames.length)]\r",
											"    return randomLastName\r",
											"}\r",
											"pm.environment.set(\"LastName\", lastname())\r",
											" \r",
											"pm.environment.set(\"FullName\", pm.environment.get(\"FirstName\") + \" \" + pm.environment.get(\"LastName\"))"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\": \"{{fullName}}\",\r\n  \"mail\": \"{{Mail}}\",\r\n  \"accessProfile\": \"ADMIN\",\r\n  \"cpf\": \"\",\r\n  \"password\": \"{{passUser}}\",\r\n  \"confirmPassword\": \"{{passUser}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}user/",
									"host": [
										"{{url}}user"
									],
									"path": [
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Campo CPF com mais de 11 dígitos",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const resposta = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 400\", () => {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Campo CPF com mais de 11 dígitos\", () => {\r",
											"    pm.expect(resposta.error[0]).to.eql(\"Deve preencher o CPF com 11 dígitos\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function firstname() {\r",
											"    const names = ['Alice', 'Miguel', 'Sophia', 'Arthur', 'Helena', 'Bernardo', 'Valentina', 'Heitor', 'Laura', 'Davi', 'Isabella', 'Lorenzo', 'Manuela', 'Theo', 'Luiza', 'Pedro', 'Giovanna', 'Gabriel', 'Julia'];\r",
											"    const randomName = names[Math.floor(Math.random() * names.length)]\r",
											"    return randomName\r",
											"}\r",
											"pm.environment.set(\"FirstName\", firstname())\r",
											" \r",
											"function lastname() {\r",
											"    const lastnames = ['Silva', 'Santos', 'Oliveira', 'Souza', 'Rodrigues', 'Almeida', 'Lima', 'Ferreira', 'Pereira', 'Carvalho', 'Goncalves', 'Ribeiro', 'Costa', 'Araujo', 'Martins', 'Fernandes'];\r",
											" \r",
											"    const randomLastName = lastnames[Math.floor(Math.random() * lastnames.length)]\r",
											"    return randomLastName\r",
											"}\r",
											"pm.environment.set(\"LastName\", lastname())\r",
											" \r",
											"pm.environment.set(\"FullName\", pm.environment.get(\"FirstName\") + \" \" + pm.environment.get(\"LastName\"))"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\": \"{{fullName}}\",\r\n  \"mail\": \"{{Mail}}\",\r\n  \"accessProfile\": \"ADMIN\",\r\n  \"cpf\": \"0123456789102\",\r\n  \"password\": \"{{passUser}}\",\r\n  \"confirmPassword\": \"{{passUser}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}user/",
									"host": [
										"{{url}}user"
									],
									"path": [
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Campo CPF com menos de 11 dígitos",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const resposta = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 400\", () => {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Campo CPF com menos de 11 dígitos\", () => {\r",
											"    pm.expect(resposta.error[0]).to.eql(\"Deve preencher o CPF com 11 dígitos\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function firstname() {\r",
											"    const names = ['Alice', 'Miguel', 'Sophia', 'Arthur', 'Helena', 'Bernardo', 'Valentina', 'Heitor', 'Laura', 'Davi', 'Isabella', 'Lorenzo', 'Manuela', 'Theo', 'Luiza', 'Pedro', 'Giovanna', 'Gabriel', 'Julia'];\r",
											"    const randomName = names[Math.floor(Math.random() * names.length)]\r",
											"    return randomName\r",
											"}\r",
											"pm.environment.set(\"FirstName\", firstname())\r",
											" \r",
											"function lastname() {\r",
											"    const lastnames = ['Silva', 'Santos', 'Oliveira', 'Souza', 'Rodrigues', 'Almeida', 'Lima', 'Ferreira', 'Pereira', 'Carvalho', 'Goncalves', 'Ribeiro', 'Costa', 'Araujo', 'Martins', 'Fernandes'];\r",
											" \r",
											"    const randomLastName = lastnames[Math.floor(Math.random() * lastnames.length)]\r",
											"    return randomLastName\r",
											"}\r",
											"pm.environment.set(\"LastName\", lastname())\r",
											" \r",
											"pm.environment.set(\"FullName\", pm.environment.get(\"FirstName\") + \" \" + pm.environment.get(\"LastName\"))"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\": \"{{fullName}}\",\r\n  \"mail\": \"{{Mail}}\",\r\n  \"accessProfile\": \"ADMIN\",\r\n  \"cpf\": \"0123456789\",\r\n  \"password\": \"{{passUser}}\",\r\n  \"confirmPassword\": \"{{passUser}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}user/",
									"host": [
										"{{url}}user"
									],
									"path": [
										""
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "UPDATE",
					"item": [
						{
							"name": "Login User",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Salva o token no ambiente \r",
											"const token = pm.response.json().token;\r",
											"if (token) {\r",
											"    pm.environment.set(\"tokenAdmin\", token);\r",
											"}\r",
											"\r",
											"pm.test(\"Status code is 200\", () => {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Verificar se o token é valido\", function () {\r",
											"    const token = pm.response.json().token;\r",
											"    pm.expect(token).to.be.a(\"string\").and.not.empty;\r",
											"});\r",
											"\r",
											"pm.test(\"Login Efetuado com Sucesso\", () => {\r",
											"    pm.environment.set(\"msgAdmin\", pm.response.json().msg);\r",
											"});\r",
											"\r",
											"pm.test(\"Verificar se ID do usuário existe\", () => {\r",
											"    const id = pm.response.json().user && pm.response.json().user._id;\r",
											"    pm.expect(id).to.be.a(\"string\").and.not.empty;\r",
											"    pm.environment.set(\"IDAdmin\", id);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagem contém nome de usuário e autenticação\", () => {\r",
											"    const resposta = pm.response.json();\r",
											"    const msg = resposta.msg;\r",
											"\r",
											"    pm.expect(msg).to.be.a(\"string\").and.not.empty;\r",
											"\r",
											"    const regex = /^Olá (.+), autenticação autorizada com sucesso!$/;\r",
											"    const match = msg.match(regex);\r",
											"\r",
											"    pm.expect(match).to.not.be.null;\r",
											"\r",
											"    // Salva o nome extraído como variável de ambiente\r",
											"    const nomeUsuario = match[1];\r",
											"    pm.environment.set(\"NomeUsuarioLogado\", nomeUsuario);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"mail\": \"kprado@qacoders.com.br\",\r\n    \"password\": \"Websupply@25\"\r\n}\r\n\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}login/",
									"host": [
										"{{url}}login"
									],
									"path": [
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Alterar Nome e E-mail de usuário logado com sucesso",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagem de sucesso recebida\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.msg).to.eql(\"Dados atualizados com sucesso!\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\": \"{{fullName}}\",\r\n  \"mail\": \"{{Mail}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}user/{{IDUser}}",
									"host": [
										"{{url}}user"
									],
									"path": [
										"{{IDUser}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Alterar campo Nome vazio",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagem de falha ao atualizar Dados\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.error[0]).to.eql(\"Informe o nome e sobrenome com as iniciais em letra maiúscula, sem o uso de caracteres especiais.\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenAdmin}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\": \" \",\r\n  \"mail\": \"kprado@qacoders.com.br\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}user/{{IDUser}}",
									"host": [
										"{{url}}user"
									],
									"path": [
										"{{IDUser}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Alterar do usuário logado com o campo Nome incompleto",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagem de falha ao atualizar Dados\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.error[0]).to.eql(\"Informe o nome e sobrenome com as iniciais em letra maiúscula, sem o uso de caracteres especiais.\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenAdmin}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\": \"Kamilla\",\r\n  \"mail\": \"k1prado@qacoders.com.br\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}user/{{IDUser}}",
									"host": [
										"{{url}}user"
									],
									"path": [
										"{{IDUser}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Alteração do campo nome deixando-o com letras, números e caracteres especiais.",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagem de falha ao atualizar Dados\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.error[0]).to.eql(\"Informe o nome e sobrenome com as iniciais em letra maiúscula, sem o uso de caracteres especiais.\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenAdmin}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\": \"Kamilla@prado\",\r\n  \"mail\": \"k1prado@qacoders.com.br\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}user/{{IDUser}}",
									"host": [
										"{{url}}user"
									],
									"path": [
										"{{IDUser}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Alteração do campo nome superior a 100 caracteres.",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagem de falha ao atualizar Dados\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.error[0]).to.eql(\"O nome completo deve ter no máximo 100 caracteres.\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\": \"Joana Cristiane da Silva Monteiro Albuquerque Fernandes de Souza Costa Lima Rodrigues Mendonça Cavalcantiakdgasig\",\r\n  \"mail\": \"k1prado@qacoders.com.br\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}user/{{IDUser}}",
									"host": [
										"{{url}}user"
									],
									"path": [
										"{{IDUser}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Alteração do campo Nome efetuada com sucesso.",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagem de sucesso atualizar Dados\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.msg).to.eql(\"Dados atualizados com sucesso!\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenAdmin}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\": \"Kamilla do Prado\",\r\n  \"mail\": \"kprado@qacoders.com.br\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}user/{{IDAdmin}}",
									"host": [
										"{{url}}user"
									],
									"path": [
										"{{IDAdmin}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Alterar o E-mail para um e-mail já existe em outro usuário",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagem de falha ao atualizar Dados\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.msg).to.eql(\"E-mail já cadastrado.\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\": \"Kamilla Prado\",\r\n  \"mail\": \"k1prado@qacoders.com.br\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}user/{{IDUser}}",
									"host": [
										"{{url}}user"
									],
									"path": [
										"{{IDUser}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Alteração campo E-mail vazio.",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagem de falha ao atualizar Dados\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.msg).to.eql(\"O campo e-mail é obrigatório\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\": \"Kamilla Prado\",\r\n  \"mail\": \" \"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}user/{{IDUser}}",
									"host": [
										"{{url}}user"
									],
									"path": [
										"{{IDUser}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Alteração campo email com formato inválido (ex: sem @ ou dominio)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagem de falha ao atualizar Dados\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.error[0]).to.eql(\"O e-mail informado é inválido. Informe um e-mail no formato [nome@domínio.com].\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenAdmin}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\": \"Kamilla Prado\",\r\n  \"mail\": \"kpradoqacoders.com.br\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}user/{{IDUser}}",
									"host": [
										"{{url}}user"
									],
									"path": [
										"{{IDUser}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Alterar confirmação de Senha diferente do campo Senha.",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagem de falha recebida\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.error[0]).to.eql(\"As senhas não conferem.\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"password\": \"1234@Test\",\r\n  \"confirmPassword\": \"1234_Test\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}user/password/{{IDUser}}",
									"host": [
										"{{url}}user"
									],
									"path": [
										"password",
										"{{IDUser}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Alterar Senha de usuário Logado para uma já existente",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 409\", function () {\r",
											"    pm.response.to.have.status(409);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagem de senha já utilizada\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.msg).to.eql(\"Essa senha já foi utilizada anteriormente. Por favor, escolha uma nova senha.\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"password\": \"1234@Test\",\r\n  \"confirmPassword\": \"1234@Test\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}user/password/{{IDUser}}",
									"host": [
										"{{url}}user"
									],
									"path": [
										"password",
										"{{IDUser}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Alterar Senha de usuário Logado com sucesso",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagem de senha atualizada\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.msg).to.eql(\"Senha atualizada com sucesso!\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"password\": \"{{Password}}\",\r\n  \"confirmPassword\": \"{{Password}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}user/password/{{IDUser}}",
									"host": [
										"{{url}}user"
									],
									"path": [
										"password",
										"{{IDUser}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Alterar Senha com o campo vazio",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagem de falha ao atualizar Dados\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.error[0]).to.eql(\"Campo senha é obrigatório\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"password\": \"\",\r\n  \"confirmPassword\": \"1234@Test\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}user/password/{{IDUser}}",
									"host": [
										"{{url}}user"
									],
									"path": [
										"password",
										"{{IDUser}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Alterar Senha com mais de 12 caracteres.",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagem de falha ao atualizar Dados\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.error[0]).to.eql(\"A senha deve ter entre 8 e 12 caracteres\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"password\": \"01234567891234\",\r\n  \"confirmPassword\": \"01234567891234\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}user/password/{{IDUser}}",
									"host": [
										"{{url}}user"
									],
									"path": [
										"password",
										"{{IDUser}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Alterar Senha com exatamente 12 caracteres.",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagem de falha ao atualizar Dados\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.error[0]).to.eql(\"Senha precisa ter: uma letra maiúscula, uma letra minúscula, um número, um caractere especial(@#$%) e tamanho entre 8-12.\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"password\": \"012345678901\",\r\n  \"confirmPassword\": \"012345678901\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}user/password/{{IDUser}}",
									"host": [
										"{{url}}user"
									],
									"path": [
										"password",
										"{{IDUser}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Alterar Senha com menos de 8 caracteres.",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagem de falha ao atualizar Dados\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.error[0]).to.eql(\"A senha deve ter entre 8 e 12 caracteres\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"password\": \"1234567\",\r\n  \"confirmPassword\": \"1234567\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}user/password/{{IDUser}}",
									"host": [
										"{{url}}user"
									],
									"path": [
										"password",
										"{{IDUser}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Alterar Senha somente com letras maiúsculas.",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagem de falha ao atualizar Dados\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.error[0]).to.eql(\"Senha precisa ter: uma letra maiúscula, uma letra minúscula, um número, um caractere especial(@#$%) e tamanho entre 8-12.\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"password\": \"ASDFGLER\",\r\n  \"confirmPassword\": \"ASDFGLER\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}user/password/{{IDUser}}",
									"host": [
										"{{url}}user"
									],
									"path": [
										"password",
										"{{IDUser}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Alterar Senha somente com letras minúsculas.",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagem de falha ao atualizar Dados\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.error[0]).to.eql(\"Senha precisa ter: uma letra maiúscula, uma letra minúscula, um número, um caractere especial(@#$%) e tamanho entre 8-12.\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"password\": \"asdvbnmh\",\r\n  \"confirmPassword\": \"asdvbnmh\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}user/password/{{IDUser}}",
									"host": [
										"{{url}}user"
									],
									"path": [
										"password",
										"{{IDUser}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Alterar Senha sem conter números.",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagem de falha ao atualizar Dados\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.error[0]).to.eql(\"Senha precisa ter: uma letra maiúscula, uma letra minúscula, um número, um caractere especial(@#$%) e tamanho entre 8-12.\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"password\": \"ABCher@Gr\",\r\n  \"confirmPassword\": \"ABCher@Gr\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}user/password/{{IDUser}}",
									"host": [
										"{{url}}user"
									],
									"path": [
										"password",
										"{{IDUser}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Alterar Senha sem conter caracteres especiais.",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagem de falha ao atualizar Dados\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.error[0]).to.eql(\"Senha precisa ter: uma letra maiúscula, uma letra minúscula, um número, um caractere especial(@#$%) e tamanho entre 8-12.\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"password\": \"ABCher12Gr\",\r\n  \"confirmPassword\": \"ABCher12Gr\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}user/password/{{IDUser}}",
									"host": [
										"{{url}}user"
									],
									"path": [
										"password",
										"{{IDUser}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Alterar confirmação de Senha vazio.",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagem de falha ao atualizar Dados\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.error[0]).to.eql(\"O campo de confirmação de senha não pode ficar vazio.\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"password\": \"{{Password}}\",\r\n  \"confirmPassword\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}user/password/{{IDUser}}",
									"host": [
										"{{url}}user"
									],
									"path": [
										"password",
										"{{IDUser}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Alterar E-mail com letras maiúsculas",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagem de confirmação ao atualizar Dados\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.msg).to.eql(\"Dados atualizados com sucesso!\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\": \"Kamilla Prado\",\r\n  \"mail\": \"Maria.SILVA@exemplo.com.br\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}user/{{IDUser}}",
									"host": [
										"{{url}}user"
									],
									"path": [
										"{{IDUser}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Alteração de Status",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagem de sucesso recebida\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.msg).to.eql(\"Status do usuario atualizado com sucesso para status false.\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenAdmin}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"status\": false\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}user/status/{{IDUser}}",
									"host": [
										"{{url}}user"
									],
									"path": [
										"status",
										"{{IDUser}}"
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "apikey",
						"apikey": [
							{
								"key": "value",
								"value": "{{TokenUser}}",
								"type": "string"
							},
							{
								"key": "key",
								"value": "Authorization",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									"function firstname() {\r",
									"    const names = ['Alice', 'Miguel', 'Sophia', 'Arthur', 'Helena', 'Bernardo', 'Valentina', 'Heitor', 'Laura', 'Davi', 'Isabella', 'Lorenzo', 'Manuela', 'Theo', 'Luiza', 'Pedro', 'Giovanna', 'Gabriel', 'Julia'];\r",
									"    const randomName = names[Math.floor(Math.random() * names.length)]\r",
									"    return randomName\r",
									"}\r",
									"pm.environment.set(\"FirstName\", firstname())\r",
									" \r",
									"function lastname() {\r",
									"    const lastnames = ['Silva', 'Santos', 'Oliveira', 'Souza', 'Rodrigues', 'Almeida', 'Lima', 'Ferreira', 'Pereira', 'Carvalho', 'Goncalves', 'Ribeiro', 'Costa', 'Araujo', 'Martins', 'Fernandes'];\r",
									" \r",
									"    const randomLastName = lastnames[Math.floor(Math.random() * lastnames.length)]\r",
									"    return randomLastName\r",
									"}\r",
									"pm.environment.set(\"LastName\", lastname())\r",
									" \r",
									"pm.environment.set(\"FullName\", pm.environment.get(\"FirstName\") + \" \" + pm.environment.get(\"LastName\"))"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "DELETE",
					"item": [
						{
							"name": "Excluir cadastro com um usuário que não existe",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagem de falha ao atualizar Dados\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.msg).to.eql(\"E-mail já cadastrado.\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenAdmin}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}user/688133ad232fb2bd065a0eb2",
									"host": [
										"{{url}}user"
									],
									"path": [
										"688133ad232fb2bd065a0eb2"
									]
								}
							},
							"response": []
						},
						{
							"name": "Excluir cadastro de usuário",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagem de sucesso ao deletar usuário\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.msg).to.eql(\"Usuário deletado com sucesso!.\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenAdmin}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}user/{{IDUser}}?token={{tokenAdmin}}",
									"host": [
										"{{url}}user"
									],
									"path": [
										"{{IDUser}}"
									],
									"query": [
										{
											"key": "",
											"value": null,
											"disabled": true
										},
										{
											"key": "token",
											"value": "{{tokenAdmin}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Exclusão inválida [enviar sem ID (Backend)]",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}user/",
									"host": [
										"{{url}}user"
									],
									"path": [
										""
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "apikey",
						"apikey": [
							{
								"key": "key",
								"value": "Authorization",
								"type": "string"
							},
							{
								"key": "value",
								"value": "{{TokenUser}}",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									"function firstname() {\r",
									"    const names = ['Alice', 'Miguel', 'Sophia', 'Arthur', 'Helena', 'Bernardo', 'Valentina', 'Heitor', 'Laura', 'Davi', 'Isabella', 'Lorenzo', 'Manuela', 'Theo', 'Luiza', 'Pedro', 'Giovanna', 'Gabriel', 'Julia'];\r",
									"    const randomName = names[Math.floor(Math.random() * names.length)]\r",
									"    return randomName\r",
									"}\r",
									"pm.environment.set(\"FirstName\", firstname())\r",
									" \r",
									"function lastname() {\r",
									"    const lastnames = ['Silva', 'Santos', 'Oliveira', 'Souza', 'Rodrigues', 'Almeida', 'Lima', 'Ferreira', 'Pereira', 'Carvalho', 'Goncalves', 'Ribeiro', 'Costa', 'Araujo', 'Martins', 'Fernandes'];\r",
									" \r",
									"    const randomLastName = lastnames[Math.floor(Math.random() * lastnames.length)]\r",
									"    return randomLastName\r",
									"}\r",
									"pm.environment.set(\"LastName\", lastname())\r",
									" \r",
									"pm.environment.set(\"FullName\", pm.environment.get(\"FirstName\") + \" \" + pm.environment.get(\"LastName\"))"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "SELECT",
					"item": [
						{
							"name": "Listar todos os usuários cadastrados (Backend)",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}user",
									"host": [
										"{{url}}user"
									]
								}
							},
							"response": []
						},
						{
							"name": "Listar o numero de usuários cadastrados (Backend)",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}user/count",
									"host": [
										"{{url}}user"
									],
									"path": [
										"count"
									]
								}
							},
							"response": []
						},
						{
							"name": "Listar usuário cadastrado por ID (Backend)",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}user/{{IDAdmin}}",
									"host": [
										"{{url}}user"
									],
									"path": [
										"{{IDAdmin}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Listar usuário deletado [ID inexistente (Backend)]",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}user/688133ad232fb2bd065a0eb2",
									"host": [
										"{{url}}user"
									],
									"path": [
										"688133ad232fb2bd065a0eb2"
									]
								}
							},
							"response": []
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							"// Função para gerar primeiro nome aleatório\r",
							"function firstname() {\r",
							"    const names = ['Alice', 'Miguel', 'Sophia', 'Arthur', 'Helena', 'Bernardo', 'Valentina', 'Heitor', 'Laura', 'Davi', 'Isabella', 'Lorenzo', 'Manuela', 'Theo', 'Luiza', 'Pedro', 'Giovanna', 'Gabriel', 'Julia'];\r",
							"    return names[Math.floor(Math.random() * names.length)];\r",
							"}\r",
							"pm.environment.set(\"FirstName\", firstname());\r",
							"\r",
							"// Função para gerar sobrenome aleatório\r",
							"function lastname() {\r",
							"    const lastnames = ['Silva', 'Santos', 'Oliveira', 'Souza', 'Rodrigues', 'Almeida', 'Lima', 'Ferreira', 'Pereira', 'Carvalho', 'Goncalves', 'Ribeiro', 'Costa', 'Araujo', 'Martins', 'Fernandes'];\r",
							"    return lastnames[Math.floor(Math.random() * lastnames.length)];\r",
							"}\r",
							"pm.environment.set(\"LastName\", lastname());\r",
							"\r",
							"// Nome completo e e-mail\r",
							"pm.environment.set(\"FullName\", pm.environment.get(\"FirstName\") + \" \" + pm.environment.get(\"LastName\"));\r",
							"pm.environment.set(\"Mail\", pm.environment.get(\"FullName\")\r",
							"    .toLowerCase()\r",
							"    .replace(/\\s/g, \"\")\r",
							"    .normalize(\"NFD\")\r",
							"    .replace(/[\\u0300-\\u036f]/g, \"\") + '@qacoders.com.br');\r",
							"\r",
							"// Função para embaralhar string\r",
							"function shuffleString(string) {\r",
							"    return string.split(\"\").sort(() => Math.random() - 0.5).join(\"\");\r",
							"}\r",
							"\r",
							"// Função para gerar senha compatível com regras da API\r",
							"function generatePassword() {\r",
							"    const upper = \"ABCDEFGHIJKLMNOPQRSTUVWXZ\";\r",
							"    const lower = \"abcdefghijklmnopqrstuvwxyz\";\r",
							"    const numbers = \"0123456789\";\r",
							"    const special = \"@#$%\";\r",
							"    const all = upper + lower + numbers + special;\r",
							"\r",
							"    let senhaArray = [];\r",
							"\r",
							"    // Garantir pelo menos um de cada tipo\r",
							"    senhaArray.push(upper[Math.floor(Math.random() * upper.length)]);\r",
							"    senhaArray.push(lower[Math.floor(Math.random() * lower.length)]);\r",
							"    senhaArray.push(numbers[Math.floor(Math.random() * numbers.length)]);\r",
							"    senhaArray.push(special[Math.floor(Math.random() * special.length)]);\r",
							"\r",
							"    // Tamanho aleatório entre 8 e 12\r",
							"    const totalLength = Math.floor(Math.random() * 5) + 8; // de 8 a 12\r",
							"\r",
							"    while (senhaArray.length < totalLength) {\r",
							"        senhaArray.push(all[Math.floor(Math.random() * all.length)]);\r",
							"    }\r",
							"\r",
							"    return shuffleString(senhaArray.join(\"\"));\r",
							"}\r",
							"\r",
							"const senha = generatePassword();\r",
							"pm.environment.set(\"Password\", senha);\r",
							"pm.environment.set(\"passUser\", senha); // se você usa {{passUser}} no body\r",
							"pm.environment.set(\"confirmPass\", senha); // se você usa {{confirmPass}} no body\r",
							"\r",
							"// Função para gerar CPF aleatório (sem validação de dígitos verificadores)\r",
							"function randomCpf() {\r",
							"    let cpf = '';\r",
							"    for (let i = 0; i < 11; i++) {\r",
							"        cpf += Math.floor(Math.random() * 10).toString();\r",
							"    }\r",
							"    return cpf;\r",
							"}\r",
							"pm.environment.set(\"CPF\", randomCpf());\r",
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Company",
			"item": [
				{
					"name": "SELECT",
					"item": [
						{
							"name": "Contagem de Empresas",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagem de sucesso com contagem de empresas\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('count');\r",
											"    pm.expect(typeof jsonData.count).to.eql('number');\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}company/count",
									"host": [
										"{{url}}company"
									],
									"path": [
										"count"
									]
								}
							},
							"response": [
								{
									"name": "200 - Sucess",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}company/count",
											"host": [
												"{{url}}company"
											],
											"path": [
												"count"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": null,
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Length",
											"value": "12"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 13 Aug 2025 18:50:57 GMT"
										},
										{
											"key": "Etag",
											"value": "W/\"c-BZq5SRBXoGHPOr8poxYD10hK+mQ\""
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										}
									],
									"cookie": [],
									"body": "{\n    \"count\": 49\n}"
								}
							]
						},
						{
							"name": "Listagem de Empresas",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 200\", () => {\r",
											"    pm.expect(pm.response.code).to.eql(200);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}company",
									"host": [
										"{{url}}company"
									]
								}
							},
							"response": [
								{
									"name": "200 - sucess",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}company",
											"host": [
												"{{url}}company"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": null,
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Length",
											"value": "34953"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 13 Aug 2025 18:37:11 GMT"
										},
										{
											"key": "Etag",
											"value": "W/\"8889-4mMtR71VGXW6v2VhhqrZuRr+HdE\""
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										}
									],
									"cookie": [],
									"body": "[\n    {\n        \"_id\": \"68815b45232fb2bd065a0ec7\",\n        \"corporateName\": \"Cibelae vasconcelos\",\n        \"registerCompany\": \"12126456000680\",\n        \"responsibleContact\": \"Marcio Soares\",\n        \"mail\": \"cibelea@test.com\",\n        \"telephone\": \"99999999999999\",\n        \"serviceDescription\": \"Testes\",\n        \"matriz\": \"Teste\",\n        \"status\": true,\n        \"address\": [\n            {\n                \"country\": \"Brasil\",\n                \"zipCode\": \"04777001\",\n                \"city\": \"São Paulo\",\n                \"state\": \"SP\",\n                \"district\": \"Rua das Flores\",\n                \"street\": \"Avenida Interlagos\",\n                \"number\": \"5085475989\",\n                \"complement\": \"de 4503 ao fim - lado ímpar\",\n                \"_id\": \"68815b45232fb2bd065a0ec8\"\n            }\n        ],\n        \"audit\": [\n            {\n                \"registeredBy\": {\n                    \"userId\": \"6859b68390bc38a248ffdb0e\",\n                    \"userLogin\": \"sysadmin@qacoders.com\"\n                },\n                \"registrationDate\": \"quarta-feira, 23/07/2025, 18:59:33 BRT\",\n                \"_id\": \"68815b45232fb2bd065a0ec9\"\n            }\n        ],\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"68815b74232fb2bd065a0ed1\",\n        \"corporateName\": \"Cibelaeb vasconcelos\",\n        \"registerCompany\": \"12123456000680\",\n        \"responsibleContact\": \"Marcio Soares\",\n        \"mail\": \"cibeleda@test.com\",\n        \"telephone\": \"99999999999999\",\n        \"serviceDescription\": \"Testes\",\n        \"matriz\": \"Teste\",\n        \"status\": true,\n        \"address\": [\n            {\n                \"country\": \"Brasil\",\n                \"zipCode\": \"04777001\",\n                \"city\": \"São Paulo\",\n                \"state\": \"SP\",\n                \"district\": \"Rua das Flores\",\n                \"street\": \"Avenida Interlagos\",\n                \"number\": \"5085475989\",\n                \"complement\": \"de 4503 ao fim - lado ímpar\",\n                \"_id\": \"68815b74232fb2bd065a0ed2\"\n            }\n        ],\n        \"audit\": [\n            {\n                \"registeredBy\": {\n                    \"userId\": \"6859b68390bc38a248ffdb0e\",\n                    \"userLogin\": \"sysadmin@qacoders.com\"\n                },\n                \"registrationDate\": \"quarta-feira, 23/07/2025, 19:00:20 BRT\",\n                \"_id\": \"68815b74232fb2bd065a0ed3\"\n            }\n        ],\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"68816994232fb2bd065a0ef2\",\n        \"corporateName\": \"Cibelaebc vasconcelos\",\n        \"registerCompany\": \"12123356000680\",\n        \"responsibleContact\": \"Marcio Soares\",\n        \"mail\": \"cibeledea@test.com\",\n        \"telephone\": \"99999999999999\",\n        \"serviceDescription\": \"Testes\",\n        \"matriz\": \"Teste\",\n        \"status\": true,\n        \"address\": [\n            {\n                \"country\": \"Brasil\",\n                \"zipCode\": \"04777001\",\n                \"city\": \"São Paulo\",\n                \"state\": \"SP\",\n                \"district\": \"Rua das Flores\",\n                \"street\": \"Avenida Interlagos\",\n                \"number\": \"5085475989\",\n                \"complement\": \"de 4503 ao fim - lado ímpar\",\n                \"_id\": \"68816994232fb2bd065a0ef3\"\n            }\n        ],\n        \"audit\": [\n            {\n                \"registeredBy\": {\n                    \"userId\": \"6859b68390bc38a248ffdb0e\",\n                    \"userLogin\": \"sysadmin@qacoders.com\"\n                },\n                \"registrationDate\": \"quarta-feira, 23/07/2025, 20:00:36 BRT\",\n                \"_id\": \"68816994232fb2bd065a0ef4\"\n            }\n        ],\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"68817d85232fb2bd065a0f01\",\n        \"corporateName\": \"Cibelaebdc vasconcelos\",\n        \"registerCompany\": \"12163356000680\",\n        \"responsibleContact\": \"Marcio Soares\",\n        \"mail\": \"cibelededa@test.com\",\n        \"telephone\": \"99999999999999\",\n        \"serviceDescription\": \"Testes\",\n        \"matriz\": \"Teste\",\n        \"status\": true,\n        \"address\": [\n            {\n                \"country\": \"Brasil\",\n                \"zipCode\": \"04777001\",\n                \"city\": \"São Paulo\",\n                \"state\": \"SP\",\n                \"district\": \"Rua das Flores\",\n                \"street\": \"Avenida Interlagos\",\n                \"number\": \"5085475989\",\n                \"complement\": \"de 4503 ao fim - lado ímpar\",\n                \"_id\": \"68817d85232fb2bd065a0f02\"\n            }\n        ],\n        \"audit\": [\n            {\n                \"registeredBy\": {\n                    \"userId\": \"6859b68390bc38a248ffdb0e\",\n                    \"userLogin\": \"sysadmin@qacoders.com\"\n                },\n                \"registrationDate\": \"quarta-feira, 23/07/2025, 21:25:41 BRT\",\n                \"_id\": \"68817d85232fb2bd065a0f03\"\n            }\n        ],\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"688d4264232fb2bd065a1164\",\n        \"corporateName\": \"Innovative Systems\",\n        \"registerCompany\": \"36246088641454\",\n        \"responsibleContact\": \"Ricardo Gomes\",\n        \"mail\": \"manuelasilva@qacoders.com.br\",\n        \"telephone\": \"8130336554585\",\n        \"serviceDescription\": \"Testes\",\n        \"matriz\": \"Teste\",\n        \"status\": true,\n        \"address\": [\n            {\n                \"country\": \"Brasil\",\n                \"zipCode\": \"89796973\",\n                \"city\": \"São Paulo\",\n                \"state\": \"SC\",\n                \"district\": \"Pinheiros\",\n                \"street\": \"Rua da Liberdade\",\n                \"number\": \"123\",\n                \"complement\": \"4502 ao fim - lado ímpar\",\n                \"_id\": \"688d4264232fb2bd065a1165\"\n            }\n        ],\n        \"audit\": [\n            {\n                \"registeredBy\": {\n                    \"userId\": \"6859b68390bc38a248ffdb0e\",\n                    \"userLogin\": \"sysadmin@qacoders.com\"\n                },\n                \"registrationDate\": \"sexta-feira, 01/08/2025, 19:40:36 BRT\",\n                \"_id\": \"688d4264232fb2bd065a1166\"\n            }\n        ],\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"68917ae0232fb2bd065a116d\",\n        \"corporateName\": \"Siqueira\",\n        \"registerCompany\": \"63125847000112\",\n        \"responsibleContact\": \"Ravi Lucca Aparecida\",\n        \"mail\": \"abreuana-julia@example.org\",\n        \"telephone\": \"99999999999777\",\n        \"serviceDescription\": \"Teste\",\n        \"matriz\": \"BA\",\n        \"status\": true,\n        \"address\": [\n            {\n                \"country\": \"Brasil\",\n                \"zipCode\": \"42589456\",\n                \"city\": \"da Conceição\",\n                \"state\": \"BA\",\n                \"district\": \"Conjunto Vitor Montenegro\",\n                \"street\": \"Conjunto Vitor Montenegro\",\n                \"number\": \"44\",\n                \"complement\": \"Conjunto Lagoa\",\n                \"_id\": \"68917ae0232fb2bd065a116e\"\n            }\n        ],\n        \"audit\": [\n            {\n                \"registeredBy\": {\n                    \"userId\": \"687e99dcf1437966da25d9bc\",\n                    \"userLogin\": \"sysadmin@qacoders.com\"\n                },\n                \"registrationDate\": \"terça-feira, 05/08/2025, 00:30:40 BRT\",\n                \"_id\": \"68917ae0232fb2bd065a116f\"\n            }\n        ],\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"68917af3232fb2bd065a1183\",\n        \"corporateName\": \"Montenegro\",\n        \"registerCompany\": \"36254981000140\",\n        \"responsibleContact\": \"Matteo Ferreira\",\n        \"mail\": \"ida-conceicao@example.net\",\n        \"telephone\": \"99999999999777\",\n        \"serviceDescription\": \"Teste\",\n        \"matriz\": \"GO\",\n        \"status\": true,\n        \"address\": [\n            {\n                \"country\": \"Brasil\",\n                \"zipCode\": \"87835334\",\n                \"city\": \"Pastor\",\n                \"state\": \"GO\",\n                \"district\": \"Praia de da Rosa\",\n                \"street\": \"Praia de da Rosa\",\n                \"number\": \"44\",\n                \"complement\": \"Ouro Minas\",\n                \"_id\": \"68917af3232fb2bd065a1184\"\n            }\n        ],\n        \"audit\": [\n            {\n                \"registeredBy\": {\n                    \"userId\": \"687e99dcf1437966da25d9bc\",\n                    \"userLogin\": \"sysadmin@qacoders.com\"\n                },\n                \"registrationDate\": \"terça-feira, 05/08/2025, 00:30:59 BRT\",\n                \"_id\": \"68917af3232fb2bd065a1185\"\n            }\n        ],\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"68917b64232fb2bd065a1192\",\n        \"corporateName\": \"Lopes SA\",\n        \"registerCompany\": \"09582416000130\",\n        \"responsibleContact\": \"João Vitor Farias\",\n        \"mail\": \"enrico96@example.com\",\n        \"telephone\": \"99999999999777\",\n        \"serviceDescription\": \"Teste\",\n        \"matriz\": \"AP\",\n        \"status\": true,\n        \"address\": [\n            {\n                \"country\": \"Brasil\",\n                \"zipCode\": \"51119582\",\n                \"city\": \"Almeida de Minas\",\n                \"state\": \"AP\",\n                \"district\": \"Morro Ribeiro\",\n                \"street\": \"Morro Ribeiro\",\n                \"number\": \"44\",\n                \"complement\": \"Tres Marias\",\n                \"_id\": \"68917b64232fb2bd065a1193\"\n            }\n        ],\n        \"audit\": [\n            {\n                \"registeredBy\": {\n                    \"userId\": \"687e99dcf1437966da25d9bc\",\n                    \"userLogin\": \"sysadmin@qacoders.com\"\n                },\n                \"registrationDate\": \"terça-feira, 05/08/2025, 00:32:52 BRT\",\n                \"_id\": \"68917b64232fb2bd065a1194\"\n            }\n        ],\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"68917ba3232fb2bd065a11ac\",\n        \"corporateName\": \"da Costa Moraes  ME\",\n        \"registerCompany\": \"85972314000109\",\n        \"responsibleContact\": \"João Gabriel Borges\",\n        \"mail\": \"clara65@example.net\",\n        \"telephone\": \"99999999999777\",\n        \"serviceDescription\": \"Teste\",\n        \"matriz\": \"DF\",\n        \"status\": true,\n        \"address\": [\n            {\n                \"country\": \"Brasil\",\n                \"zipCode\": \"21952945\",\n                \"city\": \"Barros do Campo\",\n                \"state\": \"DF\",\n                \"district\": \"Aeroporto de Rocha\",\n                \"street\": \"Aeroporto de Rocha\",\n                \"number\": \"44\",\n                \"complement\": \"Milionario\",\n                \"_id\": \"68917ba3232fb2bd065a11ad\"\n            }\n        ],\n        \"audit\": [\n            {\n                \"registeredBy\": {\n                    \"userId\": \"687e99dcf1437966da25d9bc\",\n                    \"userLogin\": \"sysadmin@qacoders.com\"\n                },\n                \"registrationDate\": \"terça-feira, 05/08/2025, 00:33:55 BRT\",\n                \"_id\": \"68917ba3232fb2bd065a11ae\"\n            }\n        ],\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"68917bba232fb2bd065a11b8\",\n        \"corporateName\": \"Sá Monteiro Ltda\",\n        \"registerCompany\": \"35180462000112\",\n        \"responsibleContact\": \"Dom Correia\",\n        \"mail\": \"almeidaalexia@example.org\",\n        \"telephone\": \"99999999999777\",\n        \"serviceDescription\": \"Teste\",\n        \"matriz\": \"AM\",\n        \"status\": true,\n        \"address\": [\n            {\n                \"country\": \"Brasil\",\n                \"zipCode\": \"18460154\",\n                \"city\": \"Camargo de Azevedo\",\n                \"state\": \"AM\",\n                \"district\": \"Praça de da Conceição\",\n                \"street\": \"Praça de da Conceição\",\n                \"number\": \"44\",\n                \"complement\": \"Santa Tereza\",\n                \"_id\": \"68917bba232fb2bd065a11b9\"\n            }\n        ],\n        \"audit\": [\n            {\n                \"registeredBy\": {\n                    \"userId\": \"687e99dcf1437966da25d9bc\",\n                    \"userLogin\": \"sysadmin@qacoders.com\"\n                },\n                \"registrationDate\": \"terça-feira, 05/08/2025, 00:34:18 BRT\",\n                \"_id\": \"68917bba232fb2bd065a11ba\"\n            }\n        ],\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"68917bd9232fb2bd065a11ca\",\n        \"corporateName\": \"Cirino Fonseca Ltda\",\n        \"registerCompany\": \"64925381000100\",\n        \"responsibleContact\": \"Isaac Novais\",\n        \"mail\": \"sophie75@example.net\",\n        \"telephone\": \"99999999999777\",\n        \"serviceDescription\": \"Teste\",\n        \"matriz\": \"MT\",\n        \"status\": false,\n        \"address\": [\n            {\n                \"country\": \"Brasil\",\n                \"zipCode\": \"12966924\",\n                \"city\": \"Porto\",\n                \"state\": \"MT\",\n                \"district\": \"Estrada de Correia\",\n                \"street\": \"Estrada de Correia\",\n                \"number\": \"44\",\n                \"complement\": \"Marieta 3ª Seção\",\n                \"_id\": \"68917bd9232fb2bd065a11cb\"\n            }\n        ],\n        \"audit\": [\n            {\n                \"registeredBy\": {\n                    \"userId\": \"687e99dcf1437966da25d9bc\",\n                    \"userLogin\": \"sysadmin@qacoders.com\"\n                },\n                \"registrationDate\": \"terça-feira, 05/08/2025, 00:34:49 BRT\",\n                \"_id\": \"68917bd9232fb2bd065a11cc\"\n            }\n        ],\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"68917be8232fb2bd065a11dc\",\n        \"corporateName\": \"da Costa\",\n        \"registerCompany\": \"16739284000172\",\n        \"responsibleContact\": \"Samuel Andrade\",\n        \"mail\": \"estermelo@example.com\",\n        \"telephone\": \"99999999999777\",\n        \"serviceDescription\": \"Teste\",\n        \"matriz\": \"PR\",\n        \"status\": true,\n        \"address\": [\n            {\n                \"country\": \"Brasil\",\n                \"zipCode\": \"01234567\",\n                \"city\": \"Belo Horizonte\",\n                \"state\": \"MG\",\n                \"district\": \"Rua Dona Ana\",\n                \"street\": \"Avenida Ipiranga\",\n                \"number\": \"50\",\n                \"complement\": \"apartamento 1\",\n                \"_id\": \"68917be9232fb2bd065a11e5\"\n            }\n        ],\n        \"audit\": [\n            {\n                \"registeredBy\": {\n                    \"userId\": \"687e99dcf1437966da25d9bc\",\n                    \"userLogin\": \"sysadmin@qacoders.com\"\n                },\n                \"registrationDate\": \"terça-feira, 05/08/2025, 00:35:04 BRT\",\n                \"_id\": \"68917be8232fb2bd065a11de\"\n            }\n        ],\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"68929037232fb2bd065a1356\",\n        \"corporateName\": \"Empresa Teste 458\",\n        \"registerCompany\": \"53505978000145\",\n        \"responsibleContact\": \"João Costa\",\n        \"mail\": \"teste1754435751394@example.com\",\n        \"telephone\": \"99999999999999\",\n        \"serviceDescription\": \"Testes\",\n        \"matriz\": \"Matriz 869\",\n        \"status\": true,\n        \"address\": [\n            {\n                \"country\": \"Brasil\",\n                \"zipCode\": \"04777001\",\n                \"city\": \"São Paulo\",\n                \"state\": \"SP\",\n                \"district\": \"Rua das Flores\",\n                \"street\": \"Avenida Interlagos\",\n                \"number\": \"11\",\n                \"complement\": \"de 4503 ao fim - lado ímpar\",\n                \"_id\": \"68929037232fb2bd065a1357\"\n            }\n        ],\n        \"audit\": [\n            {\n                \"registeredBy\": {\n                    \"userId\": \"6880c670232fb2bd065a0e31\",\n                    \"userLogin\": \"kprado@qacoders.com.br\"\n                },\n                \"registrationDate\": \"terça-feira, 05/08/2025, 20:13:59 BRT\",\n                \"_id\": \"68929037232fb2bd065a1358\"\n            }\n        ],\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"6892904e232fb2bd065a135b\",\n        \"corporateName\": \"Empresa Teste 442\",\n        \"registerCompany\": \"14380517000177\",\n        \"responsibleContact\": \"Lucas Oliveira\",\n        \"mail\": \"teste1754435774927@example.com\",\n        \"telephone\": \"99999999999999\",\n        \"serviceDescription\": \"Testes\",\n        \"matriz\": \"Matriz 285\",\n        \"status\": true,\n        \"address\": [\n            {\n                \"country\": \"Brasil\",\n                \"zipCode\": \"04777001\",\n                \"city\": \"São Paulo\",\n                \"state\": \"SP\",\n                \"district\": \"Rua das Flores\",\n                \"street\": \"Avenida Interlagos\",\n                \"number\": \"6222\",\n                \"complement\": \"de 4503 ao fim - lado ímpar\",\n                \"_id\": \"6892904e232fb2bd065a135c\"\n            }\n        ],\n        \"audit\": [\n            {\n                \"registeredBy\": {\n                    \"userId\": \"6880c670232fb2bd065a0e31\",\n                    \"userLogin\": \"kprado@qacoders.com.br\"\n                },\n                \"registrationDate\": \"terça-feira, 05/08/2025, 20:14:22 BRT\",\n                \"_id\": \"6892904e232fb2bd065a135d\"\n            }\n        ],\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"68929476232fb2bd065a1360\",\n        \"corporateName\": \"Empresa Teste 151\",\n        \"registerCompany\": \"26482704000109\",\n        \"responsibleContact\": \"Ana Silva\",\n        \"mail\": \"teste1754436839491@example.com\",\n        \"telephone\": \"99999999999999\",\n        \"serviceDescription\": \"Testes\",\n        \"matriz\": \"Matriz 41\",\n        \"status\": true,\n        \"address\": [\n            {\n                \"country\": \"Brasil\",\n                \"zipCode\": \"04777001\",\n                \"city\": \"Santa Verediana do Vale das Palmeiras Eternasasdd\",\n                \"state\": \"SP\",\n                \"district\": \"Rua das Flores\",\n                \"street\": \"Avenida Interlagos\",\n                \"number\": \"9201\",\n                \"complement\": \"de 4503 ao fim - lado ímpar\",\n                \"_id\": \"68929476232fb2bd065a1361\"\n            }\n        ],\n        \"audit\": [\n            {\n                \"registeredBy\": {\n                    \"userId\": \"6880c670232fb2bd065a0e31\",\n                    \"userLogin\": \"kprado@qacoders.com.br\"\n                },\n                \"registrationDate\": \"terça-feira, 05/08/2025, 20:32:06 BRT\",\n                \"_id\": \"68929476232fb2bd065a1362\"\n            }\n        ],\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"689297b4232fb2bd065a1365\",\n        \"corporateName\": \"Empresa Teste 564\",\n        \"registerCompany\": \"74263698000109\",\n        \"responsibleContact\": \"Lucas Oliveira\",\n        \"mail\": \"teste1754437669141@example.com\",\n        \"telephone\": \"99999999999999\",\n        \"serviceDescription\": \"Testes\",\n        \"matriz\": \"Matriz 669\",\n        \"status\": true,\n        \"address\": [\n            {\n                \"country\": \"Brasil\",\n                \"zipCode\": \"04777001\",\n                \"city\": \"Santa Verediana do ValeadasaPalmeirasfEternasasdd\",\n                \"state\": \"SP\",\n                \"district\": \"Rua das Flores\",\n                \"street\": \"Avenida Interlagos\",\n                \"number\": \"8600\",\n                \"complement\": \"de 4503 ao fim - lado ímpar\",\n                \"_id\": \"689297b4232fb2bd065a1366\"\n            }\n        ],\n        \"audit\": [\n            {\n                \"registeredBy\": {\n                    \"userId\": \"6880c670232fb2bd065a0e31\",\n                    \"userLogin\": \"kprado@qacoders.com.br\"\n                },\n                \"registrationDate\": \"terça-feira, 05/08/2025, 20:45:56 BRT\",\n                \"_id\": \"689297b4232fb2bd065a1367\"\n            }\n        ],\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"6892a0a5232fb2bd065a136c\",\n        \"corporateName\": \"Empresa Teste 471\",\n        \"registerCompany\": \"10687538000102\",\n        \"responsibleContact\": \"Fernanda Oliveira\",\n        \"mail\": \"teste1754439957746@example.com\",\n        \"telephone\": \"99999999999999\",\n        \"serviceDescription\": \",@#$%¨&\",\n        \"matriz\": \"Matriz 388\",\n        \"status\": true,\n        \"address\": [\n            {\n                \"country\": \"Brasil\",\n                \"zipCode\": \"04777001\",\n                \"city\": \"São Paulo\",\n                \"state\": \"SP\",\n                \"district\": \"Rua das Flores\",\n                \"street\": \"Avenida Interlagos\",\n                \"number\": \"4469\",\n                \"complement\": \"de 4503 ao fim - lado ímpar\",\n                \"_id\": \"6892a0a5232fb2bd065a136d\"\n            }\n        ],\n        \"audit\": [\n            {\n                \"registeredBy\": {\n                    \"userId\": \"6880c670232fb2bd065a0e31\",\n                    \"userLogin\": \"kprado@qacoders.com.br\"\n                },\n                \"registrationDate\": \"terça-feira, 05/08/2025, 21:24:05 BRT\",\n                \"_id\": \"6892a0a5232fb2bd065a136e\"\n            }\n        ],\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"6892a235232fb2bd065a1371\",\n        \"corporateName\": \"Empresa Teste 937\",\n        \"registerCompany\": \"47990412000160\",\n        \"responsibleContact\": \"Fernanda Costa\",\n        \"mail\": \"Kprado@semdominio.com\",\n        \"telephone\": \"99999999999999\",\n        \"serviceDescription\": \"Testes\",\n        \"matriz\": \"Matriz 569\",\n        \"status\": true,\n        \"address\": [\n            {\n                \"country\": \"Brasil\",\n                \"zipCode\": \"04777001\",\n                \"city\": \"São Paulo\",\n                \"state\": \"SP\",\n                \"district\": \"Rua das Flores\",\n                \"street\": \"Avenida Interlagos\",\n                \"number\": \"6834\",\n                \"complement\": \"de 4503 ao fim - lado ímpar\",\n                \"_id\": \"6892a235232fb2bd065a1372\"\n            }\n        ],\n        \"audit\": [\n            {\n                \"registeredBy\": {\n                    \"userId\": \"6880c670232fb2bd065a0e31\",\n                    \"userLogin\": \"kprado@qacoders.com.br\"\n                },\n                \"registrationDate\": \"terça-feira, 05/08/2025, 21:30:45 BRT\",\n                \"_id\": \"6892a235232fb2bd065a1373\"\n            }\n        ],\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"6892a534232fb2bd065a1376\",\n        \"corporateName\": \"@!#$%¨&*()_\",\n        \"registerCompany\": \"20778967000161\",\n        \"responsibleContact\": \"Fernanda Lima\",\n        \"mail\": \"teste1754441125676@example.com\",\n        \"telephone\": \"99999999999999\",\n        \"serviceDescription\": \"Testes\",\n        \"matriz\": \"Matriz 637\",\n        \"status\": true,\n        \"address\": [\n            {\n                \"country\": \"Brasil\",\n                \"zipCode\": \"04777001\",\n                \"city\": \"São Paulo\",\n                \"state\": \"SP\",\n                \"district\": \"Rua das Flores\",\n                \"street\": \"Avenida Interlagos\",\n                \"number\": \"6443\",\n                \"complement\": \"de 4503 ao fim - lado ímpar\",\n                \"_id\": \"6892a534232fb2bd065a1377\"\n            }\n        ],\n        \"audit\": [\n            {\n                \"registeredBy\": {\n                    \"userId\": \"6880c670232fb2bd065a0e31\",\n                    \"userLogin\": \"kprado@qacoders.com.br\"\n                },\n                \"registrationDate\": \"terça-feira, 05/08/2025, 21:43:32 BRT\",\n                \"_id\": \"6892a534232fb2bd065a1378\"\n            }\n        ],\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"689354b0232fb2bd065a13c2\",\n        \"corporateName\": \"Empresa Teste 499\",\n        \"registerCompany\": \"85282515000174\",\n        \"responsibleContact\": \"Fernanda Costa\",\n        \"mail\": \"teste1754486048855@example.com\",\n        \"telephone\": \"99999999999999\",\n        \"serviceDescription\": \"Testes\",\n        \"matriz\": \"Matriz 414\",\n        \"status\": true,\n        \"address\": [\n            {\n                \"country\": \"Brasil\",\n                \"zipCode\": \"04777001\",\n                \"city\": \"Santa Verediana do ValeadasaPalmeirasfEternasasdd\",\n                \"state\": \"SP\",\n                \"district\": \"Rua das Flores\",\n                \"street\": \"Avenida Interlagos\",\n                \"number\": \"4473\",\n                \"complement\": \"de 4503 ao fim - lado ímpar\",\n                \"_id\": \"689354b0232fb2bd065a13c3\"\n            }\n        ],\n        \"audit\": [\n            {\n                \"registeredBy\": {\n                    \"userId\": \"6880c670232fb2bd065a0e31\",\n                    \"userLogin\": \"kprado@qacoders.com.br\"\n                },\n                \"registrationDate\": \"quarta-feira, 06/08/2025, 10:12:16 BRT\",\n                \"_id\": \"689354b0232fb2bd065a13c4\"\n            }\n        ],\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"68935779232fb2bd065a13c7\",\n        \"corporateName\": \"Empresa Teste 560\",\n        \"registerCompany\": \"65294751000189\",\n        \"responsibleContact\": \"Marcio Silva\",\n        \"mail\": \"teste1754486761849@example.com\",\n        \"telephone\": \"99999999999999\",\n        \"serviceDescription\": \"!@#$%¨&*()_\",\n        \"matriz\": \"Matriz 971\",\n        \"status\": true,\n        \"address\": [\n            {\n                \"country\": \"Brasil\",\n                \"zipCode\": \"04777001\",\n                \"city\": \"São Paulo\",\n                \"state\": \"SP\",\n                \"district\": \"Rua das Flores\",\n                \"street\": \"Avenida Interlagos\",\n                \"number\": \"1424\",\n                \"complement\": \"de 4503 ao fim - lado ímpar\",\n                \"_id\": \"68935779232fb2bd065a13c8\"\n            }\n        ],\n        \"audit\": [\n            {\n                \"registeredBy\": {\n                    \"userId\": \"6880c670232fb2bd065a0e31\",\n                    \"userLogin\": \"kprado@qacoders.com.br\"\n                },\n                \"registrationDate\": \"quarta-feira, 06/08/2025, 10:24:09 BRT\",\n                \"_id\": \"68935779232fb2bd065a13c9\"\n            }\n        ],\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"689358ca232fb2bd065a13cc\",\n        \"corporateName\": \"Empresa Teste 442\",\n        \"registerCompany\": \"70906343000134\",\n        \"responsibleContact\": \"João Souza\",\n        \"mail\": \"teste1754487099348@example.com\",\n        \"telephone\": \"99999999999999\",\n        \"serviceDescription\": \"Testes\",\n        \"matriz\": \"Matriz 140\",\n        \"status\": true,\n        \"address\": [\n            {\n                \"country\": \"Brasil\",\n                \"zipCode\": \"04777001\",\n                \"city\": \"São Paulo\",\n                \"state\": \"SP\",\n                \"district\": \"Rua das Flores\",\n                \"street\": \"Avenida Interlagos\",\n                \"number\": \"227\",\n                \"complement\": \"de 4503 ao fim - lado ímpar\",\n                \"_id\": \"689358ca232fb2bd065a13cd\"\n            }\n        ],\n        \"audit\": [\n            {\n                \"registeredBy\": {\n                    \"userId\": \"6880c670232fb2bd065a0e31\",\n                    \"userLogin\": \"kprado@qacoders.com.br\"\n                },\n                \"registrationDate\": \"quarta-feira, 06/08/2025, 10:29:46 BRT\",\n                \"_id\": \"689358ca232fb2bd065a13ce\"\n            }\n        ],\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"689359f9232fb2bd065a13d1\",\n        \"corporateName\": \"Empresa Teste 442\",\n        \"registerCompany\": \"15853066000167\",\n        \"responsibleContact\": \"Ana Silva\",\n        \"mail\": \"teste1754487402273@example.com\",\n        \"telephone\": \"99999999999999\",\n        \"serviceDescription\": \"Testes\",\n        \"matriz\": \"Matriz 641\",\n        \"status\": true,\n        \"address\": [\n            {\n                \"country\": \"Brasil\",\n                \"zipCode\": \"04777001\",\n                \"city\": \"São Paulo\",\n                \"state\": \"SP\",\n                \"district\": \"Rua das Flores\",\n                \"street\": \"Avenida Interlagos\",\n                \"number\": \"9977\",\n                \"complement\": \"de 4503 ao fim - lado ímpar\",\n                \"_id\": \"689359f9232fb2bd065a13d2\"\n            }\n        ],\n        \"audit\": [\n            {\n                \"registeredBy\": {\n                    \"userId\": \"6880c670232fb2bd065a0e31\",\n                    \"userLogin\": \"kprado@qacoders.com.br\"\n                },\n                \"registrationDate\": \"quarta-feira, 06/08/2025, 10:34:49 BRT\",\n                \"_id\": \"689359f9232fb2bd065a13d3\"\n            }\n        ],\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"689360f5232fb2bd065a13da\",\n        \"corporateName\": \"Empresa Teste 566\",\n        \"registerCompany\": \"18312608000109\",\n        \"responsibleContact\": \"Fernanda Souza\",\n        \"mail\": \"teste1754489189610@example.com\",\n        \"telephone\": \"99999999999999\",\n        \"serviceDescription\": \"Testes\",\n        \"matriz\": \"Matriz 245\",\n        \"status\": true,\n        \"address\": [\n            {\n                \"country\": \"Brasil\",\n                \"zipCode\": \"04777001\",\n                \"city\": \"São Paulo\",\n                \"state\": \"SP\",\n                \"district\": \"Rua das Flores\",\n                \"street\": \"Avenida Interlagos\",\n                \"number\": \"342\",\n                \"complement\": \"\",\n                \"_id\": \"689360f5232fb2bd065a13db\"\n            }\n        ],\n        \"audit\": [\n            {\n                \"registeredBy\": {\n                    \"userId\": \"6880c670232fb2bd065a0e31\",\n                    \"userLogin\": \"kprado@qacoders.com.br\"\n                },\n                \"registrationDate\": \"quarta-feira, 06/08/2025, 11:04:37 BRT\",\n                \"_id\": \"689360f5232fb2bd065a13dc\"\n            }\n        ],\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"68936965232fb2bd065a13e3\",\n        \"corporateName\": \"Empresa Teste 46\",\n        \"registerCompany\": \"60442353000126\",\n        \"responsibleContact\": \"João Oliveira\",\n        \"mail\": \"teste1754491348764@example.com\",\n        \"telephone\": \"99999999999999\",\n        \"serviceDescription\": \"Testes\",\n        \"matriz\": \"!@#$%¨&*())__\",\n        \"status\": true,\n        \"address\": [\n            {\n                \"country\": \"Brasil\",\n                \"zipCode\": \"04777001\",\n                \"city\": \"São Paulo\",\n                \"state\": \"SP\",\n                \"district\": \"Rua das Flores\",\n                \"street\": \"Avenida Interlagos\",\n                \"number\": \"1422\",\n                \"complement\": \"de 4503 ao fim - lado ímpar\",\n                \"_id\": \"68936965232fb2bd065a13e4\"\n            }\n        ],\n        \"audit\": [\n            {\n                \"registeredBy\": {\n                    \"userId\": \"6880c670232fb2bd065a0e31\",\n                    \"userLogin\": \"kprado@qacoders.com.br\"\n                },\n                \"registrationDate\": \"quarta-feira, 06/08/2025, 11:40:37 BRT\",\n                \"_id\": \"68936965232fb2bd065a13e5\"\n            }\n        ],\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"68936a62232fb2bd065a13e8\",\n        \"corporateName\": \"Empresa Teste 251\",\n        \"registerCompany\": \"33411131000148\",\n        \"responsibleContact\": \"Fernanda Lima\",\n        \"mail\": \"teste1754491603092@example.com\",\n        \"telephone\": \"99999999999999\",\n        \"serviceDescription\": \"Testes\",\n        \"matriz\": \"Matriz 285\",\n        \"status\": true,\n        \"address\": [\n            {\n                \"country\": \"Brasil\",\n                \"zipCode\": \"04777001\",\n                \"city\": \"São Paulo\",\n                \"state\": \"SP\",\n                \"district\": \"Rua das Flores\",\n                \"street\": \"Avenida Interlagos\",\n                \"number\": \"3997\",\n                \"complement\": \"de 4503 ao fim - lado ímpar\",\n                \"_id\": \"68936a62232fb2bd065a13e9\"\n            }\n        ],\n        \"audit\": [\n            {\n                \"registeredBy\": {\n                    \"userId\": \"6880c670232fb2bd065a0e31\",\n                    \"userLogin\": \"kprado@qacoders.com.br\"\n                },\n                \"registrationDate\": \"quarta-feira, 06/08/2025, 11:44:50 BRT\",\n                \"_id\": \"68936a62232fb2bd065a13ea\"\n            }\n        ],\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"6893a058232fb2bd065a13ed\",\n        \"corporateName\": \"Empresa Teste 442\",\n        \"registerCompany\": \"25508471000102\",\n        \"responsibleContact\": \"Fernanda Oliveira\",\n        \"mail\": \"teste1754505417260@example.com\",\n        \"telephone\": \"99999999999999\",\n        \"serviceDescription\": \"Testes\",\n        \"matriz\": \"Matriz 447\",\n        \"status\": true,\n        \"address\": [\n            {\n                \"country\": \"Brasil\",\n                \"zipCode\": \"04777001\",\n                \"city\": \"São Paulo\",\n                \"state\": \"SP\",\n                \"district\": \"Rua das Flores\",\n                \"street\": \"Avenida Interlagos\",\n                \"number\": \"6000\",\n                \"complement\": \"de 4503 ao fim - lado ímpar\",\n                \"_id\": \"6893a058232fb2bd065a13ee\"\n            }\n        ],\n        \"audit\": [\n            {\n                \"registeredBy\": {\n                    \"userId\": \"6880c670232fb2bd065a0e31\",\n                    \"userLogin\": \"kprado@qacoders.com.br\"\n                },\n                \"registrationDate\": \"quarta-feira, 06/08/2025, 15:35:04 BRT\",\n                \"_id\": \"6893a058232fb2bd065a13ef\"\n            }\n        ],\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"6893a106232fb2bd065a13f2\",\n        \"corporateName\": \"Empresa Teste 282\",\n        \"registerCompany\": \"87619568000160\",\n        \"responsibleContact\": \"Lucas Oliveira\",\n        \"mail\": \"teste1754505590082@example.com\",\n        \"telephone\": \"99999999999999\",\n        \"serviceDescription\": \"!@#$%¨&*()_\",\n        \"matriz\": \"Matriz 398\",\n        \"status\": true,\n        \"address\": [\n            {\n                \"country\": \"Brasil\",\n                \"zipCode\": \"04777001\",\n                \"city\": \"São Paulo\",\n                \"state\": \"SP\",\n                \"district\": \"Rua das Flores\",\n                \"street\": \"Avenida Interlagos\",\n                \"number\": \"7446\",\n                \"complement\": \"de 4503 ao fim - lado ímpar\",\n                \"_id\": \"6893a106232fb2bd065a13f3\"\n            }\n        ],\n        \"audit\": [\n            {\n                \"registeredBy\": {\n                    \"userId\": \"6880c670232fb2bd065a0e31\",\n                    \"userLogin\": \"kprado@qacoders.com.br\"\n                },\n                \"registrationDate\": \"quarta-feira, 06/08/2025, 15:37:58 BRT\",\n                \"_id\": \"6893a106232fb2bd065a13f4\"\n            }\n        ],\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"6893a2f5232fb2bd065a13f7\",\n        \"corporateName\": \"!@#$%¨&**(\",\n        \"registerCompany\": \"47763634000147\",\n        \"responsibleContact\": \"Fernanda Oliveira\",\n        \"mail\": \"teste1754506086331@example.com\",\n        \"telephone\": \"99999999999999\",\n        \"serviceDescription\": \"Testes\",\n        \"matriz\": \"Matriz 276\",\n        \"status\": true,\n        \"address\": [\n            {\n                \"country\": \"Brasil\",\n                \"zipCode\": \"04777001\",\n                \"city\": \"São Paulo\",\n                \"state\": \"SP\",\n                \"district\": \"Rua das Flores\",\n                \"street\": \"Avenida Interlagos\",\n                \"number\": \"2580\",\n                \"complement\": \"de 4503 ao fim - lado ímpar\",\n                \"_id\": \"6893a2f5232fb2bd065a13f8\"\n            }\n        ],\n        \"audit\": [\n            {\n                \"registeredBy\": {\n                    \"userId\": \"6880c670232fb2bd065a0e31\",\n                    \"userLogin\": \"kprado@qacoders.com.br\"\n                },\n                \"registrationDate\": \"quarta-feira, 06/08/2025, 15:46:13 BRT\",\n                \"_id\": \"6893a2f5232fb2bd065a13f9\"\n            }\n        ],\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"6893b157232fb2bd065a13fe\",\n        \"corporateName\": \"Empresa Teste 945\",\n        \"registerCompany\": \"21753065000172\",\n        \"responsibleContact\": \"João Lima\",\n        \"mail\": \"teste1754509781972@example.com\",\n        \"telephone\": \"99999999999999\",\n        \"serviceDescription\": \"Testes\",\n        \"matriz\": \"!@#$%¨&*())__\",\n        \"status\": true,\n        \"address\": [\n            {\n                \"country\": \"Brasil\",\n                \"zipCode\": \"04777001\",\n                \"city\": \"São Paulo\",\n                \"state\": \"SP\",\n                \"district\": \"Rua das Flores\",\n                \"street\": \"Avenida Interlagos\",\n                \"number\": \"172\",\n                \"complement\": \"de 4503 ao fim - lado ímpar\",\n                \"_id\": \"6893b157232fb2bd065a13ff\"\n            }\n        ],\n        \"audit\": [\n            {\n                \"registeredBy\": {\n                    \"userId\": \"687e99dcf1437966da25d9bc\",\n                    \"userLogin\": \"sysadmin@qacoders.com\"\n                },\n                \"registrationDate\": \"quarta-feira, 06/08/2025, 16:47:35 BRT\",\n                \"_id\": \"6893b157232fb2bd065a1400\"\n            }\n        ],\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"6893b232232fb2bd065a1403\",\n        \"corporateName\": \"Empresa Teste 320\",\n        \"registerCompany\": \"45730809000175\",\n        \"responsibleContact\": \"João Souza\",\n        \"mail\": \"teste1754510000818@example.com\",\n        \"telephone\": \"99999999999999\",\n        \"serviceDescription\": \"Testes\",\n        \"matriz\": \"Matriz 285\",\n        \"status\": true,\n        \"address\": [\n            {\n                \"country\": \"Brasil\",\n                \"zipCode\": \"04777001\",\n                \"city\": \"São Paulo\",\n                \"state\": \"SP\",\n                \"district\": \"Rua das Flores\",\n                \"street\": \"Avenida Interlagos\",\n                \"number\": \"6327\",\n                \"complement\": \"de 4503 ao fim - lado ímpar\",\n                \"_id\": \"6893b232232fb2bd065a1404\"\n            }\n        ],\n        \"audit\": [\n            {\n                \"registeredBy\": {\n                    \"userId\": \"687e99dcf1437966da25d9bc\",\n                    \"userLogin\": \"sysadmin@qacoders.com\"\n                },\n                \"registrationDate\": \"quarta-feira, 06/08/2025, 16:51:14 BRT\",\n                \"_id\": \"6893b232232fb2bd065a1405\"\n            }\n        ],\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"689a7674232fb2bd065a14c6\",\n        \"corporateName\": \"Empresa Teste 524\",\n        \"registerCompany\": \"48869567000155\",\n        \"responsibleContact\": \"João Costa\",\n        \"mail\": \"teste1754953459350@example.com\",\n        \"telephone\": \"99999999999999\",\n        \"serviceDescription\": \"Testes\",\n        \"matriz\": \"Matriz 271\",\n        \"status\": true,\n        \"address\": [\n            {\n                \"country\": \"Brasil\",\n                \"zipCode\": \"04777001\",\n                \"city\": \"São Paulo\",\n                \"state\": \"SP\",\n                \"district\": \"Rua das Flores\",\n                \"street\": \"Avenida Interlagos\",\n                \"number\": \"2604\",\n                \"complement\": \"de 4503 ao fim - lado ímpar\",\n                \"_id\": \"689a7674232fb2bd065a14c7\"\n            }\n        ],\n        \"audit\": [\n            {\n                \"registeredBy\": {\n                    \"userId\": \"687e99dcf1437966da25d9bc\",\n                    \"userLogin\": \"sysadmin@qacoders.com\"\n                },\n                \"registrationDate\": \"segunda-feira, 11/08/2025, 20:02:12 BRT\",\n                \"_id\": \"689a7674232fb2bd065a14c8\"\n            }\n        ],\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"689a76ab232fb2bd065a14cb\",\n        \"corporateName\": \"Empresa Teste 162\",\n        \"registerCompany\": \"79876698000137\",\n        \"responsibleContact\": \"Marcio Lima\",\n        \"mail\": \"teste1754953513720@example.com\",\n        \"telephone\": \"99999999999999\",\n        \"serviceDescription\": \"Testes\",\n        \"matriz\": \"Matriz 418\",\n        \"status\": true,\n        \"address\": [\n            {\n                \"country\": \"Brasil\",\n                \"zipCode\": \"04777001\",\n                \"city\": \"São Paulo\",\n                \"state\": \"SP\",\n                \"district\": \"Rua das Flores\",\n                \"street\": \"Avenida Interlagos\",\n                \"number\": \"5845\",\n                \"complement\": \"de 4503 ao fim - lado ímpar\",\n                \"_id\": \"689a76ab232fb2bd065a14cc\"\n            }\n        ],\n        \"audit\": [\n            {\n                \"registeredBy\": {\n                    \"userId\": \"687e99dcf1437966da25d9bc\",\n                    \"userLogin\": \"sysadmin@qacoders.com\"\n                },\n                \"registrationDate\": \"segunda-feira, 11/08/2025, 20:03:07 BRT\",\n                \"_id\": \"689a76ab232fb2bd065a14cd\"\n            }\n        ],\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"689a7725232fb2bd065a14d0\",\n        \"corporateName\": \"Empresa Teste 917\",\n        \"registerCompany\": \"76369603000105\",\n        \"responsibleContact\": \"Marcio Silva\",\n        \"mail\": \"teste1754953636218@example.com\",\n        \"telephone\": \"99999999999999\",\n        \"serviceDescription\": \"Testes\",\n        \"matriz\": \"Matriz 632\",\n        \"status\": true,\n        \"address\": [\n            {\n                \"country\": \"Brasil\",\n                \"zipCode\": \"04777001\",\n                \"city\": \"São Paulo\",\n                \"state\": \"SP\",\n                \"district\": \"Rua das Flores\",\n                \"street\": \"Avenida Interlagos\",\n                \"number\": \"1561\",\n                \"complement\": \"de 4503 ao fim - lado ímpar\",\n                \"_id\": \"689a7725232fb2bd065a14d1\"\n            }\n        ],\n        \"audit\": [\n            {\n                \"registeredBy\": {\n                    \"userId\": \"687e99dcf1437966da25d9bc\",\n                    \"userLogin\": \"sysadmin@qacoders.com\"\n                },\n                \"registrationDate\": \"segunda-feira, 11/08/2025, 20:05:09 BRT\",\n                \"_id\": \"689a7725232fb2bd065a14d2\"\n            }\n        ],\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"689a776b232fb2bd065a14d5\",\n        \"corporateName\": \"Empresa Teste 610\",\n        \"registerCompany\": \"21913497000115\",\n        \"responsibleContact\": \"João Lima\",\n        \"mail\": \"teste1754953705425@example.com\",\n        \"telephone\": \"99999999999999\",\n        \"serviceDescription\": \"Testes\",\n        \"matriz\": \"Matriz 475\",\n        \"status\": true,\n        \"address\": [\n            {\n                \"country\": \"Brasil\",\n                \"zipCode\": \"04777001\",\n                \"city\": \"São Paulo\",\n                \"state\": \"SP\",\n                \"district\": \"Rua das Flores\",\n                \"street\": \"Avenida Interlagos\",\n                \"number\": \"566\",\n                \"complement\": \"de 4503 ao fim - lado ímpar\",\n                \"_id\": \"689a776b232fb2bd065a14d6\"\n            }\n        ],\n        \"audit\": [\n            {\n                \"registeredBy\": {\n                    \"userId\": \"687e99dcf1437966da25d9bc\",\n                    \"userLogin\": \"sysadmin@qacoders.com\"\n                },\n                \"registrationDate\": \"segunda-feira, 11/08/2025, 20:06:19 BRT\",\n                \"_id\": \"689a776b232fb2bd065a14d7\"\n            }\n        ],\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"689cd1ed232fb2bd065a14dc\",\n        \"corporateName\": \"Empresa Teste 528\",\n        \"registerCompany\": \"97172875000109\",\n        \"responsibleContact\": \"João Souza\",\n        \"mail\": \"teste1755107947725@example.com\",\n        \"telephone\": \"99999999999999\",\n        \"serviceDescription\": \"Testes\",\n        \"matriz\": \"Matriz 99\",\n        \"status\": true,\n        \"address\": [\n            {\n                \"country\": \"Brasil\",\n                \"zipCode\": \"04777001\",\n                \"city\": \"São Paulo\",\n                \"state\": \"SP\",\n                \"district\": \"Rua das Flores\",\n                \"street\": \"Avenida Interlagos\",\n                \"number\": \"1921\",\n                \"complement\": \"de 4503 ao fim - lado ímpar\",\n                \"_id\": \"689cd1ed232fb2bd065a14dd\"\n            }\n        ],\n        \"audit\": [\n            {\n                \"registeredBy\": {\n                    \"userId\": \"687e99dcf1437966da25d9bc\",\n                    \"userLogin\": \"sysadmin@qacoders.com\"\n                },\n                \"registrationDate\": \"quarta-feira, 13/08/2025, 14:57:01 BRT\",\n                \"_id\": \"689cd1ed232fb2bd065a14de\"\n            }\n        ],\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"689cd209232fb2bd065a14e1\",\n        \"corporateName\": \"Empresa Teste 492\",\n        \"registerCompany\": \"57666300000100\",\n        \"responsibleContact\": \"João Costa\",\n        \"mail\": \"teste1755107975795@example.com\",\n        \"telephone\": \"99999999999999\",\n        \"serviceDescription\": \"Testes\",\n        \"matriz\": \"Matriz 710\",\n        \"status\": true,\n        \"address\": [\n            {\n                \"country\": \"Brasil\",\n                \"zipCode\": \"04777001\",\n                \"city\": \"São Paulo\",\n                \"state\": \"SP\",\n                \"district\": \"Rua das Flores\",\n                \"street\": \"Avenida Interlagos\",\n                \"number\": \"9409\",\n                \"complement\": \"de 4503 ao fim - lado ímpar\",\n                \"_id\": \"689cd209232fb2bd065a14e2\"\n            }\n        ],\n        \"audit\": [\n            {\n                \"registeredBy\": {\n                    \"userId\": \"687e99dcf1437966da25d9bc\",\n                    \"userLogin\": \"sysadmin@qacoders.com\"\n                },\n                \"registrationDate\": \"quarta-feira, 13/08/2025, 14:57:29 BRT\",\n                \"_id\": \"689cd209232fb2bd065a14e3\"\n            }\n        ],\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"689cd555232fb2bd065a14e6\",\n        \"corporateName\": \"Empresa Teste 872\",\n        \"registerCompany\": \"18822240000181\",\n        \"responsibleContact\": \"Ana Lima\",\n        \"mail\": \"teste1755108819642@example.com\",\n        \"telephone\": \"99999999999999\",\n        \"serviceDescription\": \"Testes\",\n        \"matriz\": \"Matriz 285\",\n        \"status\": true,\n        \"address\": [\n            {\n                \"country\": \"Brasil\",\n                \"zipCode\": \"04777001\",\n                \"city\": \"São Paulo\",\n                \"state\": \"SP\",\n                \"district\": \"Rua das Flores\",\n                \"street\": \"Avenida Interlagos\",\n                \"number\": \"8850\",\n                \"complement\": \"de 4503 ao fim - lado ímpar\",\n                \"_id\": \"689cd555232fb2bd065a14e7\"\n            }\n        ],\n        \"audit\": [\n            {\n                \"registeredBy\": {\n                    \"userId\": \"687e99dcf1437966da25d9bc\",\n                    \"userLogin\": \"sysadmin@qacoders.com\"\n                },\n                \"registrationDate\": \"quarta-feira, 13/08/2025, 15:11:33 BRT\",\n                \"_id\": \"689cd555232fb2bd065a14e8\"\n            }\n        ],\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"689cd569232fb2bd065a14eb\",\n        \"corporateName\": \"Empresa Teste 240\",\n        \"registerCompany\": \"58220124000186\",\n        \"responsibleContact\": \"Marcio Silva\",\n        \"mail\": \"teste1755108839368@example.com\",\n        \"telephone\": \"99999999999999\",\n        \"serviceDescription\": \"Testes\",\n        \"matriz\": \"Matriz 285\",\n        \"status\": true,\n        \"address\": [\n            {\n                \"country\": \"Brasil\",\n                \"zipCode\": \"04777001\",\n                \"city\": \"São Paulo\",\n                \"state\": \"SP\",\n                \"district\": \"Rua das Flores\",\n                \"street\": \"Avenida Interlagos\",\n                \"number\": \"5879\",\n                \"complement\": \"de 4503 ao fim - lado ímpar\",\n                \"_id\": \"689cd569232fb2bd065a14ec\"\n            }\n        ],\n        \"audit\": [\n            {\n                \"registeredBy\": {\n                    \"userId\": \"687e99dcf1437966da25d9bc\",\n                    \"userLogin\": \"sysadmin@qacoders.com\"\n                },\n                \"registrationDate\": \"quarta-feira, 13/08/2025, 15:11:53 BRT\",\n                \"_id\": \"689cd569232fb2bd065a14ed\"\n            }\n        ],\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"689cd56f232fb2bd065a14f0\",\n        \"corporateName\": \"Empresa Teste 705\",\n        \"registerCompany\": \"55549837000178\",\n        \"responsibleContact\": \"Marcio Silva\",\n        \"mail\": \"teste1755108845878@example.com\",\n        \"telephone\": \"99999999999999\",\n        \"serviceDescription\": \"Testes\",\n        \"matriz\": \"!@#$%¨&*())__\",\n        \"status\": true,\n        \"address\": [\n            {\n                \"country\": \"Brasil\",\n                \"zipCode\": \"04777001\",\n                \"city\": \"São Paulo\",\n                \"state\": \"SP\",\n                \"district\": \"Rua das Flores\",\n                \"street\": \"Avenida Interlagos\",\n                \"number\": \"9256\",\n                \"complement\": \"de 4503 ao fim - lado ímpar\",\n                \"_id\": \"689cd56f232fb2bd065a14f1\"\n            }\n        ],\n        \"audit\": [\n            {\n                \"registeredBy\": {\n                    \"userId\": \"687e99dcf1437966da25d9bc\",\n                    \"userLogin\": \"sysadmin@qacoders.com\"\n                },\n                \"registrationDate\": \"quarta-feira, 13/08/2025, 15:11:59 BRT\",\n                \"_id\": \"689cd56f232fb2bd065a14f2\"\n            }\n        ],\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"689cd593232fb2bd065a14f5\",\n        \"corporateName\": \"Empresa Teste 401\",\n        \"registerCompany\": \"73287687000105\",\n        \"responsibleContact\": \"Lucas Silva\",\n        \"mail\": \"teste1755108881731@example.com\",\n        \"telephone\": \"99999999999999\",\n        \"serviceDescription\": \"Testes\",\n        \"matriz\": \"!@#$%¨&*())__\",\n        \"status\": true,\n        \"address\": [\n            {\n                \"country\": \"Brasil\",\n                \"zipCode\": \"04777001\",\n                \"city\": \"São Paulo\",\n                \"state\": \"SP\",\n                \"district\": \"Rua das Flores\",\n                \"street\": \"Avenida Interlagos\",\n                \"number\": \"9803\",\n                \"complement\": \"de 4503 ao fim - lado ímpar\",\n                \"_id\": \"689cd593232fb2bd065a14f6\"\n            }\n        ],\n        \"audit\": [\n            {\n                \"registeredBy\": {\n                    \"userId\": \"687e99dcf1437966da25d9bc\",\n                    \"userLogin\": \"sysadmin@qacoders.com\"\n                },\n                \"registrationDate\": \"quarta-feira, 13/08/2025, 15:12:35 BRT\",\n                \"_id\": \"689cd593232fb2bd065a14f7\"\n            }\n        ],\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"689cd5cf232fb2bd065a14fe\",\n        \"corporateName\": \"!@#$%¨&**(\",\n        \"registerCompany\": \"95251559000172\",\n        \"responsibleContact\": \"Marcio Lima\",\n        \"mail\": \"teste1755108941456@example.com\",\n        \"telephone\": \"99999999999999\",\n        \"serviceDescription\": \"Testes\",\n        \"matriz\": \"Matriz 456\",\n        \"status\": true,\n        \"address\": [\n            {\n                \"country\": \"Brasil\",\n                \"zipCode\": \"04777001\",\n                \"city\": \"São Paulo\",\n                \"state\": \"SP\",\n                \"district\": \"Rua das Flores\",\n                \"street\": \"Avenida Interlagos\",\n                \"number\": \"7716\",\n                \"complement\": \"de 4503 ao fim - lado ímpar\",\n                \"_id\": \"689cd5cf232fb2bd065a14ff\"\n            }\n        ],\n        \"audit\": [\n            {\n                \"registeredBy\": {\n                    \"userId\": \"687e99dcf1437966da25d9bc\",\n                    \"userLogin\": \"sysadmin@qacoders.com\"\n                },\n                \"registrationDate\": \"quarta-feira, 13/08/2025, 15:13:35 BRT\",\n                \"_id\": \"689cd5cf232fb2bd065a1500\"\n            }\n        ],\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"689cd5e2232fb2bd065a1503\",\n        \"corporateName\": \"!@#$%¨&**(\",\n        \"registerCompany\": \"97369177000163\",\n        \"responsibleContact\": \"Lucas Costa\",\n        \"mail\": \"teste1755108961169@example.com\",\n        \"telephone\": \"99999999999999\",\n        \"serviceDescription\": \"Testes\",\n        \"matriz\": \"Matriz 622\",\n        \"status\": true,\n        \"address\": [\n            {\n                \"country\": \"Brasil\",\n                \"zipCode\": \"04777001\",\n                \"city\": \"São Paulo\",\n                \"state\": \"SP\",\n                \"district\": \"Rua das Flores\",\n                \"street\": \"Avenida Interlagos\",\n                \"number\": \"4549\",\n                \"complement\": \"de 4503 ao fim - lado ímpar\",\n                \"_id\": \"689cd5e2232fb2bd065a1504\"\n            }\n        ],\n        \"audit\": [\n            {\n                \"registeredBy\": {\n                    \"userId\": \"687e99dcf1437966da25d9bc\",\n                    \"userLogin\": \"sysadmin@qacoders.com\"\n                },\n                \"registrationDate\": \"quarta-feira, 13/08/2025, 15:13:54 BRT\",\n                \"_id\": \"689cd5e2232fb2bd065a1505\"\n            }\n        ],\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"689cd5e8232fb2bd065a1508\",\n        \"corporateName\": \"Empresa Teste 442\",\n        \"registerCompany\": \"77575976000106\",\n        \"responsibleContact\": \"Marcio Souza\",\n        \"mail\": \"teste1755108966673@example.com\",\n        \"telephone\": \"99999999999999\",\n        \"serviceDescription\": \"Testes\",\n        \"matriz\": \"Matriz 51\",\n        \"status\": true,\n        \"address\": [\n            {\n                \"country\": \"Brasil\",\n                \"zipCode\": \"04777001\",\n                \"city\": \"São Paulo\",\n                \"state\": \"SP\",\n                \"district\": \"Rua das Flores\",\n                \"street\": \"Avenida Interlagos\",\n                \"number\": \"2699\",\n                \"complement\": \"de 4503 ao fim - lado ímpar\",\n                \"_id\": \"689cd5e8232fb2bd065a1509\"\n            }\n        ],\n        \"audit\": [\n            {\n                \"registeredBy\": {\n                    \"userId\": \"687e99dcf1437966da25d9bc\",\n                    \"userLogin\": \"sysadmin@qacoders.com\"\n                },\n                \"registrationDate\": \"quarta-feira, 13/08/2025, 15:14:00 BRT\",\n                \"_id\": \"689cd5e8232fb2bd065a150a\"\n            }\n        ],\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"689cd5f9232fb2bd065a150d\",\n        \"corporateName\": \"Empresa Teste 442\",\n        \"registerCompany\": \"56216963000180\",\n        \"responsibleContact\": \"Lucas Costa\",\n        \"mail\": \"teste1755108983954@example.com\",\n        \"telephone\": \"99999999999999\",\n        \"serviceDescription\": \"Testes\",\n        \"matriz\": \"Matriz 826\",\n        \"status\": true,\n        \"address\": [\n            {\n                \"country\": \"Brasil\",\n                \"zipCode\": \"04777001\",\n                \"city\": \"São Paulo\",\n                \"state\": \"SP\",\n                \"district\": \"Rua das Flores\",\n                \"street\": \"Avenida Interlagos\",\n                \"number\": \"2058\",\n                \"complement\": \"de 4503 ao fim - lado ímpar\",\n                \"_id\": \"689cd5f9232fb2bd065a150e\"\n            }\n        ],\n        \"audit\": [\n            {\n                \"registeredBy\": {\n                    \"userId\": \"687e99dcf1437966da25d9bc\",\n                    \"userLogin\": \"sysadmin@qacoders.com\"\n                },\n                \"registrationDate\": \"quarta-feira, 13/08/2025, 15:14:17 BRT\",\n                \"_id\": \"689cd5f9232fb2bd065a150f\"\n            }\n        ],\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"689cd618232fb2bd065a1512\",\n        \"corporateName\": \"Empresa Teste 404\",\n        \"registerCompany\": \"56119649000167\",\n        \"responsibleContact\": \"Fernanda Silva\",\n        \"mail\": \"teste1755109014983@example.com\",\n        \"telephone\": \"99999999999999\",\n        \"serviceDescription\": \"!@#$%¨&*()_\",\n        \"matriz\": \"Matriz 594\",\n        \"status\": true,\n        \"address\": [\n            {\n                \"country\": \"Brasil\",\n                \"zipCode\": \"04777001\",\n                \"city\": \"São Paulo\",\n                \"state\": \"SP\",\n                \"district\": \"Rua das Flores\",\n                \"street\": \"Avenida Interlagos\",\n                \"number\": \"9331\",\n                \"complement\": \"de 4503 ao fim - lado ímpar\",\n                \"_id\": \"689cd618232fb2bd065a1513\"\n            }\n        ],\n        \"audit\": [\n            {\n                \"registeredBy\": {\n                    \"userId\": \"687e99dcf1437966da25d9bc\",\n                    \"userLogin\": \"sysadmin@qacoders.com\"\n                },\n                \"registrationDate\": \"quarta-feira, 13/08/2025, 15:14:48 BRT\",\n                \"_id\": \"689cd618232fb2bd065a1514\"\n            }\n        ],\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"689cd62a232fb2bd065a1517\",\n        \"corporateName\": \"Empresa Teste 119\",\n        \"registerCompany\": \"16093461000156\",\n        \"responsibleContact\": \"Ana Souza\",\n        \"mail\": \"teste1755109032639@example.com\",\n        \"telephone\": \"99999999999999\",\n        \"serviceDescription\": \"!@#$%¨&*()_\",\n        \"matriz\": \"Matriz 405\",\n        \"status\": true,\n        \"address\": [\n            {\n                \"country\": \"Brasil\",\n                \"zipCode\": \"04777001\",\n                \"city\": \"São Paulo\",\n                \"state\": \"SP\",\n                \"district\": \"Rua das Flores\",\n                \"street\": \"Avenida Interlagos\",\n                \"number\": \"6113\",\n                \"complement\": \"de 4503 ao fim - lado ímpar\",\n                \"_id\": \"689cd62a232fb2bd065a1518\"\n            }\n        ],\n        \"audit\": [\n            {\n                \"registeredBy\": {\n                    \"userId\": \"687e99dcf1437966da25d9bc\",\n                    \"userLogin\": \"sysadmin@qacoders.com\"\n                },\n                \"registrationDate\": \"quarta-feira, 13/08/2025, 15:15:06 BRT\",\n                \"_id\": \"689cd62a232fb2bd065a1519\"\n            }\n        ],\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"689cd77a232fb2bd065a1525\",\n        \"corporateName\": \"Empresa Teste 485\",\n        \"registerCompany\": \"51548737000105\",\n        \"responsibleContact\": \"João Silva\",\n        \"mail\": \"teste1755109368433@example.com\",\n        \"telephone\": \"99999999999999\",\n        \"serviceDescription\": \"Testes\",\n        \"matriz\": \"Matriz 605\",\n        \"status\": true,\n        \"address\": [\n            {\n                \"country\": \"Brasil\",\n                \"zipCode\": \"04777001\",\n                \"city\": \"São Paulo\",\n                \"state\": \"SP\",\n                \"district\": \"Rua das Flores\",\n                \"street\": \"Avenida Interlagos\",\n                \"number\": \"1154\",\n                \"complement\": \"\",\n                \"_id\": \"689cd77a232fb2bd065a1526\"\n            }\n        ],\n        \"audit\": [\n            {\n                \"registeredBy\": {\n                    \"userId\": \"687e99dcf1437966da25d9bc\",\n                    \"userLogin\": \"sysadmin@qacoders.com\"\n                },\n                \"registrationDate\": \"quarta-feira, 13/08/2025, 15:20:42 BRT\",\n                \"_id\": \"689cd77a232fb2bd065a1527\"\n            }\n        ],\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"689cd78a232fb2bd065a152a\",\n        \"corporateName\": \"Empresa Teste 98\",\n        \"registerCompany\": \"54087782000186\",\n        \"responsibleContact\": \"Lucas Costa\",\n        \"mail\": \"teste1755109384536@example.com\",\n        \"telephone\": \"99999999999999\",\n        \"serviceDescription\": \"Testes\",\n        \"matriz\": \"Matriz 810\",\n        \"status\": true,\n        \"address\": [\n            {\n                \"country\": \"Brasil\",\n                \"zipCode\": \"04777001\",\n                \"city\": \"São Paulo\",\n                \"state\": \"SP\",\n                \"district\": \"Rua das Flores\",\n                \"street\": \"Avenida Interlagos\",\n                \"number\": \"3998\",\n                \"complement\": \"\",\n                \"_id\": \"689cd78a232fb2bd065a152b\"\n            }\n        ],\n        \"audit\": [\n            {\n                \"registeredBy\": {\n                    \"userId\": \"687e99dcf1437966da25d9bc\",\n                    \"userLogin\": \"sysadmin@qacoders.com\"\n                },\n                \"registrationDate\": \"quarta-feira, 13/08/2025, 15:20:58 BRT\",\n                \"_id\": \"689cd78a232fb2bd065a152c\"\n            }\n        ],\n        \"__v\": 0\n    }\n]"
								}
							]
						},
						{
							"name": "Listagem de Empresas Inexistente",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", () => {\r",
											"    pm.expect(pm.response.code).to.eql(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagem correta\", () => {\r",
											"    const body = pm.response.json();\r",
											"    pm.expect(body.alert[0]).to.eql(\"Essa companhia não existe em nosso sistema.\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}company/123",
									"host": [
										"{{url}}company"
									],
									"path": [
										"123"
									]
								}
							},
							"response": []
						},
						{
							"name": "Listagem de Empresas Especifica",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}company/{{IDCompany}}",
									"host": [
										"{{url}}company"
									],
									"path": [
										"{{IDCompany}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "CREATE",
					"item": [
						{
							"name": "Criar Empresa com sucesso",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 201\", () => {\r",
											"    pm.expect(pm.response.code).to.eql(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagem correta\", () => {\r",
											"    const body = pm.response.json();\r",
											"    pm.expect(body.msg).to.eql(\"Olá a companhia true foi cadastrada com sucesso.\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{zipCode}}\",\r\n      \"city\": \"{{city}}\",\r\n      \"state\": \"{{state}}\",\r\n      \"district\": \"{{district}}\",\r\n      \"street\": \"{{street}}\",\r\n      \"number\": \"{{number}}\",\r\n      \"complement\": \"{{complement}}\",\r\n      \"country\": \"{{country}}\"\r\n    }\r\n  ]\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}company",
									"host": [
										"{{url}}company"
									]
								}
							},
							"response": [
								{
									"name": "200 - Sucess",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{zipCode}}\",\r\n      \"city\": \"{{city}}\",\r\n      \"state\": \"{{state}}\",\r\n      \"district\": \"{{district}}\",\r\n      \"street\": \"{{street}}\",\r\n      \"number\": \"{{number}}\",\r\n      \"complement\": \"{{complement}}\",\r\n      \"country\": \"{{country}}\"\r\n    }\r\n  ]\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}company",
											"host": [
												"{{url}}company"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": null,
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Length",
											"value": "792"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Tue, 05 Aug 2025 23:14:22 GMT"
										},
										{
											"key": "Etag",
											"value": "W/\"318-p3iZRu0YNQMFjjIrU1DXbzlYmY8\""
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										}
									],
									"cookie": [],
									"body": "{\n    \"msg\": \"Olá a companhia true foi cadastrada com sucesso.\",\n    \"newCompany\": {\n        \"corporateName\": \"Empresa Teste 442\",\n        \"registerCompany\": \"14380517000177\",\n        \"responsibleContact\": \"Lucas Oliveira\",\n        \"mail\": \"teste1754435774927@example.com\",\n        \"telephone\": \"99999999999999\",\n        \"serviceDescription\": \"Testes\",\n        \"matriz\": \"Matriz 285\",\n        \"status\": true,\n        \"address\": [\n            {\n                \"country\": \"Brasil\",\n                \"zipCode\": \"04777001\",\n                \"city\": \"São Paulo\",\n                \"state\": \"SP\",\n                \"district\": \"Rua das Flores\",\n                \"street\": \"Avenida Interlagos\",\n                \"number\": \"6222\",\n                \"complement\": \"de 4503 ao fim - lado ímpar\",\n                \"_id\": \"6892904e232fb2bd065a135c\"\n            }\n        ],\n        \"audit\": [\n            {\n                \"registrationDate\": \"terça-feira, 05/08/2025, 20:14:22 BRT\",\n                \"registeredBy\": {\n                    \"userId\": \"6880c670232fb2bd065a0e31\",\n                    \"userLogin\": \"kprado@qacoders.com.br\"\n                },\n                \"_id\": \"6892904e232fb2bd065a135d\"\n            }\n        ],\n        \"_id\": \"6892904e232fb2bd065a135b\",\n        \"__v\": 0\n    }\n}"
								}
							]
						},
						{
							"name": "Cadastrar empresa com campo \"CEP\" contendo letras",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", () => {\r",
											"    pm.expect(pm.response.code).to.eql(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagem correta\", () => {\r",
											"    const body = pm.response.json();\r",
											"    pm.expect(body.error[0]).to.eql(\"O campo 'CEP' só pode conter números\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"AJNSERGE\",\r\n      \"city\": \"{{city}}\",\r\n      \"state\": \"{{state}}\",\r\n      \"district\": \"{{district}}\",\r\n      \"street\": \"{{street}}\",\r\n      \"number\": \"{{number}}\",\r\n      \"complement\": \"{{complement}}\",\r\n      \"country\": \"{{country}}\"\r\n    }\r\n  ]\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}company",
									"host": [
										"{{url}}company"
									]
								}
							},
							"response": [
								{
									"name": "400 - Error",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"AJNSERGE\",\r\n      \"city\": \"{{city}}\",\r\n      \"state\": \"{{state}}\",\r\n      \"district\": \"{{district}}\",\r\n      \"street\": \"{{street}}\",\r\n      \"number\": \"{{number}}\",\r\n      \"complement\": \"{{complement}}\",\r\n      \"country\": \"{{country}}\"\r\n    }\r\n  ]\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}company",
											"host": [
												"{{url}}company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": null,
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Length",
											"value": "52"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Tue, 05 Aug 2025 23:23:33 GMT"
										},
										{
											"key": "Etag",
											"value": "W/\"34-L0vRiEpt5C6hq3hegYU5UNpCazc\""
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": [\n        \"O campo 'CEP' só pode conter números\"\n    ]\n}"
								}
							]
						},
						{
							"name": "Cadastrar empresa com campo \"CEP\" menor que 8 dígitos",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", () => {\r",
											"    pm.expect(pm.response.code).to.eql(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagem correta\", () => {\r",
											"    const body = pm.response.json();\r",
											"    pm.expect(body.error[0]).to.eql(\"O campo 'CEP' deve conter 8 dígitos\"); \r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"0124\",\r\n      \"city\": \"{{city}}\",\r\n      \"state\": \"{{state}}\",\r\n      \"district\": \"{{district}}\",\r\n      \"street\": \"{{street}}\",\r\n      \"number\": \"{{number}}\",\r\n      \"complement\": \"{{complement}}\",\r\n      \"country\": \"{{country}}\"\r\n    }\r\n  ]\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}company",
									"host": [
										"{{url}}company"
									]
								}
							},
							"response": [
								{
									"name": "400 - Error",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"0124\",\r\n      \"city\": \"{{city}}\",\r\n      \"state\": \"{{state}}\",\r\n      \"district\": \"{{district}}\",\r\n      \"street\": \"{{street}}\",\r\n      \"number\": \"{{number}}\",\r\n      \"complement\": \"{{complement}}\",\r\n      \"country\": \"{{country}}\"\r\n    }\r\n  ]\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}company",
											"host": [
												"{{url}}company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": null,
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Length",
											"value": "50"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 13 Aug 2025 18:00:51 GMT"
										},
										{
											"key": "Etag",
											"value": "W/\"32-pxbFwE6nkvvi0QjHHAfQ4ZwtARc\""
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": [\n        \"O campo 'CEP' deve conter 8 dígitos\"\n    ]\n}"
								}
							]
						},
						{
							"name": "Cadastrar empresa com CEP maior que 8 dígitos",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", () => {\r",
											"    pm.expect(pm.response.code).to.eql(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagem correta\", () => {\r",
											"    const body = pm.response.json();\r",
											"    pm.expect(body.error[0]).to.eql(\"O campo 'CEP' deve conter 8 dígitos\"); \r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"01234567890\",\r\n      \"city\": \"{{city}}\",\r\n      \"state\": \"{{state}}\",\r\n      \"district\": \"{{district}}\",\r\n      \"street\": \"{{street}}\",\r\n      \"number\": \"{{number}}\",\r\n      \"complement\": \"{{complement}}\",\r\n      \"country\": \"{{country}}\"\r\n    }\r\n  ]\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}company",
									"host": [
										"{{url}}company"
									]
								}
							},
							"response": [
								{
									"name": "400 - Error",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"01234567890\",\r\n      \"city\": \"{{city}}\",\r\n      \"state\": \"{{state}}\",\r\n      \"district\": \"{{district}}\",\r\n      \"street\": \"{{street}}\",\r\n      \"number\": \"{{number}}\",\r\n      \"complement\": \"{{complement}}\",\r\n      \"country\": \"{{country}}\"\r\n    }\r\n  ]\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}company",
											"host": [
												"{{url}}company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": null,
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Length",
											"value": "50"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 06 Aug 2025 13:18:08 GMT"
										},
										{
											"key": "Etag",
											"value": "W/\"32-pxbFwE6nkvvi0QjHHAfQ4ZwtARc\""
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": [\n        \"O campo 'CEP' deve conter 8 dígitos\"\n    ]\n}"
								}
							]
						},
						{
							"name": "Cadastrar empresa sem preencher o campo \"CEP\" (Campo Obrigatório)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", () => {\r",
											"    pm.expect(pm.response.code).to.eql(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagem correta\", () => {\r",
											"    const body = pm.response.json();\r",
											"    pm.expect(body.error[0]).to.eql(\"O campo 'CEP' é obrigatório.\"); \r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"\",\r\n      \"city\": \"{{city}}\",\r\n      \"state\": \"{{state}}\",\r\n      \"district\": \"{{district}}\",\r\n      \"street\": \"{{street}}\",\r\n      \"number\": \"{{number}}\",\r\n      \"complement\": \"{{complement}}\",\r\n      \"country\": \"{{country}}\"\r\n    }\r\n  ]\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}company",
									"host": [
										"{{url}}company"
									]
								}
							},
							"response": [
								{
									"name": "400 - Error",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"\",\r\n      \"city\": \"{{city}}\",\r\n      \"state\": \"{{state}}\",\r\n      \"district\": \"{{district}}\",\r\n      \"street\": \"{{street}}\",\r\n      \"number\": \"{{number}}\",\r\n      \"complement\": \"{{complement}}\",\r\n      \"country\": \"{{country}}\"\r\n    }\r\n  ]\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}company",
											"host": [
												"{{url}}company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": null,
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Length",
											"value": "44"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 06 Aug 2025 13:16:59 GMT"
										},
										{
											"key": "Etag",
											"value": "W/\"2c-mKn8f0VUsm7uZtk//bIg9MnP9Q4\""
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": [\n        \"O campo 'CEP' é obrigatório.\"\n    ]\n}"
								}
							]
						},
						{
							"name": "Cadastrar empresa com campo \"Cidade\" contendo caracteres inválidos",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", () => {\r",
											"    pm.expect(pm.response.code).to.eql(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagem correta\", () => {\r",
											"    const body = pm.response.json();\r",
											"    pm.expect(body.error[0]).to.eql(\"O campo 'cidade' só pode conter letras e os caracteres especiais 'ª', 'º', '‘' e '-'.\"); \r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{zipCode}}\",\r\n      \"city\": \"São@Pau1o\",\r\n      \"state\": \"{{state}}\",\r\n      \"district\": \"{{district}}\",\r\n      \"street\": \"{{street}}\",\r\n      \"number\": \"{{number}}\",\r\n      \"complement\": \"{{complement}}\",\r\n      \"country\": \"{{country}}\"\r\n    }\r\n  ]\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}company",
									"host": [
										"{{url}}company"
									]
								}
							},
							"response": [
								{
									"name": "400 - Error",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{zipCode}}\",\r\n      \"city\": \"São@Pau1o\",\r\n      \"state\": \"{{state}}\",\r\n      \"district\": \"{{district}}\",\r\n      \"street\": \"{{street}}\",\r\n      \"number\": \"{{number}}\",\r\n      \"complement\": \"{{complement}}\",\r\n      \"country\": \"{{country}}\"\r\n    }\r\n  ]\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}company",
											"host": [
												"{{url}}company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": null,
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Length",
											"value": "104"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Tue, 05 Aug 2025 23:28:51 GMT"
										},
										{
											"key": "Etag",
											"value": "W/\"68-y8Cd2GLnoM4cbmkKb8hTCU3Lfyg\""
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": [\n        \"O campo 'cidade' só pode conter letras e os caracteres especiais 'ª', 'º', '‘' e '-'.\"\n    ]\n}"
								}
							]
						},
						{
							"name": "Cadastrar empresa com campo \"Cidade\" contendo números",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", () => {\r",
											"    pm.expect(pm.response.code).to.eql(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagem correta\", () => {\r",
											"    const body = pm.response.json();\r",
											"    pm.expect(body.error[0]).to.eql(\"O campo 'cidade' só pode conter letras e os caracteres especiais 'ª', 'º', '‘' e '-'.\"); \r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{zipCode}}\",\r\n      \"city\": \"1254882642222\",\r\n      \"state\": \"{{state}}\",\r\n      \"district\": \"{{district}}\",\r\n      \"street\": \"{{street}}\",\r\n      \"number\": \"{{number}}\",\r\n      \"complement\": \"{{complement}}\",\r\n      \"country\": \"{{country}}\"\r\n    }\r\n  ]\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}company",
									"host": [
										"{{url}}company"
									]
								}
							},
							"response": [
								{
									"name": "400 - Error",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{zipCode}}\",\r\n      \"city\": \"1254882642222\",\r\n      \"state\": \"{{state}}\",\r\n      \"district\": \"{{district}}\",\r\n      \"street\": \"{{street}}\",\r\n      \"number\": \"{{number}}\",\r\n      \"complement\": \"{{complement}}\",\r\n      \"country\": \"{{country}}\"\r\n    }\r\n  ]\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}company",
											"host": [
												"{{url}}company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": null,
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Length",
											"value": "104"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Tue, 05 Aug 2025 23:48:40 GMT"
										},
										{
											"key": "Etag",
											"value": "W/\"68-y8Cd2GLnoM4cbmkKb8hTCU3Lfyg\""
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": [\n        \"O campo 'cidade' só pode conter letras e os caracteres especiais 'ª', 'º', '‘' e '-'.\"\n    ]\n}"
								}
							]
						},
						{
							"name": "Cadastrar empresa com campo \"Cidade\" contendo mais de 50 caracteres",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", () => {\r",
											"    pm.expect(pm.response.code).to.eql(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagem correta\", () => {\r",
											"    const body = pm.response.json();\r",
											"    pm.expect(body.error[0]).to.eql(\"O campo 'cidade' deve possuir no máximo 50 caracteres.\"); \r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{zipCode}}\",\r\n      \"city\": \"Santa Verediana do ValeadasaPalmeirasfEternasasddagdsugashasphpahfpaf\",\r\n      \"state\": \"{{state}}\",\r\n      \"district\": \"{{district}}\",\r\n      \"street\": \"{{street}}\",\r\n      \"number\": \"{{number}}\",\r\n      \"complement\": \"{{complement}}\",\r\n      \"country\": \"{{country}}\"\r\n    }\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}company",
									"host": [
										"{{url}}company"
									]
								}
							},
							"response": [
								{
									"name": "400 -  Error",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{zipCode}}\",\r\n      \"city\": \"Santa Verediana do ValeadasaPalmeirasfEternasasddagdsugashasphpahfpaf\",\r\n      \"state\": \"{{state}}\",\r\n      \"district\": \"{{district}}\",\r\n      \"street\": \"{{street}}\",\r\n      \"number\": \"{{number}}\",\r\n      \"complement\": \"{{complement}}\",\r\n      \"country\": \"{{country}}\"\r\n    }\r\n  ]\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}company",
											"host": [
												"{{url}}company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": null,
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Length",
											"value": "69"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 06 Aug 2025 13:12:31 GMT"
										},
										{
											"key": "Etag",
											"value": "W/\"45-chSnGTVQSeFQx+TWWbQfPGsiJZ4\""
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": [\n        \"O campo 'cidade' deve possuir no máximo 50 caracteres.\"\n    ]\n}"
								}
							]
						},
						{
							"name": "Cadastrar empresa sem campo \"Cidade\" (Campo obrigatório)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", () => {\r",
											"    pm.expect(pm.response.code).to.eql(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagem correta\", () => {\r",
											"    const body = pm.response.json();\r",
											"    pm.expect(body.error[0]).to.eql(\"O campo 'cidade' é obrigatório.\"); \r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{zipCode}}\",\r\n      \"city\": \"\",\r\n      \"state\": \"{{state}}\",\r\n      \"district\": \"{{district}}\",\r\n      \"street\": \"{{street}}\",\r\n      \"number\": \"{{number}}\",\r\n      \"complement\": \"{{complement}}\",\r\n      \"country\": \"{{country}}\"\r\n    }\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}company",
									"host": [
										"{{url}}company"
									]
								}
							},
							"response": [
								{
									"name": "400 - Error",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{zipCode}}\",\r\n      \"city\": \"\",\r\n      \"state\": \"{{state}}\",\r\n      \"district\": \"{{district}}\",\r\n      \"street\": \"{{street}}\",\r\n      \"number\": \"{{number}}\",\r\n      \"complement\": \"{{complement}}\",\r\n      \"country\": \"{{country}}\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}company",
											"host": [
												"{{url}}company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": null,
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Length",
											"value": "47"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 06 Aug 2025 14:08:01 GMT"
										},
										{
											"key": "Etag",
											"value": "W/\"2f-ua1FQx+SMlmPp+985l/vhxchngw\""
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": [\n        \"O campo 'cidade' é obrigatório.\"\n    ]\n}"
								}
							]
						},
						{
							"name": "Cadastrar empresa com campo \"Estado\" contendo mais de 2 caracteres",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", () => {\r",
											"    pm.expect(pm.response.code).to.eql(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagem correta\", () => {\r",
											"    const body = pm.response.json();\r",
											"    pm.expect(body.error[0]).to.eql(\"O campo 'estado' deve possuir 2 caracteres.\"); \r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{zipCode}}\",\r\n      \"city\": \"{{city}}\",\r\n      \"state\": \"SPT\",\r\n      \"district\": \"{{district}}\",\r\n      \"street\": \"{{street}}\",\r\n      \"number\": \"{{number}}\",\r\n      \"complement\": \"{{complement}}\",\r\n      \"country\": \"{{country}}\"\r\n    }\r\n  ]\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}company",
									"host": [
										"{{url}}company"
									]
								}
							},
							"response": [
								{
									"name": "400 - Error",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{zipCode}}\",\r\n      \"city\": \"{{city}}\",\r\n      \"state\": \"SPT\",\r\n      \"district\": \"{{district}}\",\r\n      \"street\": \"{{street}}\",\r\n      \"number\": \"{{number}}\",\r\n      \"complement\": \"{{complement}}\",\r\n      \"country\": \"{{country}}\"\r\n    }\r\n  ]\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}company",
											"host": [
												"{{url}}company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": null,
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Length",
											"value": "57"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Tue, 05 Aug 2025 23:52:29 GMT"
										},
										{
											"key": "Etag",
											"value": "W/\"39-HOFNFWpyGVNX/4xFHqgcREmrMX8\""
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": [\n        \"O campo 'estado' deve possuir 2 caracteres.\"\n    ]\n}"
								}
							]
						},
						{
							"name": "Cadastrar empresa sem campo \"Estado\" (Campo obrigatório)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", () => {\r",
											"    pm.expect(pm.response.code).to.eql(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagem correta\", () => {\r",
											"    const body = pm.response.json();\r",
											"    pm.expect(body.error[0]).to.eql(\"O campo 'estado' é obrigatório.\"); \r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{zipCode}}\",\r\n      \"city\": \"{{city}}\",\r\n      \"state\": \"\",\r\n      \"district\": \"{{district}}\",\r\n      \"street\": \"{{street}}\",\r\n      \"number\": \"{{number}}\",\r\n      \"complement\": \"{{complement}}\",\r\n      \"country\": \"{{country}}\"\r\n    }\r\n  ]\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}company",
									"host": [
										"{{url}}company"
									]
								}
							},
							"response": [
								{
									"name": "400 - Error",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{zipCode}}\",\r\n      \"city\": \"{{city}}\",\r\n      \"state\": \"\",\r\n      \"district\": \"{{district}}\",\r\n      \"street\": \"{{street}}\",\r\n      \"number\": \"{{number}}\",\r\n      \"complement\": \"{{complement}}\",\r\n      \"country\": \"{{country}}\"\r\n    }\r\n  ]\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}company",
											"host": [
												"{{url}}company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": null,
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Length",
											"value": "47"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 06 Aug 2025 13:57:26 GMT"
										},
										{
											"key": "Etag",
											"value": "W/\"2f-JDUQkcQ8jbJciIli1qzdFgX/i88\""
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": [\n        \"O campo 'estado' é obrigatório.\"\n    ]\n}"
								}
							]
						},
						{
							"name": "Cadastrar empresa com campo \"Estado\" contendo números",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", () => {\r",
											"    pm.expect(pm.response.code).to.eql(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagem correta\", () => {\r",
											"    const body = pm.response.json();\r",
											"    pm.expect(body.error[0]).to.eql(\"O campo 'estado' só pode conter letras maiúsculas\"); \r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{zipCode}}\",\r\n      \"city\": \"{{city}}\",\r\n      \"state\": \"68\",\r\n      \"district\": \"{{district}}\",\r\n      \"street\": \"{{street}}\",\r\n      \"number\": \"{{number}}\",\r\n      \"complement\": \"{{complement}}\",\r\n      \"country\": \"{{country}}\"\r\n    }\r\n  ]\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}company",
									"host": [
										"{{url}}company"
									]
								}
							},
							"response": [
								{
									"name": "400 - Error",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{zipCode}}\",\r\n      \"city\": \"{{city}}\",\r\n      \"state\": \"68\",\r\n      \"district\": \"{{district}}\",\r\n      \"street\": \"{{street}}\",\r\n      \"number\": \"{{number}}\",\r\n      \"complement\": \"{{complement}}\",\r\n      \"country\": \"{{country}}\"\r\n    }\r\n  ]\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}company",
											"host": [
												"{{url}}company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": null,
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Length",
											"value": "65"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 06 Aug 2025 00:07:22 GMT"
										},
										{
											"key": "Etag",
											"value": "W/\"41-ne1Xc4Bsa0OgTgNpJAN9x0cghtI\""
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": [\n        \"O campo 'estado' só pode conter letras maiúsculas\"\n    ]\n}"
								}
							]
						},
						{
							"name": "Cadastrar empresa com campo \"País\" contendo mais de 50 caracteres",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", () => {\r",
											"    pm.expect(pm.response.code).to.eql(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagem correta\", () => {\r",
											"    const body = pm.response.json();\r",
											"    pm.expect(body.error[0]).to.eql(\"O campo País permite até 50 caracteres.\"); \r",
											"});\r",
											"pm.test(\"Mensagem correta\", () => {\r",
											"    const body = pm.response.json();\r",
											"    pm.expect(body.error[1]).to.eql(\"O campo 'País' só pode conter apenas letras.\"); \r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{zipCode}}\",\r\n      \"city\": \"{{city}}\",\r\n      \"state\": \"{{state}}\",\r\n      \"district\": \"{{district}}\",\r\n      \"street\": \"{{street}}\",\r\n      \"number\": \"{{number}}\",\r\n      \"complement\": \"{{complement}}\",\r\n      \"country\": \"Republica Federal dos Estados Unidos do Grande Norteleste\"\r\n    }\r\n  ]\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}company",
									"host": [
										"{{url}}company"
									]
								}
							},
							"response": [
								{
									"name": "400 - Error",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{zipCode}}\",\r\n      \"city\": \"{{city}}\",\r\n      \"state\": \"{{state}}\",\r\n      \"district\": \"{{district}}\",\r\n      \"street\": \"{{street}}\",\r\n      \"number\": \"{{number}}\",\r\n      \"complement\": \"{{complement}}\",\r\n      \"country\": \"Republica Federal dos Estados Unidos do Grande Norteleste\"\r\n    }\r\n  ]\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}company",
											"host": [
												"{{url}}company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": null,
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Length",
											"value": "104"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 06 Aug 2025 00:03:29 GMT"
										},
										{
											"key": "Etag",
											"value": "W/\"68-GjnuccvsklRb/SnkOz8eqVBpcEI\""
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": [\n        \"O campo País permite até 50 caracteres.\",\n        \"O campo 'País' só pode conter apenas letras.\"\n    ]\n}"
								}
							]
						},
						{
							"name": "Cadastrar empresa com campo \"País\" contendo números",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", () => {\r",
											"    pm.expect(pm.response.code).to.eql(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagem correta\", () => {\r",
											"    const body = pm.response.json();\r",
											"    pm.expect(body.error[0]).to.eql(\"O campo 'País' só pode conter apenas letras.\"); \r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{zipCode}}\",\r\n      \"city\": \"{{city}}\",\r\n      \"state\": \"{{state}}\",\r\n      \"district\": \"{{district}}\",\r\n      \"street\": \"{{street}}\",\r\n      \"number\": \"{{number}}\",\r\n      \"complement\": \"{{complement}}\",\r\n      \"country\": \"8ras1l\"\r\n    }\r\n  ]\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}company",
									"host": [
										"{{url}}company"
									]
								}
							},
							"response": [
								{
									"name": "400 - Error",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{zipCode}}\",\r\n      \"city\": \"{{city}}\",\r\n      \"state\": \"{{state}}\",\r\n      \"district\": \"{{district}}\",\r\n      \"street\": \"{{street}}\",\r\n      \"number\": \"{{number}}\",\r\n      \"complement\": \"{{complement}}\",\r\n      \"country\": \"8ras1l\"\r\n    }\r\n  ]\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}company",
											"host": [
												"{{url}}company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": null,
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Length",
											"value": "60"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 06 Aug 2025 00:26:33 GMT"
										},
										{
											"key": "Etag",
											"value": "W/\"3c-fi4wa4/kICJwr3wUCYhAH9EuyvI\""
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": [\n        \"O campo 'País' só pode conter apenas letras.\"\n    ]\n}"
								}
							]
						},
						{
							"name": "Cadastrar empresa sem campo \"País\" (Campo obrigatório)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", () => {\r",
											"    pm.expect(pm.response.code).to.eql(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagem correta\", () => {\r",
											"    const body = pm.response.json();\r",
											"    pm.expect(body.error[0]).to.eql(\"O campo País é obrigatório.\"); \r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{zipCode}}\",\r\n      \"city\": \"{{city}}\",\r\n      \"state\": \"{{state}}\",\r\n      \"district\": \"{{district}}\",\r\n      \"street\": \"{{street}}\",\r\n      \"number\": \"{{number}}\",\r\n      \"complement\": \"{{complement}}\",\r\n      \"country\": \"\"\r\n    }\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}company",
									"host": [
										"{{url}}company"
									]
								}
							},
							"response": [
								{
									"name": "400 - Error",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{zipCode}}\",\r\n      \"city\": \"{{city}}\",\r\n      \"state\": \"{{state}}\",\r\n      \"district\": \"{{district}}\",\r\n      \"street\": \"{{street}}\",\r\n      \"number\": \"{{number}}\",\r\n      \"complement\": \"{{complement}}\",\r\n      \"country\": \"\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}company",
											"host": [
												"{{url}}company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": null,
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Length",
											"value": "44"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 06 Aug 2025 13:39:11 GMT"
										},
										{
											"key": "Etag",
											"value": "W/\"2c-ZEy9kMTGlubWTSRB7p63fS7d/jw\""
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": [\n        \"O campo País é obrigatório.\"\n    ]\n}"
								}
							]
						},
						{
							"name": "Cadastrar empresa sem preencher o campo \"Telefone\" (Campo Obrigatório)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", () => {\r",
											"    pm.expect(pm.response.code).to.eql(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagem correta\", () => {\r",
											"    const body = pm.response.json();\r",
											"    pm.expect(body.error[0]).to.eql(\"O campo 'Telefone' é obrigatório.\"); \r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{zipCode}}\",\r\n      \"city\": \"{{city}}\",\r\n      \"state\": \"{{state}}\",\r\n      \"district\": \"{{district}}\",\r\n      \"street\": \"{{street}}\",\r\n      \"number\": \"{{number}}\",\r\n      \"complement\": \"{{complement}}\",\r\n      \"country\": \"{{country}}\"\r\n    }\r\n  ]\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}company",
									"host": [
										"{{url}}company"
									]
								}
							},
							"response": [
								{
									"name": "400 - Error",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{zipCode}}\",\r\n      \"city\": \"{{city}}\",\r\n      \"state\": \"{{state}}\",\r\n      \"district\": \"{{district}}\",\r\n      \"street\": \"{{street}}\",\r\n      \"number\": \"{{number}}\",\r\n      \"complement\": \"{{complement}}\",\r\n      \"country\": \"{{country}}\"\r\n    }\r\n  ]\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}company",
											"host": [
												"{{url}}company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": null,
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Length",
											"value": "49"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 06 Aug 2025 13:37:00 GMT"
										},
										{
											"key": "Etag",
											"value": "W/\"31-TBsWhad7H5n+fZjhbCPKbBTFfqg\""
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": [\n        \"O campo 'Telefone' é obrigatório.\"\n    ]\n}"
								}
							]
						},
						{
							"name": "Cadastrar empresa com campo \"Complemento\" contendo caracteres inválidos",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", () => {\r",
											"    pm.expect(pm.response.code).to.eql(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagem correta\", () => {\r",
											"    const body = pm.response.json();\r",
											"    pm.expect(body.error[0]).to.eql(\"O campo 'complemento' só pode conter letras, números e os caracteres especiais 'ª', 'º', '‘' e '-'\"); \r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{zipCode}}\",\r\n      \"city\": \"{{city}}\",\r\n      \"state\": \"{{state}}\",\r\n      \"district\": \"{{district}}\",\r\n      \"street\": \"{{street}}\",\r\n      \"number\": \"{{number}}\",\r\n      \"complement\": \"021$@@\",\r\n      \"country\": \"{{country}}\"\r\n    }\r\n  ]\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}company",
									"host": [
										"{{url}}company"
									]
								}
							},
							"response": [
								{
									"name": "400 - Error",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{zipCode}}\",\r\n      \"city\": \"{{city}}\",\r\n      \"state\": \"{{state}}\",\r\n      \"district\": \"{{district}}\",\r\n      \"street\": \"{{street}}\",\r\n      \"number\": \"{{number}}\",\r\n      \"complement\": \"021$@@\",\r\n      \"country\": \"{{country}}\"\r\n    }\r\n  ]\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}company",
											"host": [
												"{{url}}company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": null,
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Length",
											"value": "118"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 06 Aug 2025 00:11:04 GMT"
										},
										{
											"key": "Etag",
											"value": "W/\"76-JtMC9aXiF92BQjw7PlHYoBYtUrQ\""
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": [\n        \"O campo 'complemento' só pode conter letras, números e os caracteres especiais 'ª', 'º', '‘' e '-'\"\n    ]\n}"
								}
							]
						},
						{
							"name": "Cadastrar empresa com campo \"Complemento\" contendo mais de 80 caracteres",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", () => {\r",
											"    pm.expect(pm.response.code).to.eql(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagem correta\", () => {\r",
											"    const body = pm.response.json();\r",
											"    pm.expect(body.error[0]).to.eql(\"O campo 'complemento' deve possuir no máximo 80 caracteres.\"); \r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{zipCode}}\",\r\n      \"city\": \"{{city}}\",\r\n      \"state\": \"{{state}}\",\r\n      \"district\": \"{{district}}\",\r\n      \"street\": \"{{street}}\",\r\n      \"number\": \"{{number}}\",\r\n      \"complement\": \"Apartamento 1502, Bloco D, 15º andar, Condomínio Parque das Palmeiras, entrada pela Rua B lateral\",\r\n      \"country\": \"{{country}}\"\r\n    }\r\n  ]\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}company",
									"host": [
										"{{url}}company"
									]
								}
							},
							"response": [
								{
									"name": "400 - Error",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{zipCode}}\",\r\n      \"city\": \"{{city}}\",\r\n      \"state\": \"{{state}}\",\r\n      \"district\": \"{{district}}\",\r\n      \"street\": \"{{street}}\",\r\n      \"number\": \"{{number}}\",\r\n      \"complement\": \"Apartamento 1502, Bloco D, 15º andar, Condomínio Parque das Palmeiras, entrada pela Rua B lateral\",\r\n      \"country\": \"{{country}}\"\r\n    }\r\n  ]\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}company",
											"host": [
												"{{url}}company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": null,
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Length",
											"value": "74"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 06 Aug 2025 00:13:27 GMT"
										},
										{
											"key": "Etag",
											"value": "W/\"4a-W84lRTNAfhys1xsOJyyA3q+19VU\""
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": [\n        \"O campo 'complemento' deve possuir no máximo 80 caracteres.\"\n    ]\n}"
								}
							]
						},
						{
							"name": "Cadastrar empresa sem campo \"Complemento\" (Campo não obrigatório)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 201\", () => {\r",
											"    pm.expect(pm.response.code).to.eql(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagem correta\", () => {\r",
											"    const body = pm.response.json();\r",
											"    pm.expect(body.msg).to.eql(\"Olá a companhia true foi cadastrada com sucesso.\"); \r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{zipCode}}\",\r\n      \"city\": \"{{city}}\",\r\n      \"state\": \"{{state}}\",\r\n      \"district\": \"{{district}}\",\r\n      \"street\": \"{{street}}\",\r\n      \"number\": \"{{number}}\",\r\n      \"complement\": \"\",\r\n      \"country\": \"{{country}}\"\r\n    }\r\n  ]\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}company",
									"host": [
										"{{url}}company"
									]
								}
							},
							"response": [
								{
									"name": "201 - Sucess",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{zipCode}}\",\r\n      \"city\": \"{{city}}\",\r\n      \"state\": \"{{state}}\",\r\n      \"district\": \"{{district}}\",\r\n      \"street\": \"{{street}}\",\r\n      \"number\": \"{{number}}\",\r\n      \"complement\": \"\",\r\n      \"country\": \"{{country}}\"\r\n    }\r\n  ]\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}company",
											"host": [
												"{{url}}company"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": null,
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Length",
											"value": "763"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 06 Aug 2025 14:04:37 GMT"
										},
										{
											"key": "Etag",
											"value": "W/\"2fb-7TQJkda6wXor7MgXDBvvpOJk0mk\""
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										}
									],
									"cookie": [],
									"body": "{\n    \"msg\": \"Olá a companhia true foi cadastrada com sucesso.\",\n    \"newCompany\": {\n        \"corporateName\": \"Empresa Teste 566\",\n        \"registerCompany\": \"18312608000109\",\n        \"responsibleContact\": \"Fernanda Souza\",\n        \"mail\": \"teste1754489189610@example.com\",\n        \"telephone\": \"99999999999999\",\n        \"serviceDescription\": \"Testes\",\n        \"matriz\": \"Matriz 245\",\n        \"status\": true,\n        \"address\": [\n            {\n                \"country\": \"Brasil\",\n                \"zipCode\": \"04777001\",\n                \"city\": \"São Paulo\",\n                \"state\": \"SP\",\n                \"district\": \"Rua das Flores\",\n                \"street\": \"Avenida Interlagos\",\n                \"number\": \"342\",\n                \"complement\": \"\",\n                \"_id\": \"689360f5232fb2bd065a13db\"\n            }\n        ],\n        \"audit\": [\n            {\n                \"registrationDate\": \"quarta-feira, 06/08/2025, 11:04:37 BRT\",\n                \"registeredBy\": {\n                    \"userId\": \"6880c670232fb2bd065a0e31\",\n                    \"userLogin\": \"kprado@qacoders.com.br\"\n                },\n                \"_id\": \"689360f5232fb2bd065a13dc\"\n            }\n        ],\n        \"_id\": \"689360f5232fb2bd065a13da\",\n        \"__v\": 0\n    }\n}"
								}
							]
						},
						{
							"name": "Cadastrar empresa sem campo \"Bairro\" (Campo obrigatório)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", () => {\r",
											"    pm.expect(pm.response.code).to.eql(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagem correta\", () => {\r",
											"    const body = pm.response.json();\r",
											"    pm.expect(body.error[0]).to.eql(\"O campo 'bairro' é obrigatório.\"); \r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{zipCode}}\",\r\n      \"city\": \"{{city}}\",\r\n      \"state\": \"{{state}}\",\r\n      \"district\": \"\",\r\n      \"street\": \"{{street}}\",\r\n      \"number\": \"{{number}}\",\r\n      \"complement\": \"{{complement}}\",\r\n      \"country\": \"{{country}}\"\r\n    }\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}company",
									"host": [
										"{{url}}company"
									]
								}
							},
							"response": [
								{
									"name": "400 - Error",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{zipCode}}\",\r\n      \"city\": \"{{city}}\",\r\n      \"state\": \"{{state}}\",\r\n      \"district\": \"\",\r\n      \"street\": \"{{street}}\",\r\n      \"number\": \"{{number}}\",\r\n      \"complement\": \"{{complement}}\",\r\n      \"country\": \"{{country}}\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}company",
											"host": [
												"{{url}}company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": null,
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Length",
											"value": "47"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 06 Aug 2025 14:09:33 GMT"
										},
										{
											"key": "Etag",
											"value": "W/\"2f-bhq0eF5U4xcuQx0I0hL3wfv1Lr0\""
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": [\n        \"O campo 'bairro' é obrigatório.\"\n    ]\n}"
								}
							]
						},
						{
							"name": "Cadastrar empresa com campo \"Bairro\" contendo caracteres inválidos",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", () => {\r",
											"    pm.expect(pm.response.code).to.eql(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagem correta\", () => {\r",
											"    const body = pm.response.json();\r",
											"    pm.expect(body.error[0]).to.eql(\"O campo 'bairro' só pode conter letras, números e os caracteres especiais 'ª', 'º', '‘' e '-'\"); \r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{zipCode}}\",\r\n      \"city\": \"{{city}}\",\r\n      \"state\": \"{{state}}\",\r\n      \"district\": \"@@___179\",\r\n      \"street\": \"{{street}}\",\r\n      \"number\": \"{{number}}\",\r\n      \"complement\": \"{{complement}}\",\r\n      \"country\": \"{{country}}\"\r\n    }\r\n  ]\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}company",
									"host": [
										"{{url}}company"
									]
								}
							},
							"response": [
								{
									"name": "400 - Error",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{zipCode}}\",\r\n      \"city\": \"{{city}}\",\r\n      \"state\": \"{{state}}\",\r\n      \"district\": \"@@___179\",\r\n      \"street\": \"{{street}}\",\r\n      \"number\": \"{{number}}\",\r\n      \"complement\": \"{{complement}}\",\r\n      \"country\": \"{{country}}\"\r\n    }\r\n  ]\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}company",
											"host": [
												"{{url}}company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": null,
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Length",
											"value": "113"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 06 Aug 2025 00:15:33 GMT"
										},
										{
											"key": "Etag",
											"value": "W/\"71-GJug/bZvJeFAgIv6l/eDn0rYls4\""
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": [\n        \"O campo 'bairro' só pode conter letras, números e os caracteres especiais 'ª', 'º', '‘' e '-'\"\n    ]\n}"
								}
							]
						},
						{
							"name": "Cadastrar empresa com campo \"Bairro\" contendo caracteres não alfanuméricos",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", () => {\r",
											"    pm.expect(pm.response.code).to.eql(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagem correta\", () => {\r",
											"    const body = pm.response.json();\r",
											"    pm.expect(body.error[0]).to.eql(\"O campo 'bairro' só pode conter letras, números e os caracteres especiais 'ª', 'º', '‘' e '-'\"); \r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{zipCode}}\",\r\n      \"city\": \"{{city}}\",\r\n      \"state\": \"{{state}}\",\r\n      \"district\": \"@@___$$$\",\r\n      \"street\": \"{{street}}\",\r\n      \"number\": \"{{number}}\",\r\n      \"complement\": \"{{complement}}\",\r\n      \"country\": \"{{country}}\"\r\n    }\r\n  ]\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}company",
									"host": [
										"{{url}}company"
									]
								}
							},
							"response": [
								{
									"name": "400 - Error",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{zipCode}}\",\r\n      \"city\": \"{{city}}\",\r\n      \"state\": \"{{state}}\",\r\n      \"district\": \"@@___179\",\r\n      \"street\": \"{{street}}\",\r\n      \"number\": \"{{number}}\",\r\n      \"complement\": \"{{complement}}\",\r\n      \"country\": \"{{country}}\"\r\n    }\r\n  ]\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}company",
											"host": [
												"{{url}}company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": null,
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Length",
											"value": "113"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 06 Aug 2025 00:15:33 GMT"
										},
										{
											"key": "Etag",
											"value": "W/\"71-GJug/bZvJeFAgIv6l/eDn0rYls4\""
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": [\n        \"O campo 'bairro' só pode conter letras, números e os caracteres especiais 'ª', 'º', '‘' e '-'\"\n    ]\n}"
								}
							]
						},
						{
							"name": "Cadastrar empresa com campo \"Bairro\" contendo mais de 50 caracteres",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", () => {\r",
											"    pm.expect(pm.response.code).to.eql(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagem correta\", () => {\r",
											"    const body = pm.response.json();\r",
											"    pm.expect(body.error[0]).to.eql(\"O campo 'bairro' deve possuir no máximo 50 caracteres.\"); \r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{zipCode}}\",\r\n      \"city\": \"{{city}}\",\r\n      \"state\": \"{{state}}\",\r\n      \"district\": \"Jardim Residencial das Colinas Verdes do Vale Encantado\",\r\n      \"street\": \"{{street}}\",\r\n      \"number\": \"{{number}}\",\r\n      \"complement\": \"{{complement}}\",\r\n      \"country\": \"{{country}}\"\r\n    }\r\n  ]\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}company",
									"host": [
										"{{url}}company"
									]
								}
							},
							"response": [
								{
									"name": "400 - Error",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{zipCode}}\",\r\n      \"city\": \"{{city}}\",\r\n      \"state\": \"{{state}}\",\r\n      \"district\": \"Jardim Residencial das Colinas Verdes do Vale Encantado\",\r\n      \"street\": \"{{street}}\",\r\n      \"number\": \"{{number}}\",\r\n      \"complement\": \"{{complement}}\",\r\n      \"country\": \"{{country}}\"\r\n    }\r\n  ]\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}company",
											"host": [
												"{{url}}company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": null,
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Length",
											"value": "69"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 06 Aug 2025 00:18:15 GMT"
										},
										{
											"key": "Etag",
											"value": "W/\"45-1y7e8ehfMBUk3Rh0TTmDbTkbTmk\""
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": [\n        \"O campo 'bairro' deve possuir no máximo 50 caracteres.\"\n    ]\n}"
								}
							]
						},
						{
							"name": "Cadastrar empresa sem campo \"Logradouro\" (Campo obrigatório)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", () => {\r",
											"    pm.expect(pm.response.code).to.eql(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagem correta\", () => {\r",
											"    const body = pm.response.json();\r",
											"    pm.expect(body.error[0]).to.eql(\"O campo 'logradouro' é obrigatório.\"); \r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{zipCode}}\",\r\n      \"city\": \"{{city}}\",\r\n      \"state\": \"{{state}}\",\r\n      \"district\": \"{{district}}\",\r\n      \"street\": \"\",\r\n      \"number\": \"{{number}}\",\r\n      \"complement\": \"{{complement}}\",\r\n      \"country\": \"{{country}}\"\r\n    }\r\n  ]\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}company",
									"host": [
										"{{url}}company"
									]
								}
							},
							"response": [
								{
									"name": "400 - Error",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{zipCode}}\",\r\n      \"city\": \"{{city}}\",\r\n      \"state\": \"{{state}}\",\r\n      \"district\": \"{{district}}\",\r\n      \"street\": \"\",\r\n      \"number\": \"{{number}}\",\r\n      \"complement\": \"{{complement}}\",\r\n      \"country\": \"{{country}}\"\r\n    }\r\n  ]\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}company",
											"host": [
												"{{url}}company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": null,
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Length",
											"value": "51"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 06 Aug 2025 13:55:59 GMT"
										},
										{
											"key": "Etag",
											"value": "W/\"33-A0nuhY5GOiLZ/9v5sUtOmSsiTkM\""
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": [\n        \"O campo 'logradouro' é obrigatório.\"\n    ]\n}"
								}
							]
						},
						{
							"name": "Cadastrar empresa com campo \"Logradouro\" contendo caracteres inválidos",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", () => {\r",
											"    pm.expect(pm.response.code).to.eql(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagem correta\", () => {\r",
											"    const body = pm.response.json();\r",
											"    pm.expect(body.error[0]).to.eql(\"O campo 'logradouro' só pode conter letras, números e os caracteres especiais 'ª', 'º', '‘' e '-'\"); \r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{zipCode}}\",\r\n      \"city\": \"{{city}}\",\r\n      \"state\": \"{{state}}\",\r\n      \"district\": \"{{district}}\",\r\n      \"street\": \"@_&$#\",\r\n      \"number\": \"{{number}}\",\r\n      \"complement\": \"{{complement}}\",\r\n      \"country\": \"{{country}}\"\r\n    }\r\n  ]\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}company",
									"host": [
										"{{url}}company"
									]
								}
							},
							"response": [
								{
									"name": "400 - Error",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{zipCode}}\",\r\n      \"city\": \"{{city}}\",\r\n      \"state\": \"{{state}}\",\r\n      \"district\": \"{{district}}\",\r\n      \"street\": \"@_&$#\",\r\n      \"number\": \"{{number}}\",\r\n      \"complement\": \"{{complement}}\",\r\n      \"country\": \"{{country}}\"\r\n    }\r\n  ]\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}company",
											"host": [
												"{{url}}company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": null,
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Length",
											"value": "117"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 06 Aug 2025 00:20:54 GMT"
										},
										{
											"key": "Etag",
											"value": "W/\"75-dihM7mu+EzomojJIS4iYA1IAivk\""
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": [\n        \"O campo 'logradouro' só pode conter letras, números e os caracteres especiais 'ª', 'º', '‘' e '-'\"\n    ]\n}"
								}
							]
						},
						{
							"name": "Cadastrar empresa com campo \"Logradouro\" contendo mais de 50 caracteres",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", () => {\r",
											"    pm.expect(pm.response.code).to.eql(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagem correta\", () => {\r",
											"    const body = pm.response.json();\r",
											"    pm.expect(body.error[0]).to.eql(\"O campo 'logradouro' deve possuir no máximo 50 caracteres.\"); \r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{zipCode}}\",\r\n      \"city\": \"{{city}}\",\r\n      \"state\": \"{{state}}\",\r\n      \"district\": \"{{district}}\",\r\n      \"street\": \"Avenida dos Pioneiros Fundadores da Cidade de Esperança Nova\",\r\n      \"number\": \"{{number}}\",\r\n      \"complement\": \"{{complement}}\",\r\n      \"country\": \"{{country}}\"\r\n    }\r\n  ]\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}company",
									"host": [
										"{{url}}company"
									]
								}
							},
							"response": [
								{
									"name": "400 - Error",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{zipCode}}\",\r\n      \"city\": \"{{city}}\",\r\n      \"state\": \"{{state}}\",\r\n      \"district\": \"{{district}}\",\r\n      \"street\": \"Avenida dos Pioneiros Fundadores da Cidade de Esperança Nova\",\r\n      \"number\": \"{{number}}\",\r\n      \"complement\": \"{{complement}}\",\r\n      \"country\": \"{{country}}\"\r\n    }\r\n  ]\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}company",
											"host": [
												"{{url}}company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": null,
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Length",
											"value": "73"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 06 Aug 2025 00:35:14 GMT"
										},
										{
											"key": "Etag",
											"value": "W/\"49-FZymtIwa9chjYg6MW7TxaeGxN34\""
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": [\n        \"O campo 'logradouro' deve possuir no máximo 50 caracteres.\"\n    ]\n}"
								}
							]
						},
						{
							"name": "Cadastrar empresa com campo \"E-mail\" com domínio inválido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", () => {\r",
											"    pm.expect(pm.response.code).to.eql(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagem correta\", () => {\r",
											"    const body = pm.response.json();\r",
											"    pm.expect(body.error[0]).to.eql(\"O campo 'Email' informado é inválido. Informe um e-mail no formato [nome@domínio.com].\"); \r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"Kprado@.com\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{zipCode}}\",\r\n      \"city\": \"{{city}}\",\r\n      \"state\": \"{{state}}\",\r\n      \"district\": \"{{district}}\",\r\n      \"street\": \"{{street}}\",\r\n      \"number\": \"{{number}}\",\r\n      \"complement\": \"{{complement}}\",\r\n      \"country\": \"{{country}}\"\r\n    }\r\n  ]\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}company",
									"host": [
										"{{url}}company"
									]
								}
							},
							"response": [
								{
									"name": "400 - Error",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"Kprado_semdominio.com\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{zipCode}}\",\r\n      \"city\": \"{{city}}\",\r\n      \"state\": \"{{state}}\",\r\n      \"district\": \"{{district}}\",\r\n      \"street\": \"{{street}}\",\r\n      \"number\": \"{{number}}\",\r\n      \"complement\": \"{{complement}}\",\r\n      \"country\": \"{{country}}\"\r\n    }\r\n  ]\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}company",
											"host": [
												"{{url}}company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": null,
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Length",
											"value": "103"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 06 Aug 2025 00:29:02 GMT"
										},
										{
											"key": "Etag",
											"value": "W/\"67-1tJdVkEQ8auiV5JWRNbVd1Dnl4A\""
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": [\n        \"O campo 'Email' informado é inválido. Informe um e-mail no formato [nome@domínio.com].\"\n    ]\n}"
								}
							]
						},
						{
							"name": "Cadastrar empresa com campo \"E-mail\" com formato inválido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", () => {\r",
											"    pm.expect(pm.response.code).to.eql(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagem correta\", () => {\r",
											"    const body = pm.response.json();\r",
											"    pm.expect(body.error[0]).to.eql(\"O campo 'Email' informado é inválido. Informe um e-mail no formato [nome@domínio.com].\"); \r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"Kprado_semdominio.com\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{zipCode}}\",\r\n      \"city\": \"{{city}}\",\r\n      \"state\": \"{{state}}\",\r\n      \"district\": \"{{district}}\",\r\n      \"street\": \"{{street}}\",\r\n      \"number\": \"{{number}}\",\r\n      \"complement\": \"{{complement}}\",\r\n      \"country\": \"{{country}}\"\r\n    }\r\n  ]\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}company",
									"host": [
										"{{url}}company"
									]
								}
							},
							"response": [
								{
									"name": "400 - Error",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"Kprado_semdominio.com\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{zipCode}}\",\r\n      \"city\": \"{{city}}\",\r\n      \"state\": \"{{state}}\",\r\n      \"district\": \"{{district}}\",\r\n      \"street\": \"{{street}}\",\r\n      \"number\": \"{{number}}\",\r\n      \"complement\": \"{{complement}}\",\r\n      \"country\": \"{{country}}\"\r\n    }\r\n  ]\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}company",
											"host": [
												"{{url}}company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": null,
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Length",
											"value": "103"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 06 Aug 2025 00:29:02 GMT"
										},
										{
											"key": "Etag",
											"value": "W/\"67-1tJdVkEQ8auiV5JWRNbVd1Dnl4A\""
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": [\n        \"O campo 'Email' informado é inválido. Informe um e-mail no formato [nome@domínio.com].\"\n    ]\n}"
								}
							]
						},
						{
							"name": "Cadastrar empresa sem campo \"E-mail\" (Campo obrigatório)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", () => {\r",
											"    pm.expect(pm.response.code).to.eql(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagem correta\", () => {\r",
											"    const body = pm.response.json();\r",
											"    pm.expect(body.error[0]).to.eql(\"O campo 'Email' é obrigatório.\"); \r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{zipCode}}\",\r\n      \"city\": \"{{city}}\",\r\n      \"state\": \"{{state}}\",\r\n      \"district\": \"{{district}}\",\r\n      \"street\": \"{{street}}\",\r\n      \"number\": \"{{number}}\",\r\n      \"complement\": \"{{complement}}\",\r\n      \"country\": \"{{country}}\"\r\n    }\r\n  ]\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}company",
									"host": [
										"{{url}}company"
									]
								}
							},
							"response": [
								{
									"name": "400 - Error",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{zipCode}}\",\r\n      \"city\": \"{{city}}\",\r\n      \"state\": \"{{state}}\",\r\n      \"district\": \"{{district}}\",\r\n      \"street\": \"{{street}}\",\r\n      \"number\": \"{{number}}\",\r\n      \"complement\": \"{{complement}}\",\r\n      \"country\": \"{{country}}\"\r\n    }\r\n  ]\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}company",
											"host": [
												"{{url}}company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": null,
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Length",
											"value": "46"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 06 Aug 2025 13:58:33 GMT"
										},
										{
											"key": "Etag",
											"value": "W/\"2e-FySEDqEIp0/vlnE6D8NxrX0zx+U\""
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": [\n        \"O campo 'Email' é obrigatório.\"\n    ]\n}"
								}
							]
						},
						{
							"name": "Cadastrar empresa sem campo \"Número\" (Campo obrigatório)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", () => {\r",
											"    pm.expect(pm.response.code).to.eql(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagem correta\", () => {\r",
											"    const body = pm.response.json();\r",
											"    pm.expect(body.error[0]).to.eql(\"O campo 'número' é obrigatório.\"); \r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{zipCode}}\",\r\n      \"city\": \"{{city}}\",\r\n      \"state\": \"{{state}}\",\r\n      \"district\": \"{{district}}\",\r\n      \"street\": \"{{street}}\",\r\n      \"number\": \"\",\r\n      \"complement\": \"{{complement}}\",\r\n      \"country\": \"{{country}}\"\r\n    }\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}company",
									"host": [
										"{{url}}company"
									]
								}
							},
							"response": [
								{
									"name": "400 - Error",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{zipCode}}\",\r\n      \"city\": \"{{city}}\",\r\n      \"state\": \"{{state}}\",\r\n      \"district\": \"{{district}}\",\r\n      \"street\": \"{{street}}\",\r\n      \"number\": \"\",\r\n      \"complement\": \"{{complement}}\",\r\n      \"country\": \"{{country}}\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}company",
											"host": [
												"{{url}}company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": null,
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Length",
											"value": "48"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 06 Aug 2025 13:49:29 GMT"
										},
										{
											"key": "Etag",
											"value": "W/\"30-flOoH4j93KGtLrJlE7op6EMEcek\""
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": [\n        \"O campo 'número' é obrigatório.\"\n    ]\n}"
								}
							]
						},
						{
							"name": "Cadastrar empresa com campo \"Número\" contendo letras",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", () => {\r",
											"    pm.expect(pm.response.code).to.eql(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagem correta\", () => {\r",
											"    const body = pm.response.json();\r",
											"    pm.expect(body.error[0]).to.eql(\"O campo 'número' só pode conter apenas números.\"); \r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{zipCode}}\",\r\n      \"city\": \"{{city}}\",\r\n      \"state\": \"{{state}}\",\r\n      \"district\": \"{{district}}\",\r\n      \"street\": \"{{street}}\",\r\n      \"number\": \"ajbe\",\r\n      \"complement\": \"{{complement}}\",\r\n      \"country\": \"{{country}}\"\r\n    }\r\n  ]\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}company",
									"host": [
										"{{url}}company"
									]
								}
							},
							"response": [
								{
									"name": "400 - Error",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{zipCode}}\",\r\n      \"city\": \"{{city}}\",\r\n      \"state\": \"{{state}}\",\r\n      \"district\": \"{{district}}\",\r\n      \"street\": \"{{street}}\",\r\n      \"number\": \"ajbe\",\r\n      \"complement\": \"{{complement}}\",\r\n      \"country\": \"{{country}}\"\r\n    }\r\n  ]\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}company",
											"host": [
												"{{url}}company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": null,
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Length",
											"value": "64"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 06 Aug 2025 00:36:58 GMT"
										},
										{
											"key": "Etag",
											"value": "W/\"40-H2jZvUOL0Cx2ykFM7NDmgejz06o\""
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": [\n        \"O campo 'número' só pode conter apenas números.\"\n    ]\n}"
								}
							]
						},
						{
							"name": "Cadastrar empresa com campo \"Número\" contendo mais de 10 caracteres",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", () => {\r",
											"    pm.expect(pm.response.code).to.eql(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagem correta\", () => {\r",
											"    const body = pm.response.json();\r",
											"    pm.expect(body.error[0]).to.eql(\"O campo 'número' deve possuir no máximo 10 caracteres.\"); \r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{zipCode}}\",\r\n      \"city\": \"{{city}}\",\r\n      \"state\": \"{{state}}\",\r\n      \"district\": \"{{district}}\",\r\n      \"street\": \"{{street}}\",\r\n      \"number\": \"01234567890\",\r\n      \"complement\": \"{{complement}}\",\r\n      \"country\": \"{{country}}\"\r\n    }\r\n  ]\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}company",
									"host": [
										"{{url}}company"
									]
								}
							},
							"response": [
								{
									"name": "400 - Error",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{zipCode}}\",\r\n      \"city\": \"{{city}}\",\r\n      \"state\": \"{{state}}\",\r\n      \"district\": \"{{district}}\",\r\n      \"street\": \"{{street}}\",\r\n      \"number\": \"01234567890\",\r\n      \"complement\": \"{{complement}}\",\r\n      \"country\": \"{{country}}\"\r\n    }\r\n  ]\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}company",
											"host": [
												"{{url}}company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": null,
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Length",
											"value": "70"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 06 Aug 2025 00:41:18 GMT"
										},
										{
											"key": "Etag",
											"value": "W/\"46-m8UCKtozkE6iVcJetPZFz9uzS58\""
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": [\n        \"O campo 'número' deve possuir no máximo 10 caracteres.\"\n    ]\n}"
								}
							]
						},
						{
							"name": "Cadastrar empresa sem campo \"CNPJ\" (Campo obrigatório)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", () => {\r",
											"    pm.expect(pm.response.code).to.eql(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagem correta\", () => {\r",
											"    const body = pm.response.json();\r",
											"    pm.expect(body.error[0]).to.eql(\"O campo 'CNPJ' da empresa é obrigatório.\"); \r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{zipCode}}\",\r\n      \"city\": \"{{city}}\",\r\n      \"state\": \"{{state}}\",\r\n      \"district\": \"{{district}}\",\r\n      \"street\": \"{{street}}\",\r\n      \"number\": \"{{number}}\",\r\n      \"complement\": \"{{complement}}\",\r\n      \"country\": \"{{country}}\"\r\n    }\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}company",
									"host": [
										"{{url}}company"
									]
								}
							},
							"response": [
								{
									"name": "400 - Error",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{zipCode}}\",\r\n      \"city\": \"{{city}}\",\r\n      \"state\": \"{{state}}\",\r\n      \"district\": \"{{district}}\",\r\n      \"street\": \"{{street}}\",\r\n      \"number\": \"{{number}}\",\r\n      \"complement\": \"{{complement}}\",\r\n      \"country\": \"{{country}}\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}company",
											"host": [
												"{{url}}company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": null,
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Length",
											"value": "56"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 06 Aug 2025 14:06:48 GMT"
										},
										{
											"key": "Etag",
											"value": "W/\"38-zCPlfK8koP/AMZNtgC5hq9pmjAY\""
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": [\n        \"O campo 'CNPJ' da empresa é obrigatório.\"\n    ]\n}"
								}
							]
						},
						{
							"name": "Cadastrar empresa com campo \"CNPJ\" com máscara",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", () => {\r",
											"    pm.expect(pm.response.code).to.eql(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagem correta\", () => {\r",
											"    const body = pm.response.json();\r",
											"    pm.expect(body.error[0]).to.eql(\"O campo 'CNPJ' da empresa deve ter no máximo 14 caracteres numéricos.\"); \r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"20.133.934/0001-09\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{zipCode}}\",\r\n      \"city\": \"{{city}}\",\r\n      \"state\": \"{{state}}\",\r\n      \"district\": \"{{district}}\",\r\n      \"street\": \"{{street}}\",\r\n      \"number\": \"{{number}}\",\r\n      \"complement\": \"{{complement}}\",\r\n      \"country\": \"{{country}}\"\r\n    }\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/company",
									"host": [
										"{{url}}"
									],
									"path": [
										"company"
									]
								}
							},
							"response": [
								{
									"name": "400 - Error",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"20.133.934/0001-09\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{zipCode}}\",\r\n      \"city\": \"{{city}}\",\r\n      \"state\": \"{{state}}\",\r\n      \"district\": \"{{district}}\",\r\n      \"street\": \"{{street}}\",\r\n      \"number\": \"{{number}}\",\r\n      \"complement\": \"{{complement}}\",\r\n      \"country\": \"{{country}}\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/company",
											"host": [
												"{{url}}"
											],
											"path": [
												"company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": null,
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Length",
											"value": "85"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Sat, 16 Aug 2025 18:35:29 GMT"
										},
										{
											"key": "Etag",
											"value": "W/\"55-Bb4MMd2d8LJX2XwJVSvlzKfuO+4\""
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": [\n        \"O campo 'CNPJ' da empresa deve ter no máximo 14 caracteres numéricos.\"\n    ]\n}"
								}
							]
						},
						{
							"name": "Cadastrar empresa com campo \"CNPJ\" contendo letras ou caracteres inválidos",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", () => {\r",
											"    pm.expect(pm.response.code).to.eql(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagem correta\", () => {\r",
											"    const body = pm.response.json();\r",
											"    pm.expect(body.error[0]).to.eql(\"O campo 'CNPJ' da empresa deve conter apenas números.\"); \r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"@absuronaopdah\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{zipCode}}\",\r\n      \"city\": \"{{city}}\",\r\n      \"state\": \"{{state}}\",\r\n      \"district\": \"{{district}}\",\r\n      \"street\": \"{{street}}\",\r\n      \"number\": \"{{number}}\",\r\n      \"complement\": \"{{complement}}\",\r\n      \"country\": \"{{country}}\"\r\n    }\r\n  ]\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}company",
									"host": [
										"{{url}}company"
									]
								}
							},
							"response": [
								{
									"name": "400 - Error",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"@absuronaopdah\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{zipCode}}\",\r\n      \"city\": \"{{city}}\",\r\n      \"state\": \"{{state}}\",\r\n      \"district\": \"{{district}}\",\r\n      \"street\": \"{{street}}\",\r\n      \"number\": \"{{number}}\",\r\n      \"complement\": \"{{complement}}\",\r\n      \"country\": \"{{country}}\"\r\n    }\r\n  ]\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}company",
											"host": [
												"{{url}}company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": null,
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Length",
											"value": "68"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 06 Aug 2025 00:39:12 GMT"
										},
										{
											"key": "Etag",
											"value": "W/\"44-1i3a/AUPoa9+W6cAwthZ9fqLb4Q\""
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": [\n        \"O campo 'CNPJ' da empresa deve conter apenas números.\"\n    ]\n}"
								}
							]
						},
						{
							"name": "Cadastrar empresa com campo \"CNPJ\" contendo menos de 14 dígitos",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", () => {\r",
											"    pm.expect(pm.response.code).to.eql(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagem correta\", () => {\r",
											"    const body = pm.response.json();\r",
											"    pm.expect(body.error[0]).to.eql(\"O campo 'CNPJ' da empresa deve ter no máximo 14 caracteres numéricos.\"); \r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"1245\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{zipCode}}\",\r\n      \"city\": \"{{city}}\",\r\n      \"state\": \"{{state}}\",\r\n      \"district\": \"{{district}}\",\r\n      \"street\": \"{{street}}\",\r\n      \"number\": \"{{number}}\",\r\n      \"complement\": \"{{complement}}\",\r\n      \"country\": \"{{country}}\"\r\n    }\r\n  ]\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}company",
									"host": [
										"{{url}}company"
									]
								}
							},
							"response": [
								{
									"name": "400 - Error",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"1245\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{zipCode}}\",\r\n      \"city\": \"{{city}}\",\r\n      \"state\": \"{{state}}\",\r\n      \"district\": \"{{district}}\",\r\n      \"street\": \"{{street}}\",\r\n      \"number\": \"{{number}}\",\r\n      \"complement\": \"{{complement}}\",\r\n      \"country\": \"{{country}}\"\r\n    }\r\n  ]\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}company",
											"host": [
												"{{url}}company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": null,
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Length",
											"value": "85"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 06 Aug 2025 12:58:34 GMT"
										},
										{
											"key": "Etag",
											"value": "W/\"55-Bb4MMd2d8LJX2XwJVSvlzKfuO+4\""
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": [\n        \"O campo 'CNPJ' da empresa deve ter no máximo 14 caracteres numéricos.\"\n    ]\n}"
								}
							]
						},
						{
							"name": "Cadastrar empresa com campo \"CNPJ\" contendo valor duplicado",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", () => {\r",
											"    pm.expect(pm.response.code).to.eql(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagem correta\", () => {\r",
											"    const body = pm.response.json();\r",
											"    pm.expect(body.alert[0]).to.eql(\"Essa companhia já está cadastrada. Verifique o nome, CNPJ e a razão social da companhia.\"); \r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"14380517000177\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{zipCode}}\",\r\n      \"city\": \"{{city}}\",\r\n      \"state\": \"{{state}}\",\r\n      \"district\": \"{{district}}\",\r\n      \"street\": \"{{street}}\",\r\n      \"number\": \"{{number}}\",\r\n      \"complement\": \"{{complement}}\",\r\n      \"country\": \"{{country}}\"\r\n    }\r\n  ]\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}company",
									"host": [
										"{{url}}company"
									]
								}
							},
							"response": [
								{
									"name": "400 - Error",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"14380517000177\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{zipCode}}\",\r\n      \"city\": \"{{city}}\",\r\n      \"state\": \"{{state}}\",\r\n      \"district\": \"{{district}}\",\r\n      \"street\": \"{{street}}\",\r\n      \"number\": \"{{number}}\",\r\n      \"complement\": \"{{complement}}\",\r\n      \"country\": \"{{country}}\"\r\n    }\r\n  ]\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}company",
											"host": [
												"{{url}}company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": null,
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Length",
											"value": "105"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 06 Aug 2025 13:02:02 GMT"
										},
										{
											"key": "Etag",
											"value": "W/\"69-/iCSJfOV/cztcNQQ7LnnL+JHkAc\""
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										}
									],
									"cookie": [],
									"body": "{\n    \"alert\": [\n        \"Essa companhia já está cadastrada. Verifique o nome, CNPJ e a razão social da companhia.\"\n    ]\n}"
								}
							]
						},
						{
							"name": "Cadastrar empresa sem campo \"Contato Responsável\" (Campo obrigatório)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", () => {\r",
											"    pm.expect(pm.response.code).to.eql(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagem correta\", () => {\r",
											"    const body = pm.response.json();\r",
											"    pm.expect(body.error[0]).to.eql(\"O campo 'Contado do Responsável' é obrigatório.\"); \r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{zipCode}}\",\r\n      \"city\": \"{{city}}\",\r\n      \"state\": \"{{state}}\",\r\n      \"district\": \"{{district}}\",\r\n      \"street\": \"{{street}}\",\r\n      \"number\": \"{{number}}\",\r\n      \"complement\": \"{{complement}}\",\r\n      \"country\": \"{{country}}\"\r\n    }\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}company",
									"host": [
										"{{url}}company"
									]
								}
							},
							"response": [
								{
									"name": "400 - Error",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{zipCode}}\",\r\n      \"city\": \"{{city}}\",\r\n      \"state\": \"{{state}}\",\r\n      \"district\": \"{{district}}\",\r\n      \"street\": \"{{street}}\",\r\n      \"number\": \"{{number}}\",\r\n      \"complement\": \"{{complement}}\",\r\n      \"country\": \"{{country}}\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}company",
											"host": [
												"{{url}}company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": null,
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Length",
											"value": "64"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 06 Aug 2025 14:02:56 GMT"
										},
										{
											"key": "Etag",
											"value": "W/\"40-6FuGrQK7rCuQSaWVr5H4T+RH/6c\""
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": [\n        \"O campo 'Contado do Responsável' é obrigatório.\"\n    ]\n}"
								}
							]
						},
						{
							"name": "Cadastrar empresa com campo \"Contato Responsável\" contendo apenas um nome",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", () => {\r",
											"    pm.expect(pm.response.code).to.eql(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagem correta\", () => {\r",
											"    const body = pm.response.json();\r",
											"    pm.expect(body.error[0]).to.eql(\"O campo 'Contato do Responsável' deve ter nome e sobrenome, contendo somente letras.\"); \r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"contato\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{zipCode}}\",\r\n      \"city\": \"{{city}}\",\r\n      \"state\": \"{{state}}\",\r\n      \"district\": \"{{district}}\",\r\n      \"street\": \"{{street}}\",\r\n      \"number\": \"{{number}}\",\r\n      \"complement\": \"{{complement}}\",\r\n      \"country\": \"{{country}}\"\r\n    }\r\n  ]\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}company",
									"host": [
										"{{url}}company"
									]
								}
							},
							"response": [
								{
									"name": "400 - Error",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"contato\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{zipCode}}\",\r\n      \"city\": \"{{city}}\",\r\n      \"state\": \"{{state}}\",\r\n      \"district\": \"{{district}}\",\r\n      \"street\": \"{{street}}\",\r\n      \"number\": \"{{number}}\",\r\n      \"complement\": \"{{complement}}\",\r\n      \"country\": \"{{country}}\"\r\n    }\r\n  ]\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}company",
											"host": [
												"{{url}}company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": null,
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Length",
											"value": "99"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 06 Aug 2025 13:03:51 GMT"
										},
										{
											"key": "Etag",
											"value": "W/\"63-mHYnvuFL9MpD6K2JAkw/LTQwFzY\""
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": [\n        \"O campo 'Contato do Responsável' deve ter nome e sobrenome, contendo somente letras.\"\n    ]\n}"
								}
							]
						},
						{
							"name": "Cadastrar empresa com campo \"Contato Responsável\" contendo mais de 100 caracteres",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", () => {\r",
											"    pm.expect(pm.response.code).to.eql(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagem correta\", () => {\r",
											"    const body = pm.response.json();\r",
											"    pm.expect(body.error[0]).to.eql(\"O campo 'Contado do Responsável' deve ter no máximo 100 caracteres.\"); \r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"Para dúvidas e suporte, envie um e-mail para atendimento.cliente.premium@empresaexemplo-internacional.com.br\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{zipCode}}\",\r\n      \"city\": \"{{city}}\",\r\n      \"state\": \"{{state}}\",\r\n      \"district\": \"{{district}}\",\r\n      \"street\": \"{{street}}\",\r\n      \"number\": \"{{number}}\",\r\n      \"complement\": \"{{complement}}\",\r\n      \"country\": \"{{country}}\"\r\n    }\r\n  ]\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}company",
									"host": [
										"{{url}}company"
									]
								}
							},
							"response": [
								{
									"name": "400 - Error",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"Para dúvidas e suporte, envie um e-mail para atendimento.cliente.premium@empresaexemplo-internacional.com.br\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{zipCode}}\",\r\n      \"city\": \"{{city}}\",\r\n      \"state\": \"{{state}}\",\r\n      \"district\": \"{{district}}\",\r\n      \"street\": \"{{street}}\",\r\n      \"number\": \"{{number}}\",\r\n      \"complement\": \"{{complement}}\",\r\n      \"country\": \"{{country}}\"\r\n    }\r\n  ]\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}company",
											"host": [
												"{{url}}company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": null,
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Length",
											"value": "83"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 06 Aug 2025 13:08:29 GMT"
										},
										{
											"key": "Etag",
											"value": "W/\"53-79Kgju1HCEtknjKvYmiFZdSXtJ0\""
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": [\n        \"O campo 'Contado do Responsável' deve ter no máximo 100 caracteres.\"\n    ]\n}"
								}
							]
						},
						{
							"name": "Cadastrar empresa com campo \"Contato Responsável\" contendo números",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", () => {\r",
											"    pm.expect(pm.response.code).to.eql(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagem correta\", () => {\r",
											"    const body = pm.response.json();\r",
											"    pm.expect(body.error[0]).to.eql(\"O campo 'Contato do Responsável' deve ter nome e sobrenome, contendo somente letras.\"); \r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"116546748\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{zipCode}}\",\r\n      \"city\": \"{{city}}\",\r\n      \"state\": \"{{state}}\",\r\n      \"district\": \"{{district}}\",\r\n      \"street\": \"{{street}}\",\r\n      \"number\": \"{{number}}\",\r\n      \"complement\": \"{{complement}}\",\r\n      \"country\": \"{{country}}\"\r\n    }\r\n  ]\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}company",
									"host": [
										"{{url}}company"
									]
								}
							},
							"response": [
								{
									"name": "400 - Error",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"116546748\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{zipCode}}\",\r\n      \"city\": \"{{city}}\",\r\n      \"state\": \"{{state}}\",\r\n      \"district\": \"{{district}}\",\r\n      \"street\": \"{{street}}\",\r\n      \"number\": \"{{number}}\",\r\n      \"complement\": \"{{complement}}\",\r\n      \"country\": \"{{country}}\"\r\n    }\r\n  ]\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}company",
											"host": [
												"{{url}}company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": null,
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Length",
											"value": "99"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 06 Aug 2025 13:09:48 GMT"
										},
										{
											"key": "Etag",
											"value": "W/\"63-mHYnvuFL9MpD6K2JAkw/LTQwFzY\""
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": [\n        \"O campo 'Contato do Responsável' deve ter nome e sobrenome, contendo somente letras.\"\n    ]\n}"
								}
							]
						},
						{
							"name": "Cadastrar empresa com campo \"Descrição\" contendo caracteres não alfanuméricos",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 201\", () => {\r",
											"    pm.expect(pm.response.code).to.eql(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagem correta\", () => {\r",
											"    const body = pm.response.json();\r",
											"    pm.expect(body.msg).to.eql(\"Olá a companhia true foi cadastrada com sucesso.\"); \r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"!@#$%¨&*()_\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{zipCode}}\",\r\n      \"city\": \"{{city}}\",\r\n      \"state\": \"{{state}}\",\r\n      \"district\": \"{{district}}\",\r\n      \"street\": \"{{street}}\",\r\n      \"number\": \"{{number}}\",\r\n      \"complement\": \"{{complement}}\",\r\n      \"country\": \"{{country}}\"\r\n    }\r\n  ]\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}company",
									"host": [
										"{{url}}company"
									]
								}
							},
							"response": []
						},
						{
							"name": "Cadastrar empresa sem campo \"Descrição\" (Campo obrigatório)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", () => {\r",
											"    pm.expect(pm.response.code).to.eql(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagem correta\", () => {\r",
											"    const body = pm.response.json();\r",
											"    pm.expect(body.error[0]).to.eql(\"O campo 'Descrição' é obrigatório.\"); \r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{zipCode}}\",\r\n      \"city\": \"{{city}}\",\r\n      \"state\": \"{{state}}\",\r\n      \"district\": \"{{district}}\",\r\n      \"street\": \"{{street}}\",\r\n      \"number\": \"{{number}}\",\r\n      \"complement\": \"{{complement}}\",\r\n      \"country\": \"{{country}}\"\r\n    }\r\n  ]\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}company",
									"host": [
										"{{url}}company"
									]
								}
							},
							"response": [
								{
									"name": "400 - Error",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{zipCode}}\",\r\n      \"city\": \"{{city}}\",\r\n      \"state\": \"{{state}}\",\r\n      \"district\": \"{{district}}\",\r\n      \"street\": \"{{street}}\",\r\n      \"number\": \"{{number}}\",\r\n      \"complement\": \"{{complement}}\",\r\n      \"country\": \"{{country}}\"\r\n    }\r\n  ]\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}company",
											"host": [
												"{{url}}company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": null,
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Length",
											"value": "52"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 06 Aug 2025 14:00:49 GMT"
										},
										{
											"key": "Etag",
											"value": "W/\"34-1sYCeINBIXHM5ceIzNfpRZTh2K4\""
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": [\n        \"O campo 'Descrição' é obrigatório.\"\n    ]\n}"
								}
							]
						},
						{
							"name": "Cadastrar empresa com campo \"Nome da empresa\" contendo mais de 100 caracteres",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", () => {\r",
											"    pm.expect(pm.response.code).to.eql(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagem correta\", () => {\r",
											"    const body = pm.response.json();\r",
											"    pm.expect(body.error[0]).to.eql(\"O campo 'Nome da empresa' deve ter no máximo 100 caracteres.\"); \r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"corporateName\": \"Companhia Global Integrada de Soluções Tecnológicas, Logística Inteligente e Serviços Corporativos Avançados Ltda.\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{zipCode}}\",\r\n      \"city\": \"{{city}}\",\r\n      \"state\": \"{{state}}\",\r\n      \"district\": \"{{district}}\",\r\n      \"street\": \"{{street}}\",\r\n      \"number\": \"{{number}}\",\r\n      \"complement\": \"{{complement}}\",\r\n      \"country\": \"{{country}}\"\r\n    }\r\n  ]\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}company",
									"host": [
										"{{url}}company"
									]
								}
							},
							"response": [
								{
									"name": "400 - Error",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"Companhia Global Integrada de Soluções Tecnológicas, Logística Inteligente e Serviços Corporativos Avançados Ltda.\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{zipCode}}\",\r\n      \"city\": \"{{city}}\",\r\n      \"state\": \"{{state}}\",\r\n      \"district\": \"{{district}}\",\r\n      \"street\": \"{{street}}\",\r\n      \"number\": \"{{number}}\",\r\n      \"complement\": \"{{complement}}\",\r\n      \"country\": \"{{country}}\"\r\n    }\r\n  ]\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}company",
											"host": [
												"{{url}}company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": null,
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Length",
											"value": "75"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 06 Aug 2025 13:27:51 GMT"
										},
										{
											"key": "Etag",
											"value": "W/\"4b-GbqsGuslshXBcYoZAzpiyLto1xQ\""
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": [\n        \"O campo 'Nome da empresa' deve ter no máximo 100 caracteres.\"\n    ]\n}"
								}
							]
						},
						{
							"name": "Cadastrar empresa com campo \"Nome da empresa\" contendo valor duplicado",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 201\", () => {\r",
											"    pm.expect(pm.response.code).to.eql(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagem correta\", () => {\r",
											"    const body = pm.response.json();\r",
											"    pm.expect(body.msg).to.eql(\"Olá a companhia true foi cadastrada com sucesso.\"); \r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"corporateName\": \"Empresa Teste 442\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{zipCode}}\",\r\n      \"city\": \"{{city}}\",\r\n      \"state\": \"{{state}}\",\r\n      \"district\": \"{{district}}\",\r\n      \"street\": \"{{street}}\",\r\n      \"number\": \"{{number}}\",\r\n      \"complement\": \"{{complement}}\",\r\n      \"country\": \"{{country}}\"\r\n    }\r\n  ]\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}company",
									"host": [
										"{{url}}company"
									]
								}
							},
							"response": []
						},
						{
							"name": "Cadastrar empresa com campo \"Nome da empresa\" contendo caracteres não alfanuméricos",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 201\", () => {\r",
											"    pm.expect(pm.response.code).to.eql(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagem correta\", () => {\r",
											"    const body = pm.response.json();\r",
											"    pm.expect(body.msg).to.eql(\"Olá a companhia true foi cadastrada com sucesso.\"); \r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"corporateName\": \"!@#$%¨&**(\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{zipCode}}\",\r\n      \"city\": \"{{city}}\",\r\n      \"state\": \"{{state}}\",\r\n      \"district\": \"{{district}}\",\r\n      \"street\": \"{{street}}\",\r\n      \"number\": \"{{number}}\",\r\n      \"complement\": \"{{complement}}\",\r\n      \"country\": \"{{country}}\"\r\n    }\r\n  ]\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}company",
									"host": [
										"{{url}}company"
									]
								}
							},
							"response": []
						},
						{
							"name": "Cadastrar empresa sem campo \"Nome da Empresa\" (Campo Obrigatório))",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", () => {\r",
											"    pm.expect(pm.response.code).to.eql(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagem correta\", () => {\r",
											"    const body = pm.response.json();\r",
											"    pm.expect(body.error[0]).to.eql(\"O campo 'Nome' é obrigatório.\"); \r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"corporateName\": \"\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{zipCode}}\",\r\n      \"city\": \"{{city}}\",\r\n      \"state\": \"{{state}}\",\r\n      \"district\": \"{{district}}\",\r\n      \"street\": \"{{street}}\",\r\n      \"number\": \"{{number}}\",\r\n      \"complement\": \"{{complement}}\",\r\n      \"country\": \"{{country}}\"\r\n    }\r\n  ]\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}company",
									"host": [
										"{{url}}company"
									]
								}
							},
							"response": []
						},
						{
							"name": "Cadastrar empresa com campo \"Razão Social\" contendo caracteres não alfanuméricos",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 201\", () => {\r",
											"    pm.expect(pm.response.code).to.eql(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagem correta\", () => {\r",
											"    const body = pm.response.json();\r",
											"    pm.expect(body.msg).to.eql(\"Olá a companhia true foi cadastrada com sucesso.\"); \r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"!@#$%¨&*())__\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{zipCode}}\",\r\n      \"city\": \"{{city}}\",\r\n      \"state\": \"{{state}}\",\r\n      \"district\": \"{{district}}\",\r\n      \"street\": \"{{street}}\",\r\n      \"number\": \"{{number}}\",\r\n      \"complement\": \"{{complement}}\",\r\n      \"country\": \"{{country}}\"\r\n    }\r\n  ]\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}company",
									"host": [
										"{{url}}company"
									]
								}
							},
							"response": []
						},
						{
							"name": "Cadastrar empresa com campo \"Razão Social\" contendo valor duplicado",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 201\", () => {\r",
											"    pm.expect(pm.response.code).to.eql(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagem correta\", () => {\r",
											"    const body = pm.response.json();\r",
											"    pm.expect(body.msg).to.eql(\"Olá a companhia true foi cadastrada com sucesso.\"); \r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"Matriz 285\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{zipCode}}\",\r\n      \"city\": \"{{city}}\",\r\n      \"state\": \"{{state}}\",\r\n      \"district\": \"{{district}}\",\r\n      \"street\": \"{{street}}\",\r\n      \"number\": \"{{number}}\",\r\n      \"complement\": \"{{complement}}\",\r\n      \"country\": \"{{country}}\"\r\n    }\r\n  ]\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}company",
									"host": [
										"{{url}}company"
									]
								}
							},
							"response": []
						},
						{
							"name": "Cadastrar empresa sem campo \"Razão Social\" (Campo obrigatório)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", () => {\r",
											"    pm.expect(pm.response.code).to.eql(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagem correta\", () => {\r",
											"    const body = pm.response.json();\r",
											"    pm.expect(body.error[0]).to.eql(\"O campo 'Razão Social' da empresa é obrigatório.\"); \r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{zipCode}}\",\r\n      \"city\": \"{{city}}\",\r\n      \"state\": \"{{state}}\",\r\n      \"district\": \"{{district}}\",\r\n      \"street\": \"{{street}}\",\r\n      \"number\": \"{{number}}\",\r\n      \"complement\": \"{{complement}}\",\r\n      \"country\": \"{{country}}\"\r\n    }\r\n  ]\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}company",
									"host": [
										"{{url}}company"
									]
								}
							},
							"response": [
								{
									"name": "400 - Error",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{zipCode}}\",\r\n      \"city\": \"{{city}}\",\r\n      \"state\": \"{{state}}\",\r\n      \"district\": \"{{district}}\",\r\n      \"street\": \"{{street}}\",\r\n      \"number\": \"{{number}}\",\r\n      \"complement\": \"{{complement}}\",\r\n      \"country\": \"{{country}}\"\r\n    }\r\n  ]\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}company",
											"host": [
												"{{url}}company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": null,
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Length",
											"value": "65"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 06 Aug 2025 14:46:07 GMT"
										},
										{
											"key": "Etag",
											"value": "W/\"41-JLsQ0kHSGhMB+z1uCicF8TqeayM\""
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": [\n        \"O campo 'Razão Social' da empresa é obrigatório.\"\n    ]\n}"
								}
							]
						},
						{
							"name": "Cadastrar empresa com campo \"Razão Social\" contendo mais de 100 caracteres",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", () => {\r",
											"    pm.expect(pm.response.code).to.eql(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagem correta\", () => {\r",
											"    const body = pm.response.json();\r",
											"    pm.expect(body.error[0]).to.eql(\"O campo 'Razão Social' da empresa deve ter no máximo 100 caracteres.\"); \r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"Organização Nacional de Desenvolvimento Sustentável, Pesquisa Científica e Inovação Tecnológica Avançada S.A.ADAFA\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{zipCode}}\",\r\n      \"city\": \"{{city}}\",\r\n      \"state\": \"{{state}}\",\r\n      \"district\": \"{{district}}\",\r\n      \"street\": \"{{street}}\",\r\n      \"number\": \"{{number}}\",\r\n      \"complement\": \"{{complement}}\",\r\n      \"country\": \"{{country}}\"\r\n    }\r\n  ]\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}company",
									"host": [
										"{{url}}company"
									]
								}
							},
							"response": [
								{
									"name": "400 - Error",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"Organização Nacional de Desenvolvimento Sustentável, Pesquisa Científica e Inovação Tecnológica Avançada S.A.ADAFA\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{zipCode}}\",\r\n      \"city\": \"{{city}}\",\r\n      \"state\": \"{{state}}\",\r\n      \"district\": \"{{district}}\",\r\n      \"street\": \"{{street}}\",\r\n      \"number\": \"{{number}}\",\r\n      \"complement\": \"{{complement}}\",\r\n      \"country\": \"{{country}}\"\r\n    }\r\n  ]\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}company",
											"host": [
												"{{url}}company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": null,
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Length",
											"value": "84"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 06 Aug 2025 14:42:54 GMT"
										},
										{
											"key": "Etag",
											"value": "W/\"54-biF1f++Dvd42w09gKFWtDnWZsH0\""
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": [\n        \"O campo 'Razão Social' da empresa deve ter no máximo 100 caracteres.\"\n    ]\n}"
								}
							]
						},
						{
							"name": "Cadastrar empresa com campo \"Telefone\" fora do padrão brasileiro",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", () => {\r",
											"    pm.expect(pm.response.code).to.eql(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagem correta\", () => {\r",
											"    const body = pm.response.json();\r",
											"    pm.expect(body.error[0]).to.eql(\"O campo 'Telefone' deve conter somente números.\"); \r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"+91-9876543210\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{zipCode}}\",\r\n      \"city\": \"{{city}}\",\r\n      \"state\": \"{{state}}\",\r\n      \"district\": \"{{district}}\",\r\n      \"street\": \"{{street}}\",\r\n      \"number\": \"{{number}}\",\r\n      \"complement\": \"{{complement}}\",\r\n      \"country\": \"{{country}}\"\r\n    }\r\n  ]\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}company",
									"host": [
										"{{url}}company"
									]
								}
							},
							"response": []
						},
						{
							"name": "Cadastrar empresa com campo \"Telefone\" contendo letras ou caracteres inválidos",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", () => {\r",
											"    pm.expect(pm.response.code).to.eql(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagem correta\", () => {\r",
											"    const body = pm.response.json();\r",
											"    pm.expect(body.error[0]).to.eql(\"O campo 'Telefone' deve conter somente números.\"); \r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"ooo128ayeb@4545_\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{zipCode}}\",\r\n      \"city\": \"{{city}}\",\r\n      \"state\": \"{{state}}\",\r\n      \"district\": \"{{district}}\",\r\n      \"street\": \"{{street}}\",\r\n      \"number\": \"{{number}}\",\r\n      \"complement\": \"{{complement}}\",\r\n      \"country\": \"{{country}}\"\r\n    }\r\n  ]\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}company",
									"host": [
										"{{url}}company"
									]
								}
							},
							"response": [
								{
									"name": "400 -  Error",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"ooo128ayeb@4545_\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{zipCode}}\",\r\n      \"city\": \"{{city}}\",\r\n      \"state\": \"{{state}}\",\r\n      \"district\": \"{{district}}\",\r\n      \"street\": \"{{street}}\",\r\n      \"number\": \"{{number}}\",\r\n      \"complement\": \"{{complement}}\",\r\n      \"country\": \"{{country}}\"\r\n    }\r\n  ]\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}company",
											"host": [
												"{{url}}company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": null,
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Length",
											"value": "62"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 06 Aug 2025 14:15:38 GMT"
										},
										{
											"key": "Etag",
											"value": "W/\"3e-FdOwD7hKuyx+537rGMDh9+u60+8\""
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": [\n        \"O campo 'Telefone' deve conter somente números.\"\n    ]\n}"
								}
							]
						},
						{
							"name": "Cadastrar empresa com campo \"Telefone\" contendo mais de 15 caracteres",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", () => {\r",
											"    pm.expect(pm.response.code).to.eql(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagem correta\", () => {\r",
											"    const body = pm.response.json();\r",
											"    pm.expect(body.error[0]).to.eql(\"O campo 'Telefone' deve ter entre 13 e 14 caracteres.\"); \r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"012345678901236488\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{zipCode}}\",\r\n      \"city\": \"{{city}}\",\r\n      \"state\": \"{{state}}\",\r\n      \"district\": \"{{district}}\",\r\n      \"street\": \"{{street}}\",\r\n      \"number\": \"{{number}}\",\r\n      \"complement\": \"{{complement}}\",\r\n      \"country\": \"{{country}}\"\r\n    }\r\n  ]\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}company",
									"host": [
										"{{url}}company"
									]
								}
							},
							"response": [
								{
									"name": "400 - Error",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"012345678901236488\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{zipCode}}\",\r\n      \"city\": \"{{city}}\",\r\n      \"state\": \"{{state}}\",\r\n      \"district\": \"{{district}}\",\r\n      \"street\": \"{{street}}\",\r\n      \"number\": \"{{number}}\",\r\n      \"complement\": \"{{complement}}\",\r\n      \"country\": \"{{country}}\"\r\n    }\r\n  ]\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}company",
											"host": [
												"{{url}}company"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": null,
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Length",
											"value": "67"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 06 Aug 2025 14:13:42 GMT"
										},
										{
											"key": "Etag",
											"value": "W/\"43-wpBv3poY09jZWqVc2VJy970ZzhI\""
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": [\n        \"O campo 'Telefone' deve ter entre 13 e 14 caracteres.\"\n    ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "UPDATE DADOS CADASTRAIS",
					"item": [
						{
							"name": "Alteração cadastro da empresa com o campo \"Contato do Responsável\" preenchido de forma incorreta",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", () => {\r",
											"    pm.expect(pm.response.code).to.eql(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagem correta\", () => {\r",
											"    const body = pm.response.json();\r",
											"    pm.expect(body.error[0]).to.eql(\"O campo 'Contato do Responsável' deve ter nome e sobrenome, contendo somente letras.\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"corporateName\": \"Teste do Teste\",\r\n  \"registerCompany\": \"12126456000155\",\r\n  \"mail\": \"test@test.com\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"99999999999999\",\r\n  \"serviceDescription\": \"Testes\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}company/{{IDCompany}}",
									"host": [
										"{{url}}company"
									],
									"path": [
										"{{IDCompany}}"
									]
								}
							},
							"response": [
								{
									"name": "400 - Error",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"Teste do Teste\",\r\n  \"registerCompany\": \"12126456000155\",\r\n  \"mail\": \"test@test.com\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"Marcio\",\r\n  \"telephone\": \"99999999999999\",\r\n  \"serviceDescription\": \"Testes\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}company/{{IDCompany}}",
											"host": [
												"{{url}}company"
											],
											"path": [
												"{{IDCompany}}"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": null,
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Length",
											"value": "99"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 13 Aug 2025 19:16:29 GMT"
										},
										{
											"key": "Etag",
											"value": "W/\"63-mHYnvuFL9MpD6K2JAkw/LTQwFzY\""
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": [\n        \"O campo 'Contato do Responsável' deve ter nome e sobrenome, contendo somente letras.\"\n    ]\n}"
								}
							]
						},
						{
							"name": "Alteração cadastro da empresa corretamente",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 200\", () => {\r",
											"    pm.expect(pm.response.code).to.eql(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagem correta\", () => {\r",
											"    const body = pm.response.json();\r",
											"    pm.expect(body.msg).to.eql(\"Companhia atualizada com sucesso.\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}company/{{IDCompany}}",
									"host": [
										"{{url}}company"
									],
									"path": [
										"{{IDCompany}}"
									]
								}
							},
							"response": [
								{
									"name": "200 - Sucess",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"Teste do Teste\",\r\n  \"registerCompany\": \"12126456000155\",\r\n  \"mail\": \"test@test.com\",\r\n  \"matriz\": \"Teste\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"99999999999999\",\r\n  \"serviceDescription\": \"Testes\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}company/{{IDCompany}}",
											"host": [
												"{{url}}company"
											],
											"path": [
												"{{IDCompany}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": null,
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Length",
											"value": "1108"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 13 Aug 2025 19:17:38 GMT"
										},
										{
											"key": "Etag",
											"value": "W/\"454-ve17laLZhBDLOCmd+EBWfKwjWao\""
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										}
									],
									"cookie": [],
									"body": "{\n    \"msg\": \"Companhia atualizada com sucesso.\",\n    \"updatedCompany\": {\n        \"_id\": \"68815b45232fb2bd065a0ec7\",\n        \"corporateName\": \"Teste do Teste\",\n        \"registerCompany\": \"12126456000155\",\n        \"responsibleContact\": \"Ana Oliveira\",\n        \"mail\": \"test@test.com\",\n        \"telephone\": \"99999999999999\",\n        \"serviceDescription\": \"Testes\",\n        \"matriz\": \"Teste\",\n        \"status\": true,\n        \"address\": [\n            {\n                \"country\": \"Brasil\",\n                \"zipCode\": \"04777001\",\n                \"city\": \"São Paulo\",\n                \"state\": \"SP\",\n                \"district\": \"Rua das Flores\",\n                \"street\": \"Avenida Interlagos\",\n                \"number\": \"5085475989\",\n                \"complement\": \"de 4503 ao fim - lado ímpar\",\n                \"_id\": \"68815b45232fb2bd065a0ec8\"\n            }\n        ],\n        \"audit\": [\n            {\n                \"registeredBy\": {\n                    \"userId\": \"6859b68390bc38a248ffdb0e\",\n                    \"userLogin\": \"sysadmin@qacoders.com\"\n                },\n                \"registrationDate\": \"quarta-feira, 23/07/2025, 18:59:33 BRT\",\n                \"_id\": \"68815b45232fb2bd065a0ec9\"\n            },\n            {\n                \"updatedBy\": {\n                    \"userId\": \"687e99dcf1437966da25d9bc\",\n                    \"userLogin\": \"sysadmin@qacoders.com\"\n                },\n                \"updateDate\": \"quarta-feira, 13/08/2025, 16:17:09 BRT\",\n                \"_id\": \"689ce4b5232fb2bd065a1667\"\n            },\n            {\n                \"updatedBy\": {\n                    \"userId\": \"687e99dcf1437966da25d9bc\",\n                    \"userLogin\": \"sysadmin@qacoders.com\"\n                },\n                \"updateDate\": \"quarta-feira, 13/08/2025, 16:17:38 BRT\",\n                \"_id\": \"689ce4d2232fb2bd065a1676\"\n            }\n        ],\n        \"__v\": 0\n    }\n}"
								}
							]
						},
						{
							"name": "Alterar cadastro da empresa informando e-mail inválido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", () => {\r",
											"    pm.expect(pm.response.code).to.eql(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagem correta\", () => {\r",
											"    const body = pm.response.json();\r",
											"    pm.expect(body.error[0]).to.eql(\"O campo 'Email' informado é inválido. Informe um e-mail no formato [nome@domínio.com].\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"test21.com\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}company/{{IDCompany}}",
									"host": [
										"{{url}}company"
									],
									"path": [
										"{{IDCompany}}"
									]
								}
							},
							"response": [
								{
									"name": "400 - Error",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"test21.com\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}company/{{IDCompany}}",
											"host": [
												"{{url}}company"
											],
											"path": [
												"{{IDCompany}}"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": null,
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Length",
											"value": "103"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 13 Aug 2025 19:22:06 GMT"
										},
										{
											"key": "Etag",
											"value": "W/\"67-1tJdVkEQ8auiV5JWRNbVd1Dnl4A\""
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": [\n        \"O campo 'Email' informado é inválido. Informe um e-mail no formato [nome@domínio.com].\"\n    ]\n}"
								}
							]
						},
						{
							"name": "Alterar cadastro da empresa informando número de telefone com mais de 15 dígitos",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", () => {\r",
											"    pm.expect(pm.response.code).to.eql(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagem correta\", () => {\r",
											"    const body = pm.response.json();\r",
											"    pm.expect(body.error[0]).to.eql(\"O campo 'Telefone' deve ter entre 13 e 14 caracteres.\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"123456789012345697855\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}company/{{IDCompany}}",
									"host": [
										"{{url}}company"
									],
									"path": [
										"{{IDCompany}}"
									]
								}
							},
							"response": [
								{
									"name": "400 - Error",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"123456789012345697855\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}company/{{IDCompany}}",
											"host": [
												"{{url}}company"
											],
											"path": [
												"{{IDCompany}}"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": null,
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Length",
											"value": "67"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 13 Aug 2025 19:23:56 GMT"
										},
										{
											"key": "Etag",
											"value": "W/\"43-wpBv3poY09jZWqVc2VJy970ZzhI\""
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": [\n        \"O campo 'Telefone' deve ter entre 13 e 14 caracteres.\"\n    ]\n}"
								}
							]
						},
						{
							"name": "Alterar cadastro da empresa informando telefone com formato inválido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", () => {\r",
											"    pm.expect(pm.response.code).to.eql(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagem correta\", () => {\r",
											"    const body = pm.response.json();\r",
											"    pm.expect(body.error[0]).to.eql(\"O campo 'Telefone' deve conter somente números.\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"+5511 975821469\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}company/{{IDCompany}}",
									"host": [
										"{{url}}company"
									],
									"path": [
										"{{IDCompany}}"
									]
								}
							},
							"response": [
								{
									"name": "400 - Error",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"{{registerCompany}}\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"+5511 975821469\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}company/{{IDCompany}}",
											"host": [
												"{{url}}company"
											],
											"path": [
												"{{IDCompany}}"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": null,
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Length",
											"value": "62"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 13 Aug 2025 19:26:47 GMT"
										},
										{
											"key": "Etag",
											"value": "W/\"3e-FdOwD7hKuyx+537rGMDh9+u60+8\""
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": [\n        \"O campo 'Telefone' deve conter somente números.\"\n    ]\n}"
								}
							]
						},
						{
							"name": "Alterar cadastro da empresa  informando CNPJ com máscara",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", () => {\r",
											"    pm.expect(pm.response.code).to.eql(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagem correta\", () => {\r",
											"    const body = pm.response.json();\r",
											"    pm.expect(body.error[0]).to.eql(\"O campo 'CNPJ' da empresa deve ter no máximo 14 caracteres numéricos.\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"54.345.671/0001-13\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}company/{{IDCompany}}",
									"host": [
										"{{url}}company"
									],
									"path": [
										"{{IDCompany}}"
									]
								}
							},
							"response": [
								{
									"name": "400 - Error",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"54.345.671/0001-13\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}company/{{IDCompany}}",
											"host": [
												"{{url}}company"
											],
											"path": [
												"{{IDCompany}}"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": null,
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Length",
											"value": "85"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 13 Aug 2025 19:36:52 GMT"
										},
										{
											"key": "Etag",
											"value": "W/\"55-Bb4MMd2d8LJX2XwJVSvlzKfuO+4\""
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": [\n        \"O campo 'CNPJ' da empresa deve ter no máximo 14 caracteres numéricos.\"\n    ]\n}"
								}
							]
						},
						{
							"name": "Alterar cadastro da empresa  informando CNPJ contendo mais de 14 caracteres",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", () => {\r",
											"    pm.expect(pm.response.code).to.eql(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagem correta\", () => {\r",
											"    const body = pm.response.json();\r",
											"    pm.expect(body.error[0]).to.eql(\"O campo 'CNPJ' da empresa deve ter no máximo 14 caracteres numéricos.\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"54123184629085656\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}company/{{IDCompany}}",
									"host": [
										"{{url}}company"
									],
									"path": [
										"{{IDCompany}}"
									]
								}
							},
							"response": [
								{
									"name": "400 - Error",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"54123184629085656\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}company/{{IDCompany}}",
											"host": [
												"{{url}}company"
											],
											"path": [
												"{{IDCompany}}"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": null,
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Length",
											"value": "85"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 13 Aug 2025 19:38:27 GMT"
										},
										{
											"key": "Etag",
											"value": "W/\"55-Bb4MMd2d8LJX2XwJVSvlzKfuO+4\""
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": [\n        \"O campo 'CNPJ' da empresa deve ter no máximo 14 caracteres numéricos.\"\n    ]\n}"
								}
							]
						},
						{
							"name": "Alterar cadastro da empresa  informando nome contendo caracteres especiais",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", () => {\r",
											"    pm.expect(pm.response.code).to.eql(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagem correta\", () => {\r",
											"    const body = pm.response.json();\r",
											"    pm.expect(body.error[0]).to.eql(\"O campo 'CNPJ' da empresa deve ter no máximo 14 caracteres numéricos.\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"54123184629085656\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}company/{{IDCompany}}",
									"host": [
										"{{url}}company"
									],
									"path": [
										"{{IDCompany}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Alterar cadastro da empresa  informando CNPJ contendo mais de 14 caracteres Copy 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", () => {\r",
											"    pm.expect(pm.response.code).to.eql(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagem correta\", () => {\r",
											"    const body = pm.response.json();\r",
											"    pm.expect(body.error[0]).to.eql(\"O campo 'CNPJ' da empresa deve ter no máximo 14 caracteres numéricos.\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"54123184629085656\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}company/{{IDCompany}}",
									"host": [
										"{{url}}company"
									],
									"path": [
										"{{IDCompany}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Alterar cadastro da empresa  informando CNPJ contendo mais de 14 caracteres Copy 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", () => {\r",
											"    pm.expect(pm.response.code).to.eql(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagem correta\", () => {\r",
											"    const body = pm.response.json();\r",
											"    pm.expect(body.error[0]).to.eql(\"O campo 'CNPJ' da empresa deve ter no máximo 14 caracteres numéricos.\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"54123184629085656\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}company/{{IDCompany}}",
									"host": [
										"{{url}}company"
									],
									"path": [
										"{{IDCompany}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Alterar cadastro da empresa  informando CNPJ contendo mais de 14 caracteres Copy 4",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", () => {\r",
											"    pm.expect(pm.response.code).to.eql(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagem correta\", () => {\r",
											"    const body = pm.response.json();\r",
											"    pm.expect(body.error[0]).to.eql(\"O campo 'CNPJ' da empresa deve ter no máximo 14 caracteres numéricos.\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"corporateName\": \"{{corporateName}}\",\r\n  \"registerCompany\": \"54123184629085656\",\r\n  \"mail\": \"{{mail}}\",\r\n  \"matriz\": \"{{matriz}}\",\r\n  \"responsibleContact\": \"{{responsibleContact}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"serviceDescription\": \"{{serviceDescription}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}company/{{IDCompany}}",
									"host": [
										"{{url}}company"
									],
									"path": [
										"{{IDCompany}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Alterar cadastro da empresa com todos os campos vazios",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", () => {\r",
											"    pm.expect(pm.response.code).to.eql(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagens corretas\", () => {\r",
											"    const body = pm.response.json();\r",
											"    pm.expect(body.error[0]).to.eql(\"O campo 'Email' é obrigatório.\");\r",
											"    pm.expect(body.error[1]).to.eql(\"O campo 'CNPJ' da empresa é obrigatório.\");\r",
											"    pm.expect(body.error[2]).to.eql(\"O campo 'Razão Social' da empresa é obrigatório.\");\r",
											"    pm.expect(body.error[3]).to.eql(\"O campo 'Contado do Responsável' é obrigatório.\");\r",
											"    pm.expect(body.error[4]).to.eql(\"O campo 'Telefone' é obrigatório.\");\r",
											"    pm.expect(body.error[5]).to.eql(\"O campo 'Descrição' é obrigatório.\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"corporateName\": \"\",\r\n  \"registerCompany\": \"\",\r\n  \"mail\": \"\",\r\n  \"matriz\": \"\",\r\n  \"responsibleContact\": \"\",\r\n  \"telephone\": \"\",\r\n  \"serviceDescription\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}company/{{IDCompany}}",
									"host": [
										"{{url}}company"
									],
									"path": [
										"{{IDCompany}}"
									]
								}
							},
							"response": [
								{
									"name": "400 - Error",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"\",\r\n  \"registerCompany\": \"\",\r\n  \"mail\": \"\",\r\n  \"matriz\": \"\",\r\n  \"responsibleContact\": \"\",\r\n  \"telephone\": \"\",\r\n  \"serviceDescription\": \"\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}company/{{IDCompany}}",
											"host": [
												"{{url}}company"
											],
											"path": [
												"{{IDCompany}}"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": null,
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Length",
											"value": "277"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 13 Aug 2025 19:34:24 GMT"
										},
										{
											"key": "Etag",
											"value": "W/\"115-YI2s/OrrkHSmI0XXKK4ejSEdod8\""
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": [\n        \"O campo 'Email' é obrigatório.\",\n        \"O campo 'CNPJ' da empresa é obrigatório.\",\n        \"O campo 'Razão Social' da empresa é obrigatório.\",\n        \"O campo 'Contado do Responsável' é obrigatório.\",\n        \"O campo 'Telefone' é obrigatório.\",\n        \"O campo 'Descrição' é obrigatório.\"\n    ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "UPDATE ENDEREÇO EMPRESA",
					"item": [
						{
							"name": "Editar dados de endereço da empresa",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"04777001\",\r\n      \"city\": \"São Paulo\",\r\n      \"state\": \"SP\",\r\n      \"district\": \"Rua das Flores\",\r\n      \"street\": \"Avenida Interlagos\",\r\n      \"number\": \"50\",\r\n      \"complement\": \"de 4503 ao fim - lado ímpar\",\r\n      \"country\": \"Brasil\"\r\n    }\r\n  ]\r\n}"
								},
								"url": {
									"raw": "{{url}}/company/address/{{IDCompany}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"company",
										"address",
										"{{IDCompany}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "UPDATE STATUS DA EMPRESA",
					"item": [
						{
							"name": "New Request",
							"request": {
								"method": "GET",
								"header": []
							},
							"response": []
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							"// Função para gerar CNPJ válido (14 dígitos numéricos)\r",
							"function gerarCNPJ() {\r",
							"    const base = Math.floor(10000000 + Math.random() * 90000000).toString(); // 8 dígitos\r",
							"    return base + \"0001\" + Math.floor(Math.random() * 90).toString().padStart(2, '0'); // total 14 dígitos\r",
							"}\r",
							"\r",
							"// Função para gerar nome com número\r",
							"function gerarNome(base) {\r",
							"    return `${base} ${Math.floor(Math.random() * 1000)}`;\r",
							"}\r",
							"\r",
							"// Função para gerar nome e sobrenome com letras apenas\r",
							"function gerarNomeCompleto() {\r",
							"    const nomes = [\"Marcio\", \"Ana\", \"Lucas\", \"Fernanda\", \"João\"];\r",
							"    const sobrenomes = [\"Silva\", \"Souza\", \"Lima\", \"Oliveira\", \"Costa\"];\r",
							"    return `${nomes[Math.floor(Math.random() * nomes.length)]} ${sobrenomes[Math.floor(Math.random() * sobrenomes.length)]}`;\r",
							"}\r",
							"\r",
							"// Gera número real e limpo\r",
							"const numero = Math.floor(1 + Math.random() * 9999); // número puro\r",
							"\r",
							"// Salva como número, não string\r",
							"pm.environment.set(\"number\", numero);\r",
							"\r",
							"// Debug opcional\r",
							"console.log(\"Número gerado:\", numero, typeof numero);\r",
							"// Definindo variáveis no ambiente\r",
							"pm.environment.set(\"corporateName\", gerarNome(\"Empresa Teste\"));\r",
							"pm.environment.set(\"registerCompany\", gerarCNPJ());\r",
							"pm.environment.set(\"mail\", `teste${Date.now()}@example.com`);\r",
							"pm.environment.set(\"matriz\", gerarNome(\"Matriz\"));\r",
							"pm.environment.set(\"responsibleContact\", gerarNomeCompleto());\r",
							"pm.environment.set(\"telephone\", \"99999999999999\");\r",
							"pm.environment.set(\"serviceDescription\", \"Testes\");\r",
							"\r",
							"// Endereço\r",
							"pm.environment.set(\"zipCode\", \"04777001\");\r",
							"pm.environment.set(\"city\", \"São Paulo\");\r",
							"pm.environment.set(\"state\", \"SP\");\r",
							"pm.environment.set(\"district\", \"Rua das Flores\");\r",
							"pm.environment.set(\"street\", \"Avenida Interlagos\");\r",
							"pm.environment.set(\"number\", Math.floor(1 + Math.random() * 9999));\r",
							"pm.environment.set(\"complement\", \"de 4503 ao fim - lado ímpar\");\r",
							"pm.environment.set(\"country\", \"Brasil\");\r",
							"\r",
							"// (opcional) Debug no console\r",
							"console.log(\"CNPJ:\", pm.environment.get(\"registerCompany\"));\r",
							"console.log(\"Contato:\", pm.environment.get(\"responsibleContact\"));\r",
							"console.log(\"Número:\", pm.environment.get(\"number\"));\r",
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Board",
			"item": [
				{
					"name": "Listar Diretoria",
					"item": [
						{
							"name": "Lista Diretoria com usuário Admin",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", () => {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Verificar se existem Diretorias\", () => {\r",
											"    const resposta = pm.response.json();\r",
											"    pm.expect(resposta).to.be.an(\"array\");\r",
											"    pm.expect(resposta.length).to.be.above(0); // se espera que existam diretorias\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}board",
									"host": [
										"{{url}}board"
									]
								}
							},
							"response": [
								{
									"name": "Lista Diretoria com usuário Admin",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}board",
											"host": [
												"{{url}}board"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": null,
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Length",
											"value": "2853"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Tue, 05 Aug 2025 19:07:13 GMT"
										},
										{
											"key": "Etag",
											"value": "W/\"b25-Nnm8R5e9JSETg3fwdifajPQSEzI\""
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										}
									],
									"cookie": [],
									"body": "[\n    {\n        \"_id\": \"6891439be56b350eb66f1a42\",\n        \"boardName\": \"Segurança\",\n        \"boardCode\": \"01\",\n        \"status\": true,\n        \"audit\": [\n            {\n                \"registeredBy\": {\n                    \"userId\": \"6859b68390bc38a248ffdb0e\",\n                    \"userLogin\": \"sysadmin@qacoders.com\"\n                },\n                \"registrationDate\": \"segunda-feira, 04/08/2025, 20:34:51 BRT\",\n                \"_id\": \"6891439be56b350eb66f1a43\"\n            },\n            {\n                \"updatedBy\": {\n                    \"userId\": \"6859b68390bc38a248ffdb0e\",\n                    \"userLogin\": \"sysadmin@qacoders.com\"\n                },\n                \"updateDate\": \"segunda-feira, 04/08/2025, 20:35:45 BRT\",\n                \"_id\": \"689143d1e56b350eb66f1a59\"\n            }\n        ],\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"6891448ee56b350eb66f1a81\",\n        \"boardName\": \"TesteDiretoria\",\n        \"boardCode\": \"02\",\n        \"status\": true,\n        \"audit\": [\n            {\n                \"registeredBy\": {\n                    \"userId\": \"688bb047986922802811fee3\",\n                    \"userLogin\": \"sysadmin@qacoders.com\"\n                },\n                \"registrationDate\": \"segunda-feira, 04/08/2025, 20:38:54 BRT\",\n                \"_id\": \"6891448ee56b350eb66f1a82\"\n            }\n        ],\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"68914498e56b350eb66f1a88\",\n        \"boardName\": \"Ecxfxraefvubopnv\",\n        \"boardCode\": \"03\",\n        \"status\": true,\n        \"audit\": [\n            {\n                \"registeredBy\": {\n                    \"userId\": \"6859b68390bc38a248ffdb0e\",\n                    \"userLogin\": \"sysadmin@qacoders.com\"\n                },\n                \"registrationDate\": \"segunda-feira, 04/08/2025, 20:39:04 BRT\",\n                \"_id\": \"68914498e56b350eb66f1a89\"\n            }\n        ],\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"68914559e56b350eb66f1ac9\",\n        \"boardName\": \"Operacionais\",\n        \"boardCode\": \"04\",\n        \"status\": true,\n        \"audit\": [\n            {\n                \"registeredBy\": {\n                    \"userId\": \"6888ecda6d0acf13553c9eec\",\n                    \"userLogin\": \"sysadmin@qacoders.com\"\n                },\n                \"registrationDate\": \"segunda-feira, 04/08/2025, 20:42:17 BRT\",\n                \"_id\": \"68914559e56b350eb66f1aca\"\n            }\n        ],\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"68914566e56b350eb66f1ad5\",\n        \"boardName\": \"Atendimento ao Cliente\",\n        \"boardCode\": \"05\",\n        \"status\": true,\n        \"audit\": [\n            {\n                \"registeredBy\": {\n                    \"userId\": \"6835de8a5d899cf2867fd2ec\",\n                    \"userLogin\": \"sysadmin@qacoders.com\"\n                },\n                \"registrationDate\": \"segunda-feira, 04/08/2025, 20:42:30 BRT\",\n                \"_id\": \"68914566e56b350eb66f1ad6\"\n            }\n        ],\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"68914576e56b350eb66f1ae0\",\n        \"boardName\": \"Atendimento ao gerente\",\n        \"boardCode\": \"06\",\n        \"status\": true,\n        \"audit\": [\n            {\n                \"registeredBy\": {\n                    \"userId\": \"6835de8a5d899cf2867fd2ec\",\n                    \"userLogin\": \"sysadmin@qacoders.com\"\n                },\n                \"registrationDate\": \"segunda-feira, 04/08/2025, 20:42:46 BRT\",\n                \"_id\": \"68914576e56b350eb66f1ae1\"\n            }\n        ],\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"68914582e56b350eb66f1ae5\",\n        \"boardName\": \"CPIA\",\n        \"boardCode\": \"07\",\n        \"status\": true,\n        \"audit\": [\n            {\n                \"registeredBy\": {\n                    \"userId\": \"6888ecda6d0acf13553c9eec\",\n                    \"userLogin\": \"sysadmin@qacoders.com\"\n                },\n                \"registrationDate\": \"segunda-feira, 04/08/2025, 20:42:58 BRT\",\n                \"_id\": \"68914582e56b350eb66f1ae6\"\n            }\n        ],\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"689145c9e56b350eb66f1b41\",\n        \"boardName\": \"Elycjhyfdrwqmfbr\",\n        \"boardCode\": \"08\",\n        \"status\": true,\n        \"audit\": [\n            {\n                \"registeredBy\": {\n                    \"userId\": \"6859b68390bc38a248ffdb0e\",\n                    \"userLogin\": \"sysadmin@qacoders.com\"\n                },\n                \"registrationDate\": \"segunda-feira, 04/08/2025, 20:44:09 BRT\",\n                \"_id\": \"689145c9e56b350eb66f1b42\"\n            }\n        ],\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"6891465ce56b350eb66f1b98\",\n        \"boardName\": \"CNJP\",\n        \"boardCode\": \"09\",\n        \"status\": true,\n        \"audit\": [\n            {\n                \"registeredBy\": {\n                    \"userId\": \"6888ecda6d0acf13553c9eec\",\n                    \"userLogin\": \"sysadmin@qacoders.com\"\n                },\n                \"registrationDate\": \"segunda-feira, 04/08/2025, 20:46:36 BRT\",\n                \"_id\": \"6891465ce56b350eb66f1b99\"\n            }\n        ],\n        \"__v\": 0\n    }\n]"
								}
							]
						},
						{
							"name": "Lista Diretoria com usuário comum",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", () => {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Verificar se existem Diretorias\", () => {\r",
											"    const resposta = pm.response.json();\r",
											"    pm.expect(resposta).to.be.an(\"array\");\r",
											"    pm.expect(resposta.length).to.be.above(0); // se espera que existam diretorias\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenUser}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}board",
									"host": [
										"{{url}}board"
									]
								}
							},
							"response": [
								{
									"name": "Lista Diretoria Copy",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}board",
											"host": [
												"{{url}}board"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": null,
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Length",
											"value": "2853"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Tue, 05 Aug 2025 19:04:27 GMT"
										},
										{
											"key": "Etag",
											"value": "W/\"b25-Nnm8R5e9JSETg3fwdifajPQSEzI\""
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										}
									],
									"cookie": [],
									"body": "[\n    {\n        \"_id\": \"6891439be56b350eb66f1a42\",\n        \"boardName\": \"Segurança\",\n        \"boardCode\": \"01\",\n        \"status\": true,\n        \"audit\": [\n            {\n                \"registeredBy\": {\n                    \"userId\": \"6859b68390bc38a248ffdb0e\",\n                    \"userLogin\": \"sysadmin@qacoders.com\"\n                },\n                \"registrationDate\": \"segunda-feira, 04/08/2025, 20:34:51 BRT\",\n                \"_id\": \"6891439be56b350eb66f1a43\"\n            },\n            {\n                \"updatedBy\": {\n                    \"userId\": \"6859b68390bc38a248ffdb0e\",\n                    \"userLogin\": \"sysadmin@qacoders.com\"\n                },\n                \"updateDate\": \"segunda-feira, 04/08/2025, 20:35:45 BRT\",\n                \"_id\": \"689143d1e56b350eb66f1a59\"\n            }\n        ],\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"6891448ee56b350eb66f1a81\",\n        \"boardName\": \"TesteDiretoria\",\n        \"boardCode\": \"02\",\n        \"status\": true,\n        \"audit\": [\n            {\n                \"registeredBy\": {\n                    \"userId\": \"688bb047986922802811fee3\",\n                    \"userLogin\": \"sysadmin@qacoders.com\"\n                },\n                \"registrationDate\": \"segunda-feira, 04/08/2025, 20:38:54 BRT\",\n                \"_id\": \"6891448ee56b350eb66f1a82\"\n            }\n        ],\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"68914498e56b350eb66f1a88\",\n        \"boardName\": \"Ecxfxraefvubopnv\",\n        \"boardCode\": \"03\",\n        \"status\": true,\n        \"audit\": [\n            {\n                \"registeredBy\": {\n                    \"userId\": \"6859b68390bc38a248ffdb0e\",\n                    \"userLogin\": \"sysadmin@qacoders.com\"\n                },\n                \"registrationDate\": \"segunda-feira, 04/08/2025, 20:39:04 BRT\",\n                \"_id\": \"68914498e56b350eb66f1a89\"\n            }\n        ],\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"68914559e56b350eb66f1ac9\",\n        \"boardName\": \"Operacionais\",\n        \"boardCode\": \"04\",\n        \"status\": true,\n        \"audit\": [\n            {\n                \"registeredBy\": {\n                    \"userId\": \"6888ecda6d0acf13553c9eec\",\n                    \"userLogin\": \"sysadmin@qacoders.com\"\n                },\n                \"registrationDate\": \"segunda-feira, 04/08/2025, 20:42:17 BRT\",\n                \"_id\": \"68914559e56b350eb66f1aca\"\n            }\n        ],\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"68914566e56b350eb66f1ad5\",\n        \"boardName\": \"Atendimento ao Cliente\",\n        \"boardCode\": \"05\",\n        \"status\": true,\n        \"audit\": [\n            {\n                \"registeredBy\": {\n                    \"userId\": \"6835de8a5d899cf2867fd2ec\",\n                    \"userLogin\": \"sysadmin@qacoders.com\"\n                },\n                \"registrationDate\": \"segunda-feira, 04/08/2025, 20:42:30 BRT\",\n                \"_id\": \"68914566e56b350eb66f1ad6\"\n            }\n        ],\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"68914576e56b350eb66f1ae0\",\n        \"boardName\": \"Atendimento ao gerente\",\n        \"boardCode\": \"06\",\n        \"status\": true,\n        \"audit\": [\n            {\n                \"registeredBy\": {\n                    \"userId\": \"6835de8a5d899cf2867fd2ec\",\n                    \"userLogin\": \"sysadmin@qacoders.com\"\n                },\n                \"registrationDate\": \"segunda-feira, 04/08/2025, 20:42:46 BRT\",\n                \"_id\": \"68914576e56b350eb66f1ae1\"\n            }\n        ],\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"68914582e56b350eb66f1ae5\",\n        \"boardName\": \"CPIA\",\n        \"boardCode\": \"07\",\n        \"status\": true,\n        \"audit\": [\n            {\n                \"registeredBy\": {\n                    \"userId\": \"6888ecda6d0acf13553c9eec\",\n                    \"userLogin\": \"sysadmin@qacoders.com\"\n                },\n                \"registrationDate\": \"segunda-feira, 04/08/2025, 20:42:58 BRT\",\n                \"_id\": \"68914582e56b350eb66f1ae6\"\n            }\n        ],\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"689145c9e56b350eb66f1b41\",\n        \"boardName\": \"Elycjhyfdrwqmfbr\",\n        \"boardCode\": \"08\",\n        \"status\": true,\n        \"audit\": [\n            {\n                \"registeredBy\": {\n                    \"userId\": \"6859b68390bc38a248ffdb0e\",\n                    \"userLogin\": \"sysadmin@qacoders.com\"\n                },\n                \"registrationDate\": \"segunda-feira, 04/08/2025, 20:44:09 BRT\",\n                \"_id\": \"689145c9e56b350eb66f1b42\"\n            }\n        ],\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"6891465ce56b350eb66f1b98\",\n        \"boardName\": \"CNJP\",\n        \"boardCode\": \"09\",\n        \"status\": true,\n        \"audit\": [\n            {\n                \"registeredBy\": {\n                    \"userId\": \"6888ecda6d0acf13553c9eec\",\n                    \"userLogin\": \"sysadmin@qacoders.com\"\n                },\n                \"registrationDate\": \"segunda-feira, 04/08/2025, 20:46:36 BRT\",\n                \"_id\": \"6891465ce56b350eb66f1b99\"\n            }\n        ],\n        \"__v\": 0\n    }\n]"
								}
							]
						},
						{
							"name": "Quantidade de Diretorias Cadastradas",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", () => {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Verificar se existem Diretorias\", () => {\r",
											"    const resposta = pm.response.json();\r",
											"    pm.expect(resposta).to.be.an(\"array\");\r",
											"    pm.expect(resposta.length).to.be.above(0); // se espera que existam diretorias\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}board/count",
									"host": [
										"{{url}}board"
									],
									"path": [
										"count"
									]
								}
							},
							"response": [
								{
									"name": "Lista vazia Copy",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}board/count",
											"host": [
												"{{url}}board"
											],
											"path": [
												"count"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": null,
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Length",
											"value": "11"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Tue, 05 Aug 2025 18:58:47 GMT"
										},
										{
											"key": "Etag",
											"value": "W/\"b-A2JFpTTC/OyAnegVQwuMGN3eVwI\""
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										}
									],
									"cookie": [],
									"body": "{\n    \"count\": 9\n}"
								}
							]
						},
						{
							"name": "Visualização de uma Diretoria especifica",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", () => {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Verificar se existem Diretorias\", () => {\r",
											"    const resposta = pm.response.json();\r",
											"    pm.expect(resposta).to.be.an(\"array\");\r",
											"    pm.expect(resposta.length).to.be.above(0); // se espera que existam diretorias\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}board/{{IDDiretoria}}",
									"host": [
										"{{url}}board"
									],
									"path": [
										"{{IDDiretoria}}"
									]
								}
							},
							"response": [
								{
									"name": "Quantidade de Diretorias Cadastradas Copy",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}board/{{IDDiretoria}}",
											"host": [
												"{{url}}board"
											],
											"path": [
												"{{IDDiretoria}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": null,
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Length",
											"value": "479"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Tue, 05 Aug 2025 19:02:05 GMT"
										},
										{
											"key": "Etag",
											"value": "W/\"1df-IhvRgwkuPCiuljq7zSAmEivyQcg\""
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										}
									],
									"cookie": [],
									"body": "{\n    \"board\": {\n        \"_id\": \"6891439be56b350eb66f1a42\",\n        \"boardName\": \"Segurança\",\n        \"boardCode\": \"01\",\n        \"status\": true,\n        \"audit\": [\n            {\n                \"registeredBy\": {\n                    \"userId\": \"6859b68390bc38a248ffdb0e\",\n                    \"userLogin\": \"sysadmin@qacoders.com\"\n                },\n                \"registrationDate\": \"segunda-feira, 04/08/2025, 20:34:51 BRT\",\n                \"_id\": \"6891439be56b350eb66f1a43\"\n            },\n            {\n                \"updatedBy\": {\n                    \"userId\": \"6859b68390bc38a248ffdb0e\",\n                    \"userLogin\": \"sysadmin@qacoders.com\"\n                },\n                \"updateDate\": \"segunda-feira, 04/08/2025, 20:35:45 BRT\",\n                \"_id\": \"689143d1e56b350eb66f1a59\"\n            }\n        ],\n        \"__v\": 0\n    }\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "Cost Center",
			"item": [
				{
					"name": "CREATE",
					"item": [
						{
							"name": "Campo Centro de Custo Vazio",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagem de falha ao cadastrar Dados\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.error[0]).to.eql(\"O campo 'centro de custos' é obrigatório.\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"costCenterName\": \"\",\r\n  \"boardId\": \"64e51573d94be9062773f6da\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}costCenter/?token={{tokenAdmin}}",
									"host": [
										"{{url}}costCenter"
									],
									"path": [
										""
									],
									"query": [
										{
											"key": "token",
											"value": "{{tokenAdmin}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Centro de custo somente com letras",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagem de erro ao cadastrar Dados\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.error[0]).to.eql(\"O campo 'centro de custos' só pode conter letras e o caractere especial '&'.\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"costCenterName\": \"Marketing\",\r\n  \"boardId\": \"64e51573d94be9062773f6da\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}costCenter/?token={{tokenAdmin}}",
									"host": [
										"{{url}}costCenter"
									],
									"path": [
										""
									],
									"query": [
										{
											"key": "token",
											"value": "{{tokenAdmin}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Criar Centro de Custo com Usuário Comum",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagem de falha ao cadastrar Dados\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.error[0]).to.eql(\"O campo 'centro de custos' é obrigatório.\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{tokenUser}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"costCenterName\": \"financeiro\",\r\n  \"boardId\": \"64e51573d94be9062773f6da\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}costCenter/?token={{TokenUser}}",
									"host": [
										"{{url}}costCenter"
									],
									"path": [
										""
									],
									"query": [
										{
											"key": "token",
											"value": "{{TokenUser}}"
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Departament",
			"item": []
		},
		{
			"name": "Client",
			"item": []
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "key",
				"value": "Authorization",
				"type": "string"
			},
			{
				"key": "value",
				"value": "{{tokenAdmin}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	]
}